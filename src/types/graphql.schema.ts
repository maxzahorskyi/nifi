/* tslint:disable */
/* eslint-disable */
import { GraphQLResolveInfo, GraphQLScalarType } from 'graphql';
/**
 * This file is auto-generated by graphql-schema-typescript
 * Please note that any changes in this file may be overwritten
 */
 

/*******************************
 *                             *
 *          TYPE DEFS          *
 *                             *
 *******************************/
export interface GQLBlockchainNetworkMainQueryInput {
  browser_lte?: string;
  endpoint?: string;
  endpoint_lt?: string;
  OR?: Array<GQLBlockchainNetworkMainQueryInput>;
  endpoint_nin?: Array<string | null>;
  endpoint_lte?: string;
  browser_ne?: string;
  endpoint_gte?: string;
  endpoint_gt?: string;
  browser?: string;
  browser_in?: Array<string | null>;
  endpoint_ne?: string;
  browser_gte?: string;
  endpoint_exists?: boolean;
  endpoint_in?: Array<string | null>;
  browser_exists?: boolean;
  browser_gt?: string;
  browser_lt?: string;
  browser_nin?: Array<string | null>;
  AND?: Array<GQLBlockchainNetworkMainQueryInput>;
}

export interface GQLEventMessage {
  eventName?: string;
  parsingTime?: number;
  senderAddress?: string;
  superType?: string;
  time?: number;
  txHash?: string;
}

export interface GQLLocaleQueryInput {
  moduleName_nin?: Array<string | null>;
  lang?: string;
  _id_ne?: GQLObjectId;
  stringName_lte?: string;
  stringName_gt?: string;
  module?: GQLModuleQueryInput;
  updatedAt?: number;
  string_gte?: string;
  createdAt_in?: Array<number | null>;
  string_exists?: boolean;
  _id_gt?: GQLObjectId;
  createdAt_lte?: number;
  _id_nin?: Array<GQLObjectId | null>;
  lang_ne?: string;
  moduleName_ne?: string;
  moduleName_exists?: boolean;
  lang_lt?: string;
  stringName_nin?: Array<string | null>;
  OR?: Array<GQLLocaleQueryInput>;
  string_lte?: string;
  lang_nin?: Array<string | null>;
  createdAt_gte?: number;
  moduleName_gte?: string;
  lang_in?: Array<string | null>;
  module_exists?: boolean;
  string_ne?: string;
  lang_lte?: string;
  _id_in?: Array<GQLObjectId | null>;
  moduleName?: string;
  lang_exists?: boolean;
  stringName_gte?: string;
  moduleName_gt?: string;
  moduleName_in?: Array<string | null>;
  _id_exists?: boolean;
  updatedAt_exists?: boolean;
  updatedAt_in?: Array<number | null>;
  stringName_exists?: boolean;
  createdAt_exists?: boolean;
  _id_gte?: GQLObjectId;
  updatedAt_gte?: number;
  _id?: GQLObjectId;
  lang_gte?: string;
  AND?: Array<GQLLocaleQueryInput>;
  createdAt_ne?: number;
  stringName_ne?: string;
  updatedAt_gt?: number;
  updatedAt_lte?: number;
  string?: string;
  updatedAt_lt?: number;
  moduleName_lt?: string;
  string_gt?: string;
  lang_gt?: string;
  createdAt_gt?: number;
  stringName_lt?: string;
  createdAt_nin?: Array<number | null>;
  moduleName_lte?: string;
  string_nin?: Array<string | null>;
  stringName_in?: Array<string | null>;
  stringName?: string;
  _id_lte?: GQLObjectId;
  string_lt?: string;
  updatedAt_nin?: Array<number | null>;
  updatedAt_ne?: number;
  createdAt_lt?: number;
  string_in?: Array<string | null>;
  _id_lt?: GQLObjectId;
  createdAt?: number;
}

export interface GQLUserIntegrationInsertInput {
  shadowAddresses?: Array<string | null>;
  name?: string;
  priority?: number;
}

export interface GQLSessionUpdateInput {
  _id?: GQLObjectId;
  integrationCode?: string;
  swiftMessageTime_unset?: boolean;
  updatedAt?: number;
  _id_unset?: boolean;
  accountNumberObject_unset?: boolean;
  createdAt?: number;
  cookiesHash_unset?: boolean;
  createdAt_inc?: number;
  updatedAt_inc?: number;
  createdAt_unset?: boolean;
  address?: string;
  confirmationHash_unset?: boolean;
  isExpired?: boolean;
  swiftMessageTime_inc?: number;
  cookiesHash?: string;
  updatedAt_unset?: boolean;
  isExpired_unset?: boolean;
  confirmationHash?: string;
  swiftMessageTime?: number;
  accountNumberObject?: GQLSessionAccountNumberObjectRelationInput;
  integrationCode_unset?: boolean;
  address_unset?: boolean;
}

export interface GQLContract_typeParameterInsertInput {
  likesLevel?: string;
  sharesLevel?: string;
  hashLevel?: string;
}

export interface GQLUserMergedAccount {
  accountNumber?: number;
  status?: string;
}

export interface GQLActionColTokenAttributeQueryInput {
  seriesCreator_lt?: string;
  seriesCreator_nin?: Array<string | null>;
  AND?: Array<GQLActionColTokenAttributeQueryInput>;
  tokenID_nin?: Array<string | null>;
  seriesID_gt?: string;
  tokenID_in?: Array<string | null>;
  tokenID_ne?: string;
  seriesCreator_gt?: string;
  seriesID_exists?: boolean;
  seriesCreator_ne?: string;
  seriesID_lte?: string;
  seriesCreator_exists?: boolean;
  seriesCreator?: string;
  seriesCreator_in?: Array<string | null>;
  seriesCreator_lte?: string;
  seriesID_lt?: string;
  OR?: Array<GQLActionColTokenAttributeQueryInput>;
  tokenID_lt?: string;
  tokenID_exists?: boolean;
  tokenID_gt?: string;
  tokenID_lte?: string;
  seriesID_gte?: string;
  seriesID_ne?: string;
  seriesID?: string;
  tokenID?: string;
  seriesID_nin?: Array<string | null>;
  seriesID_in?: Array<string | null>;
  tokenID_gte?: string;
  seriesCreator_gte?: string;
}

export interface GQLActionCol {
  _id?: GQLObjectId;
  actionAttributes?: GQLActionColActionAttribute;
  message?: GQLActionColMessage;
  tokenAttributes?: GQLActionColTokenAttribute;
}

export interface GQLSeriesRaw {
  blockchain?: string;
  collectionID?: string;
  creator?: string;
  creatorFees?: string;
  description?: string;
  hash?: string;
  media?: Array<GQLSeriesRawMedium | null>;
  numberOfEditions?: number;
  qualification?: number;
  superType?: string;
  title?: string;
  type?: string;
  usersWhoShared?: Array<number | null>;
}

export interface GQLCol1LayerImageQueryInput {
  height_gte?: number;
  width_ne?: number;
  hash_in?: Array<string | null>;
  width_nin?: Array<number | null>;
  height_gt?: number;
  weight_exists?: boolean;
  mimetype_exists?: boolean;
  weight_in?: Array<number | null>;
  rarity_gte?: number;
  hash_gt?: string;
  hash_gte?: string;
  rarity_exists?: boolean;
  height_lte?: number;
  mimetype?: string;
  mimetype_lt?: string;
  mimetype_gt?: string;
  hash_ne?: string;
  weight_gte?: number;
  mimetype_lte?: string;
  mimetype_nin?: Array<string | null>;
  hash_exists?: boolean;
  mimetype_gte?: string;
  height?: number;
  hash?: string;
  weight?: number;
  AND?: Array<GQLCol1LayerImageQueryInput>;
  weight_gt?: number;
  rarity_ne?: number;
  rarity_gt?: number;
  height_exists?: boolean;
  subtitle?: string;
  height_nin?: Array<number | null>;
  weight_ne?: number;
  height_lt?: number;
  height_in?: Array<number | null>;
  width_lt?: number;
  mimetype_in?: Array<string | null>;
  subtitle_lte?: string;
  weight_nin?: Array<number | null>;
  subtitle_exists?: boolean;
  rarity_in?: Array<number | null>;
  weight_lte?: number;
  hash_lte?: string;
  subtitle_gte?: string;
  subtitle_gt?: string;
  rarity_lte?: number;
  subtitle_nin?: Array<string | null>;
  width_gt?: number;
  width_in?: Array<number | null>;
  weight_lt?: number;
  width_exists?: boolean;
  mimetype_ne?: string;
  subtitle_lt?: string;
  hash_lt?: string;
  subtitle_in?: Array<string | null>;
  height_ne?: number;
  subtitle_ne?: string;
  rarity_lt?: number;
  width?: number;
  hash_nin?: Array<string | null>;
  rarity?: number;
  width_gte?: number;
  rarity_nin?: Array<number | null>;
  OR?: Array<GQLCol1LayerImageQueryInput>;
  width_lte?: number;
}

export interface GQLBlockchainNetworkUpdateInput {
  main?: GQLBlockchainNetworkMainUpdateInput;
  main_unset?: boolean;
  test?: GQLBlockchainNetworkTestUpdateInput;
  test_unset?: boolean;
}

export interface GQLTokenRawMediumQueryInput {
  ipfsHash?: string;
  hash_gt?: string;
  mimetype?: string;
  subtitle_gte?: string;
  role_ne?: string;
  subtitle_gt?: string;
  hash?: string;
  height_gte?: number;
  weight_gte?: number;
  hash_nin?: Array<string | null>;
  subtitle_nin?: Array<string | null>;
  hash_exists?: boolean;
  hash_ne?: string;
  weight_gt?: number;
  OR?: Array<GQLTokenRawMediumQueryInput>;
  height_nin?: Array<number | null>;
  height_exists?: boolean;
  subtitle_exists?: boolean;
  width_nin?: Array<number | null>;
  role_gt?: string;
  weight_in?: Array<number | null>;
  subtitle_lt?: string;
  weight_nin?: Array<number | null>;
  role_exists?: boolean;
  ipfsHash_in?: Array<string | null>;
  mimetype_lte?: string;
  subtitle_in?: Array<string | null>;
  role_gte?: string;
  weight_lte?: number;
  weight_exists?: boolean;
  mimetype_ne?: string;
  width_lte?: number;
  subtitle_lte?: string;
  height_ne?: number;
  mimetype_lt?: string;
  width_in?: Array<number | null>;
  height_in?: Array<number | null>;
  mimetype_exists?: boolean;
  ipfsHash_gte?: string;
  height?: number;
  height_lt?: number;
  ipfsHash_ne?: string;
  ipfsHash_nin?: Array<string | null>;
  hash_lt?: string;
  role_lte?: string;
  ipfsHash_lte?: string;
  role_lt?: string;
  mimetype_gte?: string;
  role_in?: Array<string | null>;
  ipfsHash_gt?: string;
  mimetype_nin?: Array<string | null>;
  width?: number;
  width_exists?: boolean;
  mimetype_in?: Array<string | null>;
  role_nin?: Array<string | null>;
  mimetype_gt?: string;
  width_gte?: number;
  AND?: Array<GQLTokenRawMediumQueryInput>;
  height_gt?: number;
  height_lte?: number;
  ipfsHash_exists?: boolean;
  weight_lt?: number;
  width_lt?: number;
  hash_lte?: string;
  hash_gte?: string;
  weight_ne?: number;
  width_gt?: number;
  subtitle_ne?: string;
  width_ne?: number;
  subtitle?: string;
  role?: string;
  hash_in?: Array<string | null>;
  weight?: number;
  ipfsHash_lt?: string;
}

export interface GQLTokenDeployedSeriesIDRelationInput {
  link?: string;
  create?: GQLSeriesInsertInput;
}

export interface GQLUserUpdateInput {
  language?: string;
  nickname?: string;
  nickname_unset?: boolean;
  walletAddress?: string;
  createdAt_inc?: number;
  createdAt_unset?: boolean;
  accountNumber?: number;
  registeredWallet_unset?: boolean;
  photoHash_unset?: boolean;
  managingAccount_unset?: boolean;
  defaultWallet?: string;
  _id_unset?: boolean;
  settings?: GQLUserSettingUpdateInput;
  managingAccount_inc?: number;
  language_unset?: boolean;
  avatarHash?: string;
  avatarHash_unset?: boolean;
  qualification_unset?: boolean;
  about?: string;
  blockchain_unset?: boolean;
  mergedAccounts_unset?: boolean;
  accountNumber_inc?: number;
  managingAccount?: number;
  username?: string;
  updatedAt?: number;
  mergedAccounts?: Array<GQLUserMergedAccountUpdateInput | null>;
  registeredWallet?: string;
  defaultWallet_unset?: boolean;
  wallpaperHash?: string;
  integrations_unset?: boolean;
  username_unset?: boolean;
  _id?: GQLObjectId;
  integrations?: Array<GQLUserIntegrationUpdateInput | null>;
  walletAddress_unset?: boolean;
  wallpaperHash_unset?: boolean;
  qualification?: number;
  photoHash?: string;
  qualification_inc?: number;
  about_unset?: boolean;
  blockchain?: string;
  settings_unset?: boolean;
  createdAt?: number;
  updatedAt_unset?: boolean;
  accountNumber_unset?: boolean;
  updatedAt_inc?: number;
}

export interface GQLCol1UpdateInput {
  layers?: Array<GQLCol1LayerUpdateInput | null>;
  supply?: number;
  maximum_inc?: number;
  hash?: string;
  mintCost_inc?: number;
  name_unset?: boolean;
  description?: string;
  creator?: string;
  createdAt_unset?: boolean;
  _id_unset?: boolean;
  address?: string;
  maximum_unset?: boolean;
  createdAt_inc?: number;
  layers_unset?: boolean;
  creator_unset?: boolean;
  updatedAt_inc?: number;
  address_unset?: boolean;
  mintCost?: number;
  description_unset?: boolean;
  updatedAt?: number;
  name?: string;
  maximum?: number;
  mintCost_unset?: boolean;
  createdAt?: number;
  updatedAt_unset?: boolean;
  hash_unset?: boolean;
  _id?: GQLObjectId;
  supply_inc?: number;
  seriesId_unset?: boolean;
  supply_unset?: boolean;
  seriesId?: string;
}

export interface GQLLikeQueryInput {
  userAccountNumber_nin?: Array<number | null>;
  _id?: GQLObjectId;
  _id_lt?: GQLObjectId;
  tokenID_lte?: string;
  status_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  _id_lte?: GQLObjectId;
  userAccountNumber_exists?: boolean;
  seriesID_nin?: Array<string | null>;
  seriesID_in?: Array<string | null>;
  userAccountNumber?: number;
  seriesID?: string;
  tokenID_ne?: string;
  seriesID_gt?: string;
  tokenID_lt?: string;
  AND?: Array<GQLLikeQueryInput>;
  _id_exists?: boolean;
  seriesID_gte?: string;
  tokenID_in?: Array<string | null>;
  userAccountNumber_lt?: number;
  userAccountNumber_gt?: number;
  status_ne?: boolean;
  userAccountNumber_in?: Array<number | null>;
  tokenID?: string;
  seriesID_lte?: string;
  _id_gte?: GQLObjectId;
  userAccountNumber_ne?: number;
  seriesID_exists?: boolean;
  tokenID_gte?: string;
  _id_in?: Array<GQLObjectId | null>;
  status?: boolean;
  tokenID_exists?: boolean;
  seriesID_lt?: string;
  tokenID_nin?: Array<string | null>;
  userAccountNumber_lte?: number;
  OR?: Array<GQLLikeQueryInput>;
  seriesID_ne?: string;
  _id_ne?: GQLObjectId;
  userAccountNumber_gte?: number;
  tokenID_gt?: string;
  _id_gt?: GQLObjectId;
}

export enum GQLActionSortByInput {
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC'
}

export interface GQLPaginationModule {
  limit?: number;
  skip?: number;
}

export interface GQLAddress_abiUpdateInput {
  _id_unset?: boolean;
  address?: string;
  address_unset?: boolean;
  level?: string;
  level_unset?: boolean;
  superType?: string;
  superType_unset?: boolean;
  _id?: GQLObjectId;
}

export interface GQLOpendatumPermissionInsertInput {
  functions?: Array<string | null>;
  root?: string;
}

export interface GQLBidDeployedQueryInput {
  bidAddress?: string;
  status_in?: Array<string | null>;
  endTime_exists?: boolean;
  tokenAddress_lte?: string;
  tokenAddress_nin?: Array<string | null>;
  tokenID_gte?: string;
  bidAddress_exists?: boolean;
  bidAddress_gte?: string;
  tokenID_lte?: string;
  bidAddress_nin?: Array<string | null>;
  endTime_nin?: Array<number | null>;
  status_nin?: Array<string | null>;
  tokenAddress_lt?: string;
  bidValue_ne?: string;
  superType?: string;
  endTime?: number;
  bidValue_lt?: string;
  bidAddress_lte?: string;
  bidCreator_gte?: string;
  bidValue_exists?: boolean;
  bidCreator_lt?: string;
  tokenID_nin?: Array<string | null>;
  tokenID_gt?: string;
  tokenAddress_in?: Array<string | null>;
  bidCreator_lte?: string;
  OR?: Array<GQLBidDeployedQueryInput>;
  bidValue_gte?: string;
  status_ne?: string;
  bidValue_nin?: Array<string | null>;
  bidCreator_exists?: boolean;
  bidCreator_nin?: Array<string | null>;
  status_lte?: string;
  superType_exists?: boolean;
  bidCreator_gt?: string;
  bidValue_in?: Array<string | null>;
  tokenAddress_ne?: string;
  bidCreator_ne?: string;
  status_gt?: string;
  status_exists?: boolean;
  superType_ne?: string;
  bidValue?: string;
  superType_lte?: string;
  status?: string;
  AND?: Array<GQLBidDeployedQueryInput>;
  tokenID_lt?: string;
  endTime_lte?: number;
  status_gte?: string;
  endTime_gt?: number;
  tokenID?: string;
  tokenID_ne?: string;
  tokenID_exists?: boolean;
  bidValue_lte?: string;
  endTime_ne?: number;
  status_lt?: string;
  superType_nin?: Array<string | null>;
  tokenAddress_exists?: boolean;
  bidAddress_ne?: string;
  tokenAddress?: string;
  tokenAddress_gte?: string;
  bidAddress_in?: Array<string | null>;
  bidValue_gt?: string;
  tokenID_in?: Array<string | null>;
  bidAddress_gt?: string;
  superType_gt?: string;
  tokenAddress_gt?: string;
  endTime_in?: Array<number | null>;
  superType_lt?: string;
  superType_in?: Array<string | null>;
  bidCreator?: string;
  endTime_lt?: number;
  superType_gte?: string;
  endTime_gte?: number;
  bidAddress_lt?: string;
  bidCreator_in?: Array<string | null>;
}

export interface GQLOpendatum {
  _id?: GQLObjectId;
  createdAt?: number;
  key?: string;
  permissions?: Array<GQLOpendatumPermission | null>;
  updatedAt?: number;
}

export enum GQLAskSortByInput {
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  ASKID_ASC = 'ASKID_ASC',
  ASKID_DESC = 'ASKID_DESC'
}

export interface GQLContract_typeHashFieldMediumUpdateInput {
  weight?: string;
  subtitle?: string;
  hash?: string;
  height_unset?: boolean;
  mimetype?: string;
  role_unset?: boolean;
  weight_unset?: boolean;
  width_unset?: boolean;
  subtitle_unset?: boolean;
  hash_unset?: boolean;
  height?: string;
  role?: string;
  mimetype_unset?: boolean;
  width?: string;
}

export interface GQLTokenDeployed {
  address?: string;
  blockchain?: string;
  collectionID?: string;
  creator?: string;
  creatorFees?: string;
  creatorObject?: GQLUser;
  foreverID?: string;
  foreverStatus?: string;
  frontStatus?: string;
  hash?: string;
  index?: number;
  isEndorsed?: boolean;
  lastSalePrice?: number;
  lastSaleTime?: number;
  manager?: string;
  managerExpirationTime?: number;
  owner?: string;
  ownerObject?: GQLUser;
  seal?: string;
  sealPosition?: string;
  seriesID?: GQLSeries;
  seriesObject?: GQLSeries;
  stamps?: Array<GQLTokenDeployedStamp | null>;
  superType?: string;
  type?: string;
}

export enum GQLSessionSortByInput {
  INTEGRATIONCODE_ASC = 'INTEGRATIONCODE_ASC',
  COOKIESHASH_DESC = 'COOKIESHASH_DESC',
  ACCOUNTNUMBEROBJECT_ASC = 'ACCOUNTNUMBEROBJECT_ASC',
  _ID_DESC = '_ID_DESC',
  ADDRESS_DESC = 'ADDRESS_DESC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  COOKIESHASH_ASC = 'COOKIESHASH_ASC',
  SWIFTMESSAGETIME_ASC = 'SWIFTMESSAGETIME_ASC',
  SWIFTMESSAGETIME_DESC = 'SWIFTMESSAGETIME_DESC',
  ACCOUNTNUMBEROBJECT_DESC = 'ACCOUNTNUMBEROBJECT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  _ID_ASC = '_ID_ASC',
  CONFIRMATIONHASH_ASC = 'CONFIRMATIONHASH_ASC',
  CONFIRMATIONHASH_DESC = 'CONFIRMATIONHASH_DESC',
  ADDRESS_ASC = 'ADDRESS_ASC',
  INTEGRATIONCODE_DESC = 'INTEGRATIONCODE_DESC'
}

export interface GQLActionTokenAttributeSeriesIDRelationInput {
  create?: GQLSeriesInsertInput;
  link?: string;
}

export interface GQLFormatUpdateInput {
  width?: number;
  width_inc?: number;
  _id_unset?: boolean;
  formatName?: string;
  formatName_unset?: boolean;
  _id?: GQLObjectId;
  height_inc?: number;
  width_unset?: boolean;
  height_unset?: boolean;
  height?: number;
}

export interface GQLSwift_messageUpdateInput {
  parameters_unset?: boolean;
  message_unset?: boolean;
  hash?: string;
  updatedAt?: number;
  updatedAt_inc?: number;
  _id?: GQLObjectId;
  status?: string;
  createdAt_unset?: boolean;
  _id_unset?: boolean;
  createdAt?: number;
  parameters?: GQLSwift_messageParameterUpdateInput;
  message?: GQLSwift_messageMessageUpdateInput;
  updatedAt_unset?: boolean;
  status_unset?: boolean;
  createdAt_inc?: number;
  hash_unset?: boolean;
}

export interface GQLEventParameterQueryInput {
  sealAddress_exists?: boolean;
  masterAddress?: string;
  tokenAddress?: string;
  masterAddress_exists?: boolean;
  masterAddress_gte?: string;
  expiresAt_in?: Array<number | null>;
  sealPossibleCorners_lte?: number;
  masterAddress_lt?: string;
  tokenAddress_lt?: string;
  sealPossibleCorners_in?: Array<number | null>;
  expiresAt_ne?: number;
  sealPossibleCorners?: number;
  price_gte?: number;
  sealPossibleCorners_gte?: number;
  expiresAt_lt?: number;
  tokenNftId_lt?: number;
  masterNftId_lte?: number;
  price?: number;
  price_nin?: Array<number | null>;
  tokenAddress_gte?: string;
  sealAddress_in?: Array<string | null>;
  tokenNftId_ne?: number;
  sealPossibleCorners_nin?: Array<number | null>;
  tokenNftId?: number;
  sealNftId_gte?: number;
  tokenAddress_lte?: string;
  masterNftId_lt?: number;
  sealNftId_lte?: number;
  expiresAt?: number;
  masterAddress_gt?: string;
  sealPossibleCorners_exists?: boolean;
  sealPossibleCorners_gt?: number;
  price_ne?: number;
  masterAddress_lte?: string;
  sealNftId_in?: Array<number | null>;
  sealNftId_ne?: number;
  price_exists?: boolean;
  expiresAt_gte?: number;
  masterNftId_gt?: number;
  price_in?: Array<number | null>;
  masterNftId?: number;
  tokenAddress_gt?: string;
  tokenNftId_exists?: boolean;
  expiresAt_nin?: Array<number | null>;
  price_gt?: number;
  sealAddress_ne?: string;
  masterNftId_gte?: number;
  price_lte?: number;
  OR?: Array<GQLEventParameterQueryInput>;
  sealAddress?: string;
  sealAddress_gt?: string;
  masterNftId_nin?: Array<number | null>;
  sealAddress_gte?: string;
  sealAddress_nin?: Array<string | null>;
  sealNftId_exists?: boolean;
  masterAddress_in?: Array<string | null>;
  tokenNftId_gte?: number;
  sealNftId_lt?: number;
  sealAddress_lt?: string;
  tokenAddress_exists?: boolean;
  sealNftId_gt?: number;
  expiresAt_gt?: number;
  sealNftId_nin?: Array<number | null>;
  tokenAddress_nin?: Array<string | null>;
  tokenNftId_lte?: number;
  sealPossibleCorners_lt?: number;
  sealNftId?: number;
  expiresAt_exists?: boolean;
  AND?: Array<GQLEventParameterQueryInput>;
  sealAddress_lte?: string;
  masterAddress_nin?: Array<string | null>;
  masterAddress_ne?: string;
  expiresAt_lte?: number;
  masterNftId_in?: Array<number | null>;
  tokenNftId_gt?: number;
  tokenAddress_ne?: string;
  tokenNftId_in?: Array<number | null>;
  sealPossibleCorners_ne?: number;
  masterNftId_ne?: number;
  tokenNftId_nin?: Array<number | null>;
  masterNftId_exists?: boolean;
  price_lt?: number;
  tokenAddress_in?: Array<string | null>;
}

export interface GQLNew_session {
  _id?: GQLObjectId;
  token?: string;
  walletAddress?: string;
}

export interface GQLAskRawInsertInput {
  tokenID?: string;
  blockchain?: string;
  currentAskValue?: string;
  superType?: string;
  showcaseFee?: string;
  values?: Array<GQLAskRawValueInsertInput | null>;
  endTime?: number;
  tokenAddress?: string;
  askCreator?: string;
}

export enum GQLUi_chartSortByInput {
  FIELD_DESC = 'FIELD_DESC',
  FUNCTION_ASC = 'FUNCTION_ASC',
  SORT_DESC = 'SORT_DESC',
  MODULEID_DESC = 'MODULEID_DESC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  FUNCTION_DESC = 'FUNCTION_DESC',
  LIMIT_DESC = 'LIMIT_DESC',
  LINKSUFFIX_DESC = 'LINKSUFFIX_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  DATAOBJECT_DESC = 'DATAOBJECT_DESC',
  OUTPUTOBJECT_ASC = 'OUTPUTOBJECT_ASC',
  FIELD_ASC = 'FIELD_ASC',
  SORT_ASC = 'SORT_ASC',
  AIRTABLEID_DESC = 'AIRTABLEID_DESC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  NAME_DESC = 'NAME_DESC',
  AGGREGATIONFIELD_ASC = 'AGGREGATIONFIELD_ASC',
  OUTPUTOBJECT_DESC = 'OUTPUTOBJECT_DESC',
  AGGREGATIONFIELD_DESC = 'AGGREGATIONFIELD_DESC',
  LIMIT_ASC = 'LIMIT_ASC',
  _ID_ASC = '_ID_ASC',
  MODULEID_ASC = 'MODULEID_ASC',
  DATAOBJECT_ASC = 'DATAOBJECT_ASC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  NAME_ASC = 'NAME_ASC',
  LINKSUFFIX_ASC = 'LINKSUFFIX_ASC',
  AIRTABLEID_ASC = 'AIRTABLEID_ASC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLBidDeployedUpdateInput {
  tokenID?: string;
  bidAddress?: string;
  status_unset?: boolean;
  bidCreator?: string;
  status?: string;
  superType?: string;
  endTime?: number;
  bidValue?: string;
  endTime_unset?: boolean;
  endTime_inc?: number;
  tokenAddress?: string;
  tokenAddress_unset?: boolean;
  bidAddress_unset?: boolean;
  bidCreator_unset?: boolean;
  superType_unset?: boolean;
  bidValue_unset?: boolean;
  tokenID_unset?: boolean;
}

export interface GQLContract_typeHashFieldLayerUpdateInput {
  images_unset?: boolean;
  layerIndex?: string;
  layerIndex_unset?: boolean;
  images?: GQLContract_typeHashFieldLayerImageUpdateInput;
}

export interface GQLCollectionCount {
  creator?: string;
  search?: string;
  created_lt?: number;
}

export interface GQLSeriesDeployedInsertInput {
  address?: string;
  creatorFees?: string;
  hash?: string;
  maximum?: number;
  superType?: string;
  supply?: number;
  blockchain?: string;
  creator?: string;
  owner?: string;
  type?: string;
}

export interface GQLBlockchainNetworkMainInsertInput {
  browser?: string;
  endpoint?: string;
}

export interface GQLNetworkInsertInput {
  _id?: GQLObjectId;
  integration?: string;
  name?: string;
  type?: string;
}

export interface GQLCollectionMediumQueryInput {
  mimetype_lte?: string;
  role?: string;
  height_lte?: number;
  hash_lt?: string;
  height_ne?: number;
  mimetype_lt?: string;
  subtitle_exists?: boolean;
  width?: number;
  role_gt?: string;
  mimetype_gte?: string;
  hash?: string;
  weight_gte?: number;
  height_exists?: boolean;
  weight_exists?: boolean;
  mimetype?: string;
  width_lt?: number;
  weight_nin?: Array<number | null>;
  mimetype_exists?: boolean;
  hash_gte?: string;
  subtitle_lt?: string;
  height_in?: Array<number | null>;
  mimetype_nin?: Array<string | null>;
  hash_gt?: string;
  mimetype_ne?: string;
  role_gte?: string;
  mimetype_gt?: string;
  weight_ne?: number;
  width_exists?: boolean;
  hash_in?: Array<string | null>;
  weight_lt?: number;
  weight_in?: Array<number | null>;
  subtitle_gte?: string;
  weight_lte?: number;
  subtitle_nin?: Array<string | null>;
  OR?: Array<GQLCollectionMediumQueryInput>;
  weight?: number;
  width_nin?: Array<number | null>;
  width_lte?: number;
  height_nin?: Array<number | null>;
  role_lt?: string;
  width_gte?: number;
  subtitle_ne?: string;
  height_gte?: number;
  subtitle_gt?: string;
  width_ne?: number;
  height_lt?: number;
  hash_ne?: string;
  role_nin?: Array<string | null>;
  weight_gt?: number;
  width_gt?: number;
  height_gt?: number;
  hash_exists?: boolean;
  hash_lte?: string;
  role_ne?: string;
  hash_nin?: Array<string | null>;
  subtitle_lte?: string;
  mimetype_in?: Array<string | null>;
  height?: number;
  role_in?: Array<string | null>;
  AND?: Array<GQLCollectionMediumQueryInput>;
  role_exists?: boolean;
  subtitle_in?: Array<string | null>;
  role_lte?: string;
  subtitle?: string;
  width_in?: Array<number | null>;
}

export interface GQLDailyQueryInput {
  totalSalesSum_nin?: Array<number | null>;
  endorsementAverage_nin?: Array<number | null>;
  endorsementAverage_gte?: number;
  totalSum_ne?: number;
  date_ne?: number;
  endorsementMin_gte?: number;
  _id_exists?: boolean;
  endorsementMax_nin?: Array<number | null>;
  saleAverage_in?: Array<number | null>;
  date_lt?: number;
  saleMin_lt?: number;
  OR?: Array<GQLDailyQueryInput>;
  saleAverage_ne?: number;
  saleMax_lte?: number;
  date_nin?: Array<number | null>;
  saleAverage_lt?: number;
  tokensCreated_exists?: boolean;
  totalSalesSum_exists?: boolean;
  saleAverage?: number;
  saleAverage_exists?: boolean;
  saleMax_lt?: number;
  totalSalesSum_ne?: number;
  updatedAt?: number;
  endorsementMax_lt?: number;
  endorsementMax_gt?: number;
  totalSalesSum_lt?: number;
  totalEndorsementsSum_in?: Array<number | null>;
  createdAt_gte?: number;
  endorsementAverage_gt?: number;
  _id_ne?: GQLObjectId;
  tokensSold_exists?: boolean;
  saleMin?: number;
  updatedAt_gt?: number;
  saleMin_ne?: number;
  endorsementMax_exists?: boolean;
  totalSum_gt?: number;
  tokensSold?: number;
  tokensCreated_lte?: number;
  saleMin_exists?: boolean;
  saleMin_in?: Array<number | null>;
  totalSalesSum?: number;
  date_in?: Array<number | null>;
  updatedAt_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  totalSum_in?: Array<number | null>;
  totalEndorsementsSum?: number;
  endorsementMin_lte?: number;
  blockchain_ne?: string;
  blockchain_lte?: string;
  blockchain_nin?: Array<string | null>;
  tokensSold_lte?: number;
  updatedAt_gte?: number;
  updatedAt_nin?: Array<number | null>;
  endorsementMin_ne?: number;
  date_gte?: number;
  blockchain_gte?: string;
  createdAt_lt?: number;
  date_exists?: boolean;
  saleMin_gt?: number;
  AND?: Array<GQLDailyQueryInput>;
  tokensCreated_gte?: number;
  saleMin_nin?: Array<number | null>;
  endorsementAverage?: number;
  endorsementAverage_ne?: number;
  date?: number;
  tokensCreated?: number;
  endorsementMax_gte?: number;
  totalSum_nin?: Array<number | null>;
  tokensSold_lt?: number;
  tokensCreated_gt?: number;
  tokensCreated_in?: Array<number | null>;
  updatedAt_in?: Array<number | null>;
  tokensEndorsed_in?: Array<number | null>;
  tokensSold_in?: Array<number | null>;
  tokensEndorsed_gte?: number;
  endorsementMax_lte?: number;
  tokensEndorsed?: number;
  saleMax_in?: Array<number | null>;
  tokensEndorsed_ne?: number;
  tokensCreated_lt?: number;
  endorsementMin?: number;
  tokensEndorsed_lte?: number;
  saleMax_gt?: number;
  _id?: GQLObjectId;
  tokensSold_ne?: number;
  blockchain_exists?: boolean;
  updatedAt_ne?: number;
  totalEndorsementsSum_exists?: boolean;
  endorsementMin_exists?: boolean;
  totalSum?: number;
  totalSalesSum_lte?: number;
  createdAt_nin?: Array<number | null>;
  createdAt_gt?: number;
  totalSum_exists?: boolean;
  blockchain?: string;
  _id_lt?: GQLObjectId;
  blockchain_gt?: string;
  endorsementMin_nin?: Array<number | null>;
  endorsementAverage_in?: Array<number | null>;
  _id_in?: Array<GQLObjectId | null>;
  saleMax_nin?: Array<number | null>;
  tokensSold_gt?: number;
  tokensEndorsed_gt?: number;
  _id_gte?: GQLObjectId;
  updatedAt_lt?: number;
  totalEndorsementsSum_ne?: number;
  totalEndorsementsSum_gte?: number;
  createdAt?: number;
  _id_gt?: GQLObjectId;
  blockchain_in?: Array<string | null>;
  totalSum_lte?: number;
  saleAverage_gt?: number;
  endorsementAverage_lt?: number;
  endorsementMax_ne?: number;
  endorsementMin_lt?: number;
  totalSalesSum_gt?: number;
  tokensEndorsed_lt?: number;
  tokensSold_gte?: number;
  _id_lte?: GQLObjectId;
  totalSalesSum_in?: Array<number | null>;
  saleMin_gte?: number;
  endorsementMin_gt?: number;
  saleMax_exists?: boolean;
  saleAverage_nin?: Array<number | null>;
  tokensEndorsed_nin?: Array<number | null>;
  totalEndorsementsSum_lt?: number;
  totalSum_lt?: number;
  saleAverage_gte?: number;
  tokensCreated_ne?: number;
  tokensCreated_nin?: Array<number | null>;
  endorsementMin_in?: Array<number | null>;
  blockchain_lt?: string;
  saleMax_ne?: number;
  totalSum_gte?: number;
  endorsementAverage_exists?: boolean;
  endorsementMax_in?: Array<number | null>;
  updatedAt_lte?: number;
  totalSalesSum_gte?: number;
  createdAt_lte?: number;
  date_lte?: number;
  saleMin_lte?: number;
  tokensEndorsed_exists?: boolean;
  totalEndorsementsSum_gt?: number;
  saleMax_gte?: number;
  totalEndorsementsSum_lte?: number;
  createdAt_exists?: boolean;
  createdAt_in?: Array<number | null>;
  createdAt_ne?: number;
  saleMax?: number;
  saleAverage_lte?: number;
  endorsementAverage_lte?: number;
  date_gt?: number;
  endorsementMax?: number;
  totalEndorsementsSum_nin?: Array<number | null>;
  tokensSold_nin?: Array<number | null>;
}

export interface GQLAuctionRawBid {
  bidCreator?: string;
  bidValue?: string;
}

export interface GQLCol1LayerQueryInput {
  layer_exists?: boolean;
  images_in?: Array<GQLCol1LayerImageQueryInput | null>;
  layer_nin?: Array<string | null>;
  points_nin?: Array<GQLCol1LayerPointQueryInput | null>;
  images_exists?: boolean;
  layer_ne?: string;
  layer_in?: Array<string | null>;
  points_exists?: boolean;
  layer_gte?: string;
  OR?: Array<GQLCol1LayerQueryInput>;
  images_nin?: Array<GQLCol1LayerImageQueryInput | null>;
  points_in?: Array<GQLCol1LayerPointQueryInput | null>;
  points?: Array<GQLCol1LayerPointQueryInput | null>;
  layer?: string;
  layer_lte?: string;
  layer_lt?: string;
  AND?: Array<GQLCol1LayerQueryInput>;
  layer_gt?: string;
  images?: Array<GQLCol1LayerImageQueryInput | null>;
}

export interface GQLModuleUpdateInput {
  updatedAt?: number;
  createdAt_unset?: boolean;
  module?: string;
  nameType?: string;
  createdAt_inc?: number;
  updatedAt_unset?: boolean;
  updatedAt_inc?: number;
  type_unset?: boolean;
  createdAt?: number;
  page_unset?: boolean;
  module_unset?: boolean;
  nameType_unset?: boolean;
  _id_unset?: boolean;
  type?: string;
  _id?: GQLObjectId;
  page?: string;
}

export interface GQLTokenCol {
  _id?: GQLObjectId;
  address?: string;
  createdAt?: number;
  images?: Array<GQLTokenColImage | null>;
  merged?: string;
  owner?: string;
  seriesId?: string;
  tokenId?: string;
  updatedAt?: number;
}

export interface GQLSeriesDeployed {
  address?: string;
  blockchain?: string;
  creator?: string;
  creatorFees?: string;
  hash?: string;
  maximum?: number;
  owner?: string;
  superType?: string;
  supply?: number;
  type?: string;
}

export interface GQLCollection {
  _id?: GQLObjectId;
  about?: string;
  collectionID?: string;
  createdAt?: number;
  creator?: string;
  creatorAccountNumber?: number;
  deployed?: GQLCollectionDeployed;
  media?: Array<GQLCollectionMedium | null>;
  qualification?: number;
  raw?: GQLCollectionRaw;
  title?: string;
  tokensInCollection?: number;
  updatedAt?: number;
}

export interface GQLTokenRawQueryInput {
  title_gt?: string;
  seriesID_lte?: string;
  owner_gte?: string;
  type_lte?: string;
  creator_gt?: string;
  type_in?: Array<string | null>;
  creator_exists?: boolean;
  numberOfEditions_in?: Array<number | null>;
  description?: string;
  blockchain_nin?: Array<string | null>;
  title_gte?: string;
  height_in?: Array<string | null>;
  numberOfEditions_gt?: number;
  blockchain_gte?: string;
  hash_gte?: string;
  height_lte?: string;
  numberOfEditions_lt?: number;
  height_exists?: boolean;
  title_lt?: string;
  superType_in?: Array<string | null>;
  creatorFees?: string;
  qualification_ne?: number;
  seriesID_exists?: boolean;
  qualification_nin?: Array<number | null>;
  AND?: Array<GQLTokenRawQueryInput>;
  type_ne?: string;
  hash_exists?: boolean;
  description_lt?: string;
  qualification_exists?: boolean;
  owner_nin?: Array<string | null>;
  width_in?: Array<string | null>;
  seriesID_nin?: Array<string | null>;
  qualification_in?: Array<number | null>;
  height_gt?: string;
  creatorFees_gt?: string;
  blockchain_lte?: string;
  description_ne?: string;
  type_gte?: string;
  collectionID_ne?: string;
  creator_lt?: string;
  description_nin?: Array<string | null>;
  width_lte?: string;
  height_nin?: Array<string | null>;
  width_ne?: string;
  blockchain_exists?: boolean;
  type_exists?: boolean;
  creatorFees_exists?: boolean;
  creator?: string;
  title_exists?: boolean;
  owner_lte?: string;
  owner_in?: Array<string | null>;
  collectionID_gt?: string;
  blockchain_ne?: string;
  height?: string;
  collectionID_in?: Array<string | null>;
  blockchain_gt?: string;
  collectionID?: string;
  superType_exists?: boolean;
  title_lte?: string;
  title_in?: Array<string | null>;
  media_in?: Array<GQLTokenRawMediumQueryInput | null>;
  creator_gte?: string;
  creatorFees_in?: Array<string | null>;
  collectionID_lt?: string;
  superType_lt?: string;
  height_ne?: string;
  owner?: string;
  title_nin?: Array<string | null>;
  seriesID_gt?: string;
  width_exists?: boolean;
  creatorFees_gte?: string;
  type?: string;
  collectionID_exists?: boolean;
  usersWhoShared?: Array<number | null>;
  width_lt?: string;
  owner_exists?: boolean;
  superType_gte?: string;
  height_gte?: string;
  numberOfEditions?: number;
  qualification?: number;
  creatorFees_lte?: string;
  title?: string;
  OR?: Array<GQLTokenRawQueryInput>;
  blockchain_lt?: string;
  owner_ne?: string;
  hash_nin?: Array<string | null>;
  blockchain?: string;
  hash_gt?: string;
  creator_lte?: string;
  numberOfEditions_exists?: boolean;
  seriesID_gte?: string;
  superType_gt?: string;
  superType_lte?: string;
  hash_lt?: string;
  numberOfEditions_ne?: number;
  creatorFees_nin?: Array<string | null>;
  width?: string;
  hash_ne?: string;
  usersWhoShared_in?: Array<number | null>;
  blockchain_in?: Array<string | null>;
  hash?: string;
  width_gt?: string;
  media?: Array<GQLTokenRawMediumQueryInput | null>;
  seriesID?: string;
  width_gte?: string;
  description_gte?: string;
  title_ne?: string;
  numberOfEditions_nin?: Array<number | null>;
  qualification_gt?: number;
  numberOfEditions_gte?: number;
  type_gt?: string;
  usersWhoShared_exists?: boolean;
  type_lt?: string;
  qualification_lte?: number;
  collectionID_nin?: Array<string | null>;
  collectionID_gte?: string;
  width_nin?: Array<string | null>;
  description_in?: Array<string | null>;
  collectionID_lte?: string;
  creator_nin?: Array<string | null>;
  description_lte?: string;
  height_lt?: string;
  owner_lt?: string;
  hash_lte?: string;
  hash_in?: Array<string | null>;
  numberOfEditions_lte?: number;
  type_nin?: Array<string | null>;
  usersWhoShared_nin?: Array<number | null>;
  creatorFees_ne?: string;
  superType_ne?: string;
  seriesID_in?: Array<string | null>;
  superType_nin?: Array<string | null>;
  description_gt?: string;
  superType?: string;
  description_exists?: boolean;
  media_exists?: boolean;
  creatorFees_lt?: string;
  owner_gt?: string;
  media_nin?: Array<GQLTokenRawMediumQueryInput | null>;
  seriesID_lt?: string;
  qualification_gte?: number;
  seriesID_ne?: string;
  creator_ne?: string;
  qualification_lt?: number;
  creator_in?: Array<string | null>;
}

export interface GQLIpfQueryInput {
  mediaHash_gt?: string;
  mediaHash_exists?: boolean;
  _id_lt?: GQLObjectId;
  createdAt_gte?: number;
  _id_lte?: GQLObjectId;
  ipfsHash_in?: Array<string | null>;
  mediaHash_lt?: string;
  AND?: Array<GQLIpfQueryInput>;
  createdAt_gt?: number;
  createdAt_in?: Array<number | null>;
  createdAt?: number;
  ipfsHash_exists?: boolean;
  mediaHash_nin?: Array<string | null>;
  _id_in?: Array<GQLObjectId | null>;
  mediaHash_ne?: string;
  mediaHash_lte?: string;
  ipfsHash_lt?: string;
  _id_nin?: Array<GQLObjectId | null>;
  ipfsHash_gte?: string;
  _id_exists?: boolean;
  _id_gt?: GQLObjectId;
  mediaHash?: string;
  ipfsHash_ne?: string;
  mediaHash_in?: Array<string | null>;
  ipfsHash_lte?: string;
  _id_ne?: GQLObjectId;
  OR?: Array<GQLIpfQueryInput>;
  createdAt_lt?: number;
  createdAt_nin?: Array<number | null>;
  createdAt_lte?: number;
  ipfsHash_gt?: string;
  _id?: GQLObjectId;
  createdAt_ne?: number;
  mediaHash_gte?: string;
  createdAt_exists?: boolean;
  ipfsHash?: string;
  ipfsHash_nin?: Array<string | null>;
  _id_gte?: GQLObjectId;
}

export interface GQLSwift_codeInsertInput {
  code?: string;
  description?: string;
  _id?: GQLObjectId;
  actionCapture?: string;
  actorField?: string;
  additionalInfo?: string;
  applicableBlockchains?: Array<string | null>;
  applicableContractType?: Array<string | null>;
}

export enum GQLLocaleSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  LANG_DESC = 'LANG_DESC',
  MODULENAME_DESC = 'MODULENAME_DESC',
  STRINGNAME_DESC = 'STRINGNAME_DESC',
  STRING_DESC = 'STRING_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  MODULE_ASC = 'MODULE_ASC',
  STRINGNAME_ASC = 'STRINGNAME_ASC',
  STRING_ASC = 'STRING_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  LANG_ASC = 'LANG_ASC',
  MODULE_DESC = 'MODULE_DESC',
  MODULENAME_ASC = 'MODULENAME_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC'
}

export interface GQLRoyaltyQueryInput {
  upperValue_exists?: boolean;
  AND?: Array<GQLRoyaltyQueryInput>;
  upperValue_ne?: number;
  count_lt?: number;
  percentage_gte?: number;
  upperValue_nin?: Array<number | null>;
  _id_gt?: GQLObjectId;
  percentage_exists?: boolean;
  _id_gte?: GQLObjectId;
  lowerValue_nin?: Array<number | null>;
  upperValue_lt?: number;
  upperValue_in?: Array<number | null>;
  percentage_nin?: Array<number | null>;
  lowerValue_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  count?: number;
  count_nin?: Array<number | null>;
  count_gte?: number;
  _id?: GQLObjectId;
  percentage_lte?: number;
  upperValue?: number;
  _id_lte?: GQLObjectId;
  _id_nin?: Array<GQLObjectId | null>;
  count_lte?: number;
  upperValue_gte?: number;
  _id_exists?: boolean;
  percentage_in?: Array<number | null>;
  count_in?: Array<number | null>;
  lowerValue_lte?: number;
  _id_ne?: GQLObjectId;
  lowerValue_in?: Array<number | null>;
  percentage_ne?: number;
  count_exists?: boolean;
  lowerValue_gte?: number;
  count_ne?: number;
  percentage_lt?: number;
  OR?: Array<GQLRoyaltyQueryInput>;
  percentage?: number;
  count_gt?: number;
  upperValue_lte?: number;
  lowerValue_gt?: number;
  upperValue_gt?: number;
  lowerValue_lt?: number;
  lowerValue_ne?: number;
  _id_lt?: GQLObjectId;
  lowerValue?: number;
  percentage_gt?: number;
}

export enum GQLContract_typeSortByInput {
  OBJECTTYPE_ASC = 'OBJECTTYPE_ASC',
  STATUS_ASC = 'STATUS_ASC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  NUMBEROFLEVELS_ASC = 'NUMBEROFLEVELS_ASC',
  LONGTYPE_DESC = 'LONGTYPE_DESC',
  NUMBEROFLEVELS_DESC = 'NUMBEROFLEVELS_DESC',
  OBJECTTYPE_DESC = 'OBJECTTYPE_DESC',
  STATUS_DESC = 'STATUS_DESC',
  FRONTENDNAME_ASC = 'FRONTENDNAME_ASC',
  FRONTENDNAME_DESC = 'FRONTENDNAME_DESC',
  LONGTYPE_ASC = 'LONGTYPE_ASC'
}

export interface GQLAuctionRawInsertInput {
  auctionCreator?: string;
  tokenAddress?: string;
  tokenID?: string;
  endTime?: number;
  showcaseFee?: string;
  startTime?: number;
  superType?: string;
  bids?: Array<GQLAuctionRawBidInsertInput | null>;
  startBid?: string;
  bidStep?: string;
}

export interface GQLActionQueryInput {
  actionAttributes_exists?: boolean;
  blockchain_gt?: string;
  updatedAt_nin?: Array<number | null>;
  createdAt_gte?: number;
  OR?: Array<GQLActionQueryInput>;
  _id_ne?: GQLObjectId;
  AND?: Array<GQLActionQueryInput>;
  updatedAt_gte?: number;
  updatedAt_in?: Array<number | null>;
  _id_in?: Array<GQLObjectId | null>;
  updatedAt_lt?: number;
  createdAt_gt?: number;
  blockchain_gte?: string;
  updatedAt?: number;
  _id_gt?: GQLObjectId;
  tokenAttributes_exists?: boolean;
  updatedAt_lte?: number;
  createdAt_lte?: number;
  updatedAt_gt?: number;
  createdAt_in?: Array<number | null>;
  blockchain_nin?: Array<string | null>;
  _id_lte?: GQLObjectId;
  blockchain_in?: Array<string | null>;
  actionAttributes?: GQLActionActionAttributeQueryInput;
  updatedAt_ne?: number;
  createdAt_lt?: number;
  tokenAttributes?: GQLActionTokenAttributeQueryInput;
  _id_nin?: Array<GQLObjectId | null>;
  blockchain_ne?: string;
  createdAt_exists?: boolean;
  createdAt_nin?: Array<number | null>;
  _id?: GQLObjectId;
  blockchain?: string;
  _id_gte?: GQLObjectId;
  _id_exists?: boolean;
  message?: GQLActionMessageQueryInput;
  message_exists?: boolean;
  blockchain_exists?: boolean;
  _id_lt?: GQLObjectId;
  blockchain_lt?: string;
  blockchain_lte?: string;
  updatedAt_exists?: boolean;
  createdAt?: number;
  createdAt_ne?: number;
}

export interface GQLActionColActionAttributeUpdateInput {
  actionCapture_unset?: boolean;
  actionCapture?: string;
}

export interface GQLTokenColInsertInput {
  _id?: GQLObjectId;
  tokenId?: string;
  seriesId?: string;
  updatedAt?: number;
  address?: string;
  images?: Array<GQLTokenColImageInsertInput | null>;
  merged?: string;
  createdAt?: number;
  owner?: string;
}

export interface GQLCollectionMedium {
  hash?: string;
  height?: number;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export enum GQLRoyaltySortByInput {
  COUNT_ASC = 'COUNT_ASC',
  LOWERVALUE_ASC = 'LOWERVALUE_ASC',
  PERCENTAGE_DESC = 'PERCENTAGE_DESC',
  PERCENTAGE_ASC = 'PERCENTAGE_ASC',
  UPPERVALUE_ASC = 'UPPERVALUE_ASC',
  UPPERVALUE_DESC = 'UPPERVALUE_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  COUNT_DESC = 'COUNT_DESC',
  LOWERVALUE_DESC = 'LOWERVALUE_DESC'
}

export enum GQLPaginationCollectionSort {
  CREATED_ASC = 'CREATED_ASC',
  CREATED_DESC = 'CREATED_DESC'
}

export interface GQLActionColTokenAttributeInsertInput {
  seriesCreator?: string;
  seriesID?: string;
  tokenID?: string;
}

export interface GQLSwift_codeQueryInput {
  code_lt?: string;
  actionCapture_in?: Array<string | null>;
  description_gte?: string;
  additionalInfo_in?: Array<string | null>;
  applicableContractType_nin?: Array<string | null>;
  additionalInfo_gte?: string;
  code_in?: Array<string | null>;
  additionalInfo_lte?: string;
  applicableContractType?: Array<string | null>;
  _id_gte?: GQLObjectId;
  actorField_ne?: string;
  actionCapture_ne?: string;
  applicableBlockchains_in?: Array<string | null>;
  description_gt?: string;
  actionCapture_gte?: string;
  description_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  _id_lte?: GQLObjectId;
  actorField_exists?: boolean;
  actorField_gt?: string;
  applicableBlockchains?: Array<string | null>;
  actorField_nin?: Array<string | null>;
  _id_nin?: Array<GQLObjectId | null>;
  applicableBlockchains_nin?: Array<string | null>;
  _id_gt?: GQLObjectId;
  AND?: Array<GQLSwift_codeQueryInput>;
  code_lte?: string;
  code_gt?: string;
  actionCapture_gt?: string;
  additionalInfo_lt?: string;
  additionalInfo_ne?: string;
  OR?: Array<GQLSwift_codeQueryInput>;
  applicableContractType_exists?: boolean;
  actionCapture?: string;
  actorField_in?: Array<string | null>;
  description_in?: Array<string | null>;
  description?: string;
  actorField_lte?: string;
  applicableBlockchains_exists?: boolean;
  description_nin?: Array<string | null>;
  _id?: GQLObjectId;
  actorField_lt?: string;
  _id_ne?: GQLObjectId;
  additionalInfo_gt?: string;
  description_lt?: string;
  description_ne?: string;
  code_exists?: boolean;
  actionCapture_exists?: boolean;
  _id_exists?: boolean;
  additionalInfo_exists?: boolean;
  actorField?: string;
  code_ne?: string;
  code_gte?: string;
  code_nin?: Array<string | null>;
  actionCapture_nin?: Array<string | null>;
  description_lte?: string;
  code?: string;
  applicableContractType_in?: Array<string | null>;
  actionCapture_lte?: string;
  actorField_gte?: string;
  additionalInfo_nin?: Array<string | null>;
  actionCapture_lt?: string;
  additionalInfo?: string;
  _id_lt?: GQLObjectId;
}

export interface GQLIntegrationQueryInput {
  subType_gt?: string;
  _id_ne?: GQLObjectId;
  code_lte?: string;
  status_ne?: string;
  subType_exists?: boolean;
  _id_lt?: GQLObjectId;
  blockchain_lt?: string;
  code_nin?: Array<string | null>;
  blockchain_gt?: string;
  subType_lt?: string;
  _id?: GQLObjectId;
  type_gte?: string;
  subType_nin?: Array<string | null>;
  name_in?: Array<string | null>;
  type_lte?: string;
  type_exists?: boolean;
  subType?: string;
  subType_lte?: string;
  status?: string;
  _id_gte?: GQLObjectId;
  blockchain_ne?: string;
  code_gt?: string;
  blockchain_in?: Array<string | null>;
  code_gte?: string;
  type?: string;
  code_in?: Array<string | null>;
  AND?: Array<GQLIntegrationQueryInput>;
  _id_gt?: GQLObjectId;
  code?: string;
  name_gte?: string;
  status_in?: Array<string | null>;
  blockchain_gte?: string;
  name?: string;
  status_lt?: string;
  blockchain_lte?: string;
  _id_nin?: Array<GQLObjectId | null>;
  type_gt?: string;
  status_gt?: string;
  blockchain?: string;
  subType_in?: Array<string | null>;
  name_gt?: string;
  _id_in?: Array<GQLObjectId | null>;
  status_lte?: string;
  name_ne?: string;
  type_lt?: string;
  OR?: Array<GQLIntegrationQueryInput>;
  code_exists?: boolean;
  type_in?: Array<string | null>;
  code_lt?: string;
  subType_ne?: string;
  blockchain_exists?: boolean;
  status_nin?: Array<string | null>;
  code_ne?: string;
  name_lte?: string;
  type_nin?: Array<string | null>;
  status_gte?: string;
  _id_lte?: GQLObjectId;
  name_lt?: string;
  name_nin?: Array<string | null>;
  status_exists?: boolean;
  name_exists?: boolean;
  _id_exists?: boolean;
  type_ne?: string;
  blockchain_nin?: Array<string | null>;
  subType_gte?: string;
}

export interface GQLCollectionRawMediumInsertInput {
  hash?: string;
  height?: number;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLUi_assetQueryInput {
  _id_gt?: GQLObjectId;
  imageLanding_nin?: Array<string | null>;
  managementIDs?: string;
  createdAt_in?: Array<number | null>;
  image_gte?: string;
  imageLanding_lt?: string;
  managementIDs_gt?: string;
  _id?: GQLObjectId;
  _id_exists?: boolean;
  imageLanding?: string;
  textLanding_lte?: string;
  updatedAt?: number;
  assetSubtitle_exists?: boolean;
  assetTitle_gte?: string;
  image_lt?: string;
  assetSubtitle_gte?: string;
  assetSubtitle_gt?: string;
  _id_lt?: GQLObjectId;
  textLanding?: string;
  createdAt_ne?: number;
  AND?: Array<GQLUi_assetQueryInput>;
  airtableId_ne?: string;
  textLanding_exists?: boolean;
  createdAt_nin?: Array<number | null>;
  image?: string;
  assetTitle_lte?: string;
  updatedAt_ne?: number;
  assetID?: string;
  image_gt?: string;
  assetSubtitle_lte?: string;
  assetSubtitle_in?: Array<string | null>;
  image_nin?: Array<string | null>;
  _id_gte?: GQLObjectId;
  _id_lte?: GQLObjectId;
  createdAt_exists?: boolean;
  image_in?: Array<string | null>;
  assetTitle_nin?: Array<string | null>;
  assetID_lt?: string;
  airtableId_exists?: boolean;
  managementIDs_lte?: string;
  updatedAt_lte?: number;
  airtableId_lte?: string;
  imageLanding_in?: Array<string | null>;
  assetID_exists?: boolean;
  managementIDs_in?: Array<string | null>;
  createdAt_lte?: number;
  image_exists?: boolean;
  createdAt_gte?: number;
  updatedAt_gte?: number;
  updatedAt_exists?: boolean;
  managementIDs_ne?: string;
  OR?: Array<GQLUi_assetQueryInput>;
  textLanding_lt?: string;
  createdAt?: number;
  updatedAt_gt?: number;
  updatedAt_nin?: Array<number | null>;
  updatedAt_lt?: number;
  assetID_lte?: string;
  managementIDs_gte?: string;
  imageLanding_gte?: string;
  managementIDs_exists?: boolean;
  assetTitle_in?: Array<string | null>;
  assetSubtitle_ne?: string;
  updatedAt_in?: Array<number | null>;
  assetTitle_ne?: string;
  airtableId_nin?: Array<string | null>;
  assetTitle_exists?: boolean;
  textLanding_ne?: string;
  assetSubtitle_lt?: string;
  airtableId_in?: Array<string | null>;
  createdAt_lt?: number;
  textLanding_gt?: string;
  airtableId_gt?: string;
  assetTitle_gt?: string;
  createdAt_gt?: number;
  textLanding_gte?: string;
  imageLanding_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  _id_nin?: Array<GQLObjectId | null>;
  managementIDs_nin?: Array<string | null>;
  assetTitle?: string;
  image_lte?: string;
  _id_ne?: GQLObjectId;
  image_ne?: string;
  textLanding_nin?: Array<string | null>;
  imageLanding_gt?: string;
  assetID_gte?: string;
  assetID_gt?: string;
  airtableId_gte?: string;
  assetSubtitle?: string;
  assetID_nin?: Array<string | null>;
  managementIDs_lt?: string;
  imageLanding_lte?: string;
  textLanding_in?: Array<string | null>;
  airtableId?: string;
  assetID_in?: Array<string | null>;
  imageLanding_ne?: string;
  assetID_ne?: string;
  airtableId_lt?: string;
  assetTitle_lt?: string;
  assetSubtitle_nin?: Array<string | null>;
}

export interface GQLHourlyUpdateInput {
  time_inc?: number;
  BNBtoUSD?: number;
  time_unset?: boolean;
  EVERtoUSD?: number;
  blockchain_unset?: boolean;
  USD_unset?: boolean;
  time?: number;
  EVERtoUSD_unset?: boolean;
  BNBtoUSD_unset?: boolean;
  USD?: number;
  USD_inc?: number;
  BNBtoUSD_inc?: number;
  EVERtoUSD_inc?: number;
  _id?: GQLObjectId;
  _id_unset?: boolean;
  blockchain?: string;
}

export interface GQLContract_typeHashFieldLayerImageInsertInput {
  hash?: string;
  imageIndex?: string;
  mimetype?: string;
  rarityWeight?: string;
  weight?: string;
}

export interface GQLTriggerQueryInput {
  OR?: Array<GQLTriggerQueryInput>;
  lastDate_lt?: number;
  lastDate_ne?: number;
  name_nin?: Array<string | null>;
  lastDate_in?: Array<number | null>;
  name_exists?: boolean;
  name_in?: Array<string | null>;
  _id_lt?: GQLObjectId;
  _id_in?: Array<GQLObjectId | null>;
  lastDate_lte?: number;
  name_lte?: string;
  _id_nin?: Array<GQLObjectId | null>;
  AND?: Array<GQLTriggerQueryInput>;
  name_lt?: string;
  _id_exists?: boolean;
  _id_gte?: GQLObjectId;
  name?: string;
  lastDate_exists?: boolean;
  name_ne?: string;
  lastDate?: number;
  _id_lte?: GQLObjectId;
  _id_ne?: GQLObjectId;
  name_gte?: string;
  _id_gt?: GQLObjectId;
  lastDate_gte?: number;
  lastDate_nin?: Array<number | null>;
  name_gt?: string;
  lastDate_gt?: number;
  _id?: GQLObjectId;
}

export interface GQLAuction {
  _id?: GQLObjectId;
  auctionID?: string;
  createdAt?: number;
  deployed?: GQLAuctionDeployed;
  raw?: GQLAuctionRaw;
  updatedAt?: number;
}

export interface GQLIntegrationInsertInput {
  blockchain?: string;
  code?: string;
  name?: string;
  status?: string;
  subType?: string;
  type?: string;
  _id?: GQLObjectId;
}

export interface GQLPrimary_json {
  _id?: GQLObjectId;
  createdAt?: number;
  hash?: string;
  jsonString?: string;
}

export interface GQLAskRawUpdateInput {
  blockchain_unset?: boolean;
  tokenAddress?: string;
  endTime_inc?: number;
  superType?: string;
  superType_unset?: boolean;
  tokenAddress_unset?: boolean;
  currentAskValue?: string;
  endTime?: number;
  showcaseFee?: string;
  askCreator?: string;
  blockchain?: string;
  currentAskValue_unset?: boolean;
  endTime_unset?: boolean;
  askCreator_unset?: boolean;
  showcaseFee_unset?: boolean;
  values_unset?: boolean;
  tokenID?: string;
  tokenID_unset?: boolean;
  values?: Array<GQLAskRawValueUpdateInput | null>;
}

export interface GQLCollectionDeployedQueryInput {
  hash_nin?: Array<string | null>;
  privacy_gte?: string;
  supply?: number;
  hash_ne?: string;
  address?: string;
  hash_lte?: string;
  creator_lte?: string;
  supply_gt?: number;
  privacy_ne?: string;
  blockchain_in?: Array<string | null>;
  superType_gt?: string;
  type_in?: Array<string | null>;
  type_lt?: string;
  privacy_gt?: string;
  superType_gte?: string;
  hash_gt?: string;
  superType_ne?: string;
  blockNumber_lte?: GQLLong;
  supply_lt?: number;
  blockNumber?: GQLLong;
  hash_lt?: string;
  OR?: Array<GQLCollectionDeployedQueryInput>;
  supply_gte?: number;
  blockNumber_nin?: Array<GQLLong | null>;
  blockchain?: string;
  creator_ne?: string;
  supply_in?: Array<number | null>;
  address_lt?: string;
  privacy_in?: Array<string | null>;
  hash_in?: Array<string | null>;
  type_gt?: string;
  type_ne?: string;
  hash_exists?: boolean;
  superType_exists?: boolean;
  supply_lte?: number;
  AND?: Array<GQLCollectionDeployedQueryInput>;
  superType_lt?: string;
  type_nin?: Array<string | null>;
  address_gte?: string;
  superType?: string;
  blockchain_nin?: Array<string | null>;
  creator_in?: Array<string | null>;
  type_lte?: string;
  creator_exists?: boolean;
  blockchain_gt?: string;
  address_ne?: string;
  blockchain_lt?: string;
  blockNumber_lt?: GQLLong;
  type_exists?: boolean;
  address_gt?: string;
  hash?: string;
  hash_gte?: string;
  privacy_lt?: string;
  type_gte?: string;
  address_exists?: boolean;
  superType_lte?: string;
  blockchain_ne?: string;
  supply_nin?: Array<number | null>;
  creator_gt?: string;
  blockNumber_exists?: boolean;
  blockNumber_ne?: GQLLong;
  privacy_nin?: Array<string | null>;
  superType_nin?: Array<string | null>;
  creator_gte?: string;
  blockchain_gte?: string;
  creator?: string;
  privacy_lte?: string;
  privacy?: string;
  supply_ne?: number;
  blockNumber_gt?: GQLLong;
  blockchain_lte?: string;
  supply_exists?: boolean;
  blockchain_exists?: boolean;
  blockNumber_gte?: GQLLong;
  creator_nin?: Array<string | null>;
  type?: string;
  address_lte?: string;
  creator_lt?: string;
  superType_in?: Array<string | null>;
  privacy_exists?: boolean;
  address_in?: Array<string | null>;
  address_nin?: Array<string | null>;
  blockNumber_in?: Array<GQLLong | null>;
}

export interface GQLUi_moduleInsertInput {
  mode?: string;
  scope?: string;
  mainLink?: string;
  buttonType?: string;
  timerVisible?: boolean;
  managementIDs?: string;
  status?: string;
  updatedAt?: number;
  buttonName?: string;
  moduleID?: string;
  autoStart?: number;
  autoFinish?: number;
  page?: string;
  buttonLink?: string;
  name?: string;
  _id?: GQLObjectId;
  specialFeature?: string;
  comment?: string;
  airtableId?: string;
  createdAt?: number;
  itemType?: string;
  buttonAction?: string;
}

export interface GQLCollectionMediumUpdateInput {
  width?: number;
  subtitle?: string;
  hash_unset?: boolean;
  role?: string;
  hash?: string;
  height_inc?: number;
  weight_unset?: boolean;
  weight_inc?: number;
  width_inc?: number;
  mimetype_unset?: boolean;
  mimetype?: string;
  role_unset?: boolean;
  subtitle_unset?: boolean;
  width_unset?: boolean;
  weight?: number;
  height_unset?: boolean;
  height?: number;
}

export interface GQLActionColMessageQueryInput {
  time_gte?: number;
  AND?: Array<GQLActionColMessageQueryInput>;
  time_lt?: number;
  superType_exists?: boolean;
  superType_lt?: string;
  senderID_exists?: boolean;
  actionCode?: string;
  actionCode_ne?: string;
  senderAddress_in?: Array<string | null>;
  senderID_gt?: string;
  actionCode_nin?: Array<string | null>;
  time?: number;
  senderAddress_lt?: string;
  superType_ne?: string;
  time_lte?: number;
  senderID_ne?: string;
  actionCode_lte?: string;
  superType_nin?: Array<string | null>;
  hash?: string;
  hash_lte?: string;
  time_nin?: Array<number | null>;
  senderID_nin?: Array<string | null>;
  actionCode_in?: Array<string | null>;
  superType_lte?: string;
  actionCode_lt?: string;
  actionCode_gte?: string;
  senderID?: string;
  time_in?: Array<number | null>;
  senderID_lte?: string;
  hash_gte?: string;
  senderAddress_lte?: string;
  senderAddress_ne?: string;
  senderAddress_nin?: Array<string | null>;
  senderID_in?: Array<string | null>;
  time_ne?: number;
  actionCode_gt?: string;
  senderID_lt?: string;
  time_gt?: number;
  superType_gt?: string;
  hash_lt?: string;
  hash_exists?: boolean;
  senderID_gte?: string;
  hash_ne?: string;
  hash_nin?: Array<string | null>;
  hash_gt?: string;
  senderAddress_gte?: string;
  senderAddress_gt?: string;
  hash_in?: Array<string | null>;
  actionCode_exists?: boolean;
  senderAddress_exists?: boolean;
  time_exists?: boolean;
  senderAddress?: string;
  superType_gte?: string;
  OR?: Array<GQLActionColMessageQueryInput>;
  superType_in?: Array<string | null>;
  superType?: string;
}

export enum GQLCollectionSortByInput {
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  CREATORACCOUNTNUMBER_ASC = 'CREATORACCOUNTNUMBER_ASC',
  COLLECTIONID_ASC = 'COLLECTIONID_ASC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATOR_ASC = 'CREATOR_ASC',
  CREATOR_DESC = 'CREATOR_DESC',
  TOKENSINCOLLECTION_ASC = 'TOKENSINCOLLECTION_ASC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  ABOUT_ASC = 'ABOUT_ASC',
  ABOUT_DESC = 'ABOUT_DESC',
  CREATORACCOUNTNUMBER_DESC = 'CREATORACCOUNTNUMBER_DESC',
  QUALIFICATION_ASC = 'QUALIFICATION_ASC',
  QUALIFICATION_DESC = 'QUALIFICATION_DESC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_DESC = '_ID_DESC',
  COLLECTIONID_DESC = 'COLLECTIONID_DESC',
  TITLE_DESC = 'TITLE_DESC',
  TOKENSINCOLLECTION_DESC = 'TOKENSINCOLLECTION_DESC',
  _ID_ASC = '_ID_ASC',
  TITLE_ASC = 'TITLE_ASC'
}

export enum GQLActionColSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLContract_typeHashFieldLayer {
  images?: GQLContract_typeHashFieldLayerImage;
  layerIndex?: string;
}

export interface GQLBlockchainNetworkTestQueryInput {
  browser_exists?: boolean;
  endpoint_gte?: string;
  OR?: Array<GQLBlockchainNetworkTestQueryInput>;
  endpoint_gt?: string;
  endpoint_ne?: string;
  browser?: string;
  browser_gte?: string;
  endpoint?: string;
  endpoint_lte?: string;
  browser_nin?: Array<string | null>;
  browser_lte?: string;
  endpoint_exists?: boolean;
  AND?: Array<GQLBlockchainNetworkTestQueryInput>;
  browser_ne?: string;
  browser_in?: Array<string | null>;
  browser_lt?: string;
  endpoint_lt?: string;
  endpoint_in?: Array<string | null>;
  endpoint_nin?: Array<string | null>;
  browser_gt?: string;
}

export interface GQLAskDeployedValue {
  askTime?: number;
  askValue?: string;
}

export interface GQLIntegration {
  _id?: GQLObjectId;
  blockchain?: string;
  code?: string;
  name?: string;
  status?: string;
  subType?: string;
  type?: string;
}

export interface GQLActionMessageQueryInput {
  resolution_ne?: string;
  resolution_nin?: Array<string | null>;
  time_exists?: boolean;
  superType_ne?: string;
  senderID_ne?: string;
  time_gt?: number;
  senderAddress_ne?: string;
  superType_lt?: string;
  senderID_gte?: string;
  senderAddress_in?: Array<string | null>;
  hash?: string;
  AND?: Array<GQLActionMessageQueryInput>;
  senderID_lte?: string;
  hash_ne?: string;
  resolution_in?: Array<string | null>;
  time_lt?: number;
  actionCode?: GQLSwift_codeQueryInput;
  senderID_in?: Array<string | null>;
  hash_exists?: boolean;
  superType_gt?: string;
  hash_lte?: string;
  superType_nin?: Array<string | null>;
  superType_gte?: string;
  time_ne?: number;
  resolution_lte?: string;
  resolution_lt?: string;
  senderID_lt?: string;
  senderID_nin?: Array<string | null>;
  hash_gt?: string;
  senderAddress_lt?: string;
  senderAddress_lte?: string;
  time?: number;
  hash_gte?: string;
  hash_lt?: string;
  senderAddress_gt?: string;
  senderID_exists?: boolean;
  hash_in?: Array<string | null>;
  OR?: Array<GQLActionMessageQueryInput>;
  superType_lte?: string;
  resolution?: string;
  senderID_gt?: string;
  time_gte?: number;
  resolution_gte?: string;
  senderAddress_nin?: Array<string | null>;
  senderID?: string;
  time_lte?: number;
  senderAddress_gte?: string;
  time_nin?: Array<number | null>;
  superType_exists?: boolean;
  actionCode_exists?: boolean;
  hash_nin?: Array<string | null>;
  superType_in?: Array<string | null>;
  senderAddress_exists?: boolean;
  resolution_exists?: boolean;
  time_in?: Array<number | null>;
  superType?: string;
  resolution_gt?: string;
  senderAddress?: string;
}

export interface GQLMutation {
  deleteManyActionCols?: GQLDeleteManyPayload;
  deleteManyActions?: GQLDeleteManyPayload;
  deleteManyAddress_abis?: GQLDeleteManyPayload;
  deleteManyAsks?: GQLDeleteManyPayload;
  deleteManyAuctions?: GQLDeleteManyPayload;
  deleteManyBids?: GQLDeleteManyPayload;
  deleteManyBlockchains?: GQLDeleteManyPayload;
  deleteManyCol1s?: GQLDeleteManyPayload;
  deleteManyCollections?: GQLDeleteManyPayload;
  deleteManyCommissions?: GQLDeleteManyPayload;
  deleteManyContract_types?: GQLDeleteManyPayload;
  deleteManyContracts?: GQLDeleteManyPayload;
  deleteManyDailies?: GQLDeleteManyPayload;
  deleteManyEndorsements?: GQLDeleteManyPayload;
  deleteManyEvents?: GQLDeleteManyPayload;
  deleteManyFormats?: GQLDeleteManyPayload;
  deleteManyHourlies?: GQLDeleteManyPayload;
  deleteManyIntegrations?: GQLDeleteManyPayload;
  deleteManyIpfs?: GQLDeleteManyPayload;
  deleteManyLikes?: GQLDeleteManyPayload;
  deleteManyLocales?: GQLDeleteManyPayload;
  deleteManyModules?: GQLDeleteManyPayload;
  deleteManyNetworks?: GQLDeleteManyPayload;
  deleteManyNew_sessions?: GQLDeleteManyPayload;
  deleteManyOpendata?: GQLDeleteManyPayload;
  deleteManyPrimary_jsons?: GQLDeleteManyPayload;
  deleteManyRoyalties?: GQLDeleteManyPayload;
  deleteManySeriess?: GQLDeleteManyPayload;
  deleteManySessions?: GQLDeleteManyPayload;
  deleteManySubscriptions?: GQLDeleteManyPayload;
  deleteManySwift_codes?: GQLDeleteManyPayload;
  deleteManySwift_messages?: GQLDeleteManyPayload;
  deleteManyTests?: GQLDeleteManyPayload;
  deleteManyTokenCols?: GQLDeleteManyPayload;
  deleteManyTokens?: GQLDeleteManyPayload;
  deleteManyTriggers?: GQLDeleteManyPayload;
  deleteManyUi_assets?: GQLDeleteManyPayload;
  deleteManyUi_charts?: GQLDeleteManyPayload;
  deleteManyUi_managements?: GQLDeleteManyPayload;
  deleteManyUi_modules?: GQLDeleteManyPayload;
  deleteManyUsers?: GQLDeleteManyPayload;
  deleteOneAction?: GQLAction;
  deleteOneActionCol?: GQLActionCol;
  deleteOneAddress_abi?: GQLAddress_abi;
  deleteOneAsk?: GQLAsk;
  deleteOneAuction?: GQLAuction;
  deleteOneBid?: GQLBid;
  deleteOneBlockchain?: GQLBlockchain;
  deleteOneCol1?: GQLCol1;
  deleteOneCollection?: GQLCollection;
  deleteOneCommission?: GQLCommission;
  deleteOneContract?: GQLContract;
  deleteOneContract_type?: GQLContract_type;
  deleteOneDaily?: GQLDaily;
  deleteOneEndorsement?: GQLEndorsement;
  deleteOneEvent?: GQLEvent;
  deleteOneFormat?: GQLFormat;
  deleteOneHourly?: GQLHourly;
  deleteOneIntegration?: GQLIntegration;
  deleteOneIpf?: GQLIpf;
  deleteOneLike?: GQLLike;
  deleteOneLocale?: GQLLocale;
  deleteOneModule?: GQLModule;
  deleteOneNetwork?: GQLNetwork;
  deleteOneNew_session?: GQLNew_session;
  deleteOneOpendatum?: GQLOpendatum;
  deleteOnePrimary_json?: GQLPrimary_json;
  deleteOneRoyalty?: GQLRoyalty;
  deleteOneSeries?: GQLSeries;
  deleteOneSession?: GQLSession;
  deleteOneSubscription?: GQLSubscription;
  deleteOneSwift_code?: GQLSwift_code;
  deleteOneSwift_message?: GQLSwift_message;
  deleteOneTest?: GQLTest;
  deleteOneToken?: GQLToken;
  deleteOneTokenCol?: GQLTokenCol;
  deleteOneTrigger?: GQLTrigger;
  deleteOneUi_asset?: GQLUi_asset;
  deleteOneUi_chart?: GQLUi_chart;
  deleteOneUi_management?: GQLUi_management;
  deleteOneUi_module?: GQLUi_module;
  deleteOneUser?: GQLUser;
  insertManyActionCols?: GQLInsertManyPayload;
  insertManyActions?: GQLInsertManyPayload;
  insertManyAddress_abis?: GQLInsertManyPayload;
  insertManyAsks?: GQLInsertManyPayload;
  insertManyAuctions?: GQLInsertManyPayload;
  insertManyBids?: GQLInsertManyPayload;
  insertManyBlockchains?: GQLInsertManyPayload;
  insertManyCol1s?: GQLInsertManyPayload;
  insertManyCollections?: GQLInsertManyPayload;
  insertManyCommissions?: GQLInsertManyPayload;
  insertManyContract_types?: GQLInsertManyPayload;
  insertManyContracts?: GQLInsertManyPayload;
  insertManyDailies?: GQLInsertManyPayload;
  insertManyEndorsements?: GQLInsertManyPayload;
  insertManyEvents?: GQLInsertManyPayload;
  insertManyFormats?: GQLInsertManyPayload;
  insertManyHourlies?: GQLInsertManyPayload;
  insertManyIntegrations?: GQLInsertManyPayload;
  insertManyIpfs?: GQLInsertManyPayload;
  insertManyLikes?: GQLInsertManyPayload;
  insertManyLocales?: GQLInsertManyPayload;
  insertManyModules?: GQLInsertManyPayload;
  insertManyNetworks?: GQLInsertManyPayload;
  insertManyNew_sessions?: GQLInsertManyPayload;
  insertManyOpendata?: GQLInsertManyPayload;
  insertManyPrimary_jsons?: GQLInsertManyPayload;
  insertManyRoyalties?: GQLInsertManyPayload;
  insertManySeriess?: GQLInsertManyPayload;
  insertManySessions?: GQLInsertManyPayload;
  insertManySubscriptions?: GQLInsertManyPayload;
  insertManySwift_codes?: GQLInsertManyPayload;
  insertManySwift_messages?: GQLInsertManyPayload;
  insertManyTests?: GQLInsertManyPayload;
  insertManyTokenCols?: GQLInsertManyPayload;
  insertManyTokens?: GQLInsertManyPayload;
  insertManyTriggers?: GQLInsertManyPayload;
  insertManyUi_assets?: GQLInsertManyPayload;
  insertManyUi_charts?: GQLInsertManyPayload;
  insertManyUi_managements?: GQLInsertManyPayload;
  insertManyUi_modules?: GQLInsertManyPayload;
  insertManyUsers?: GQLInsertManyPayload;
  insertOneAction?: GQLAction;
  insertOneActionCol?: GQLActionCol;
  insertOneAddress_abi?: GQLAddress_abi;
  insertOneAsk?: GQLAsk;
  insertOneAuction?: GQLAuction;
  insertOneBid?: GQLBid;
  insertOneBlockchain?: GQLBlockchain;
  insertOneCol1?: GQLCol1;
  insertOneCollection?: GQLCollection;
  insertOneCommission?: GQLCommission;
  insertOneContract?: GQLContract;
  insertOneContract_type?: GQLContract_type;
  insertOneDaily?: GQLDaily;
  insertOneEndorsement?: GQLEndorsement;
  insertOneEvent?: GQLEvent;
  insertOneFormat?: GQLFormat;
  insertOneHourly?: GQLHourly;
  insertOneIntegration?: GQLIntegration;
  insertOneIpf?: GQLIpf;
  insertOneLike?: GQLLike;
  insertOneLocale?: GQLLocale;
  insertOneModule?: GQLModule;
  insertOneNetwork?: GQLNetwork;
  insertOneNew_session?: GQLNew_session;
  insertOneOpendatum?: GQLOpendatum;
  insertOnePrimary_json?: GQLPrimary_json;
  insertOneRoyalty?: GQLRoyalty;
  insertOneSeries?: GQLSeries;
  insertOneSession?: GQLSession;
  insertOneSubscription?: GQLSubscription;
  insertOneSwift_code?: GQLSwift_code;
  insertOneSwift_message?: GQLSwift_message;
  insertOneTest?: GQLTest;
  insertOneToken?: GQLToken;
  insertOneTokenCol?: GQLTokenCol;
  insertOneTrigger?: GQLTrigger;
  insertOneUi_asset?: GQLUi_asset;
  insertOneUi_chart?: GQLUi_chart;
  insertOneUi_management?: GQLUi_management;
  insertOneUi_module?: GQLUi_module;
  insertOneUser?: GQLUser;
  replaceOneAction?: GQLAction;
  replaceOneActionCol?: GQLActionCol;
  replaceOneAddress_abi?: GQLAddress_abi;
  replaceOneAsk?: GQLAsk;
  replaceOneAuction?: GQLAuction;
  replaceOneBid?: GQLBid;
  replaceOneBlockchain?: GQLBlockchain;
  replaceOneCol1?: GQLCol1;
  replaceOneCollection?: GQLCollection;
  replaceOneCommission?: GQLCommission;
  replaceOneContract?: GQLContract;
  replaceOneContract_type?: GQLContract_type;
  replaceOneDaily?: GQLDaily;
  replaceOneEndorsement?: GQLEndorsement;
  replaceOneEvent?: GQLEvent;
  replaceOneFormat?: GQLFormat;
  replaceOneHourly?: GQLHourly;
  replaceOneIntegration?: GQLIntegration;
  replaceOneIpf?: GQLIpf;
  replaceOneLike?: GQLLike;
  replaceOneLocale?: GQLLocale;
  replaceOneModule?: GQLModule;
  replaceOneNetwork?: GQLNetwork;
  replaceOneNew_session?: GQLNew_session;
  replaceOneOpendatum?: GQLOpendatum;
  replaceOnePrimary_json?: GQLPrimary_json;
  replaceOneRoyalty?: GQLRoyalty;
  replaceOneSeries?: GQLSeries;
  replaceOneSession?: GQLSession;
  replaceOneSubscription?: GQLSubscription;
  replaceOneSwift_code?: GQLSwift_code;
  replaceOneSwift_message?: GQLSwift_message;
  replaceOneTest?: GQLTest;
  replaceOneToken?: GQLToken;
  replaceOneTokenCol?: GQLTokenCol;
  replaceOneTrigger?: GQLTrigger;
  replaceOneUi_asset?: GQLUi_asset;
  replaceOneUi_chart?: GQLUi_chart;
  replaceOneUi_management?: GQLUi_management;
  replaceOneUi_module?: GQLUi_module;
  replaceOneUser?: GQLUser;
  updateManyActionCols?: GQLUpdateManyPayload;
  updateManyActions?: GQLUpdateManyPayload;
  updateManyAddress_abis?: GQLUpdateManyPayload;
  updateManyAsks?: GQLUpdateManyPayload;
  updateManyAuctions?: GQLUpdateManyPayload;
  updateManyBids?: GQLUpdateManyPayload;
  updateManyBlockchains?: GQLUpdateManyPayload;
  updateManyCol1s?: GQLUpdateManyPayload;
  updateManyCollections?: GQLUpdateManyPayload;
  updateManyCommissions?: GQLUpdateManyPayload;
  updateManyContract_types?: GQLUpdateManyPayload;
  updateManyContracts?: GQLUpdateManyPayload;
  updateManyDailies?: GQLUpdateManyPayload;
  updateManyEndorsements?: GQLUpdateManyPayload;
  updateManyEvents?: GQLUpdateManyPayload;
  updateManyFormats?: GQLUpdateManyPayload;
  updateManyHourlies?: GQLUpdateManyPayload;
  updateManyIntegrations?: GQLUpdateManyPayload;
  updateManyIpfs?: GQLUpdateManyPayload;
  updateManyLikes?: GQLUpdateManyPayload;
  updateManyLocales?: GQLUpdateManyPayload;
  updateManyModules?: GQLUpdateManyPayload;
  updateManyNetworks?: GQLUpdateManyPayload;
  updateManyNew_sessions?: GQLUpdateManyPayload;
  updateManyOpendata?: GQLUpdateManyPayload;
  updateManyPrimary_jsons?: GQLUpdateManyPayload;
  updateManyRoyalties?: GQLUpdateManyPayload;
  updateManySeriess?: GQLUpdateManyPayload;
  updateManySessions?: GQLUpdateManyPayload;
  updateManySubscriptions?: GQLUpdateManyPayload;
  updateManySwift_codes?: GQLUpdateManyPayload;
  updateManySwift_messages?: GQLUpdateManyPayload;
  updateManyTests?: GQLUpdateManyPayload;
  updateManyTokenCols?: GQLUpdateManyPayload;
  updateManyTokens?: GQLUpdateManyPayload;
  updateManyTriggers?: GQLUpdateManyPayload;
  updateManyUi_assets?: GQLUpdateManyPayload;
  updateManyUi_charts?: GQLUpdateManyPayload;
  updateManyUi_managements?: GQLUpdateManyPayload;
  updateManyUi_modules?: GQLUpdateManyPayload;
  updateManyUsers?: GQLUpdateManyPayload;
  updateOneAction?: GQLAction;
  updateOneActionCol?: GQLActionCol;
  updateOneAddress_abi?: GQLAddress_abi;
  updateOneAsk?: GQLAsk;
  updateOneAuction?: GQLAuction;
  updateOneBid?: GQLBid;
  updateOneBlockchain?: GQLBlockchain;
  updateOneCol1?: GQLCol1;
  updateOneCollection?: GQLCollection;
  updateOneCommission?: GQLCommission;
  updateOneContract?: GQLContract;
  updateOneContract_type?: GQLContract_type;
  updateOneDaily?: GQLDaily;
  updateOneEndorsement?: GQLEndorsement;
  updateOneEvent?: GQLEvent;
  updateOneFormat?: GQLFormat;
  updateOneHourly?: GQLHourly;
  updateOneIntegration?: GQLIntegration;
  updateOneIpf?: GQLIpf;
  updateOneLike?: GQLLike;
  updateOneLocale?: GQLLocale;
  updateOneModule?: GQLModule;
  updateOneNetwork?: GQLNetwork;
  updateOneNew_session?: GQLNew_session;
  updateOneOpendatum?: GQLOpendatum;
  updateOnePrimary_json?: GQLPrimary_json;
  updateOneRoyalty?: GQLRoyalty;
  updateOneSeries?: GQLSeries;
  updateOneSession?: GQLSession;
  updateOneSubscription?: GQLSubscription;
  updateOneSwift_code?: GQLSwift_code;
  updateOneSwift_message?: GQLSwift_message;
  updateOneTest?: GQLTest;
  updateOneToken?: GQLToken;
  updateOneTokenCol?: GQLTokenCol;
  updateOneTrigger?: GQLTrigger;
  updateOneUi_asset?: GQLUi_asset;
  updateOneUi_chart?: GQLUi_chart;
  updateOneUi_management?: GQLUi_management;
  updateOneUi_module?: GQLUi_module;
  updateOneUser?: GQLUser;
  upsertOneAction?: GQLAction;
  upsertOneActionCol?: GQLActionCol;
  upsertOneAddress_abi?: GQLAddress_abi;
  upsertOneAsk?: GQLAsk;
  upsertOneAuction?: GQLAuction;
  upsertOneBid?: GQLBid;
  upsertOneBlockchain?: GQLBlockchain;
  upsertOneCol1?: GQLCol1;
  upsertOneCollection?: GQLCollection;
  upsertOneCommission?: GQLCommission;
  upsertOneContract?: GQLContract;
  upsertOneContract_type?: GQLContract_type;
  upsertOneDaily?: GQLDaily;
  upsertOneEndorsement?: GQLEndorsement;
  upsertOneEvent?: GQLEvent;
  upsertOneFormat?: GQLFormat;
  upsertOneHourly?: GQLHourly;
  upsertOneIntegration?: GQLIntegration;
  upsertOneIpf?: GQLIpf;
  upsertOneLike?: GQLLike;
  upsertOneLocale?: GQLLocale;
  upsertOneModule?: GQLModule;
  upsertOneNetwork?: GQLNetwork;
  upsertOneNew_session?: GQLNew_session;
  upsertOneOpendatum?: GQLOpendatum;
  upsertOnePrimary_json?: GQLPrimary_json;
  upsertOneRoyalty?: GQLRoyalty;
  upsertOneSeries?: GQLSeries;
  upsertOneSession?: GQLSession;
  upsertOneSubscription?: GQLSubscription;
  upsertOneSwift_code?: GQLSwift_code;
  upsertOneSwift_message?: GQLSwift_message;
  upsertOneTest?: GQLTest;
  upsertOneToken?: GQLToken;
  upsertOneTokenCol?: GQLTokenCol;
  upsertOneTrigger?: GQLTrigger;
  upsertOneUi_asset?: GQLUi_asset;
  upsertOneUi_chart?: GQLUi_chart;
  upsertOneUi_management?: GQLUi_management;
  upsertOneUi_module?: GQLUi_module;
  upsertOneUser?: GQLUser;
}

export interface GQLContractUpdateInput {
  address?: string;
  abiFile_unset?: boolean;
  abiPath_unset?: boolean;
  superType?: string;
  address_unset?: boolean;
  environment?: string;
  abiFile?: string;
  abiPath?: string;
  longType_unset?: boolean;
  environment_unset?: boolean;
  _id?: GQLObjectId;
  network?: string;
  network_unset?: boolean;
  status_unset?: boolean;
  longType?: string;
  privacy_unset?: boolean;
  superType_unset?: boolean;
  privacy?: string;
  status?: string;
  blockchain?: string;
  blockchain_unset?: boolean;
  _id_unset?: boolean;
}

export interface GQLUi_chart {
  _id?: GQLObjectId;
  aggregationField?: string;
  airtableId?: string;
  createdAt?: number;
  dataObject?: string;
  field?: string;
  function?: string;
  limit?: number;
  linkSuffix?: string;
  moduleID?: string;
  name?: string;
  outputObject?: string;
  sort?: string;
  updatedAt?: number;
}

export interface GQLTest {
  _id?: GQLObjectId;
  crossEndorsement?: GQLTestCrossEndorsement;
  temporaryEndorsements?: Array<GQLTestTemporaryEndorsement | null>;
}

export interface GQLSeries {
  _id?: GQLObjectId;
  createdAt?: number;
  deployed?: GQLSeriesDeployed;
  raw?: GQLSeriesRaw;
  seriesID?: string;
  updatedAt?: number;
}

export interface GQLSubscriptionInsertInput {
  _id?: GQLObjectId;
  abiFileUrl?: string;
  address?: string;
  blockchain?: string;
  lastBlockRead?: GQLLong;
  status?: string;
  superType?: string;
}

export interface GQLUi_chartUpdateInput {
  linkSuffix_unset?: boolean;
  aggregationField_unset?: boolean;
  limit?: number;
  createdAt_unset?: boolean;
  _id_unset?: boolean;
  outputObject?: string;
  field?: string;
  linkSuffix?: string;
  updatedAt_inc?: number;
  name_unset?: boolean;
  function_unset?: boolean;
  moduleID?: string;
  updatedAt_unset?: boolean;
  dataObject_unset?: boolean;
  sort?: string;
  function?: string;
  airtableId_unset?: boolean;
  limit_inc?: number;
  updatedAt?: number;
  name?: string;
  createdAt_inc?: number;
  _id?: GQLObjectId;
  aggregationField?: string;
  sort_unset?: boolean;
  moduleID_unset?: boolean;
  createdAt?: number;
  outputObject_unset?: boolean;
  dataObject?: string;
  field_unset?: boolean;
  limit_unset?: boolean;
  airtableId?: string;
}

export interface GQLAskDeployedUpdateInput {
  askCreator_unset?: boolean;
  showcaseFee?: string;
  blockchain_unset?: boolean;
  values?: Array<GQLAskDeployedValueUpdateInput | null>;
  status_unset?: boolean;
  currentAskValue_unset?: boolean;
  status?: string;
  tokenID_unset?: boolean;
  tokenAddress_unset?: boolean;
  askAddress?: string;
  values_unset?: boolean;
  tokenAddress?: string;
  superType?: string;
  askCreator?: string;
  endTime_inc?: number;
  currentAskValue?: string;
  tokenID?: string;
  blockchain?: string;
  superType_unset?: boolean;
  askAddress_unset?: boolean;
  showcaseFee_unset?: boolean;
  endTime_unset?: boolean;
  endTime?: number;
}

export interface GQLCol1 {
  _id?: GQLObjectId;
  address?: string;
  createdAt?: number;
  creator?: string;
  description?: string;
  hash?: string;
  layers?: Array<GQLCol1Layer | null>;
  maximum?: number;
  mintCost?: number;
  name?: string;
  seriesId?: string;
  supply?: number;
  updatedAt?: number;
}

export interface GQLTokensDistinct {
  type?: string;
}

export interface GQLRoyaltyInsertInput {
  lowerValue?: number;
  percentage?: number;
  upperValue?: number;
  _id?: GQLObjectId;
  count?: number;
}

export interface GQLBlockchainNetworkTestInsertInput {
  endpoint?: string;
  browser?: string;
}

export interface GQLCollectionRawMediumUpdateInput {
  role?: string;
  width_inc?: number;
  hash_unset?: boolean;
  mimetype_unset?: boolean;
  height_unset?: boolean;
  subtitle?: string;
  width_unset?: boolean;
  width?: number;
  weight?: number;
  weight_inc?: number;
  role_unset?: boolean;
  weight_unset?: boolean;
  subtitle_unset?: boolean;
  height?: number;
  mimetype?: string;
  height_inc?: number;
  hash?: string;
}

export interface GQLSeriesQueryInput {
  updatedAt_ne?: number;
  seriesID_ne?: string;
  _id_ne?: GQLObjectId;
  updatedAt_gte?: number;
  _id_gt?: GQLObjectId;
  _id_in?: Array<GQLObjectId | null>;
  seriesID_lt?: string;
  seriesID_nin?: Array<string | null>;
  AND?: Array<GQLSeriesQueryInput>;
  updatedAt_lte?: number;
  updatedAt_nin?: Array<number | null>;
  updatedAt_lt?: number;
  _id_lte?: GQLObjectId;
  _id_gte?: GQLObjectId;
  createdAt?: number;
  raw?: GQLSeriesRawQueryInput;
  updatedAt_in?: Array<number | null>;
  createdAt_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  _id_lt?: GQLObjectId;
  seriesID?: string;
  createdAt_gte?: number;
  seriesID_gt?: string;
  createdAt_lt?: number;
  seriesID_in?: Array<string | null>;
  createdAt_gt?: number;
  deployed?: GQLSeriesDeployedQueryInput;
  OR?: Array<GQLSeriesQueryInput>;
  updatedAt_exists?: boolean;
  _id?: GQLObjectId;
  createdAt_nin?: Array<number | null>;
  seriesID_exists?: boolean;
  updatedAt_gt?: number;
  createdAt_ne?: number;
  seriesID_gte?: string;
  seriesID_lte?: string;
  updatedAt?: number;
  _id_exists?: boolean;
  deployed_exists?: boolean;
  createdAt_lte?: number;
  createdAt_in?: Array<number | null>;
  raw_exists?: boolean;
}

export interface GQLAuctionQueryInput {
  _id_exists?: boolean;
  createdAt_nin?: Array<number | null>;
  _id_in?: Array<GQLObjectId | null>;
  updatedAt_nin?: Array<number | null>;
  _id_nin?: Array<GQLObjectId | null>;
  auctionID_ne?: string;
  updatedAt_gt?: number;
  updatedAt_gte?: number;
  updatedAt?: number;
  auctionID_exists?: boolean;
  createdAt_gt?: number;
  createdAt_ne?: number;
  deployed_exists?: boolean;
  createdAt_in?: Array<number | null>;
  updatedAt_exists?: boolean;
  createdAt?: number;
  AND?: Array<GQLAuctionQueryInput>;
  _id_lt?: GQLObjectId;
  _id_gte?: GQLObjectId;
  auctionID_lt?: string;
  _id_ne?: GQLObjectId;
  updatedAt_lt?: number;
  createdAt_lt?: number;
  _id_gt?: GQLObjectId;
  auctionID_gt?: string;
  raw?: GQLAuctionRawQueryInput;
  raw_exists?: boolean;
  auctionID_gte?: string;
  updatedAt_ne?: number;
  auctionID_nin?: Array<string | null>;
  deployed?: GQLAuctionDeployedQueryInput;
  createdAt_lte?: number;
  createdAt_gte?: number;
  auctionID_in?: Array<string | null>;
  updatedAt_in?: Array<number | null>;
  createdAt_exists?: boolean;
  auctionID?: string;
  auctionID_lte?: string;
  _id?: GQLObjectId;
  _id_lte?: GQLObjectId;
  updatedAt_lte?: number;
  OR?: Array<GQLAuctionQueryInput>;
}

export interface GQLPrimary_jsonInsertInput {
  createdAt?: number;
  hash?: string;
  jsonString?: string;
  _id?: GQLObjectId;
}

export enum GQLAuctionSortByInput {
  AUCTIONID_ASC = 'AUCTIONID_ASC',
  AUCTIONID_DESC = 'AUCTIONID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLBlockchainNetworkMainUpdateInput {
  browser_unset?: boolean;
  endpoint?: string;
  endpoint_unset?: boolean;
  browser?: string;
}

export interface GQLBidUpdateInput {
  createdAt_unset?: boolean;
  updatedAt_inc?: number;
  deployed?: GQLBidDeployedUpdateInput;
  deployed_unset?: boolean;
  _id_unset?: boolean;
  bidID?: string;
  createdAt?: number;
  createdAt_inc?: number;
  raw?: GQLBidRawUpdateInput;
  bidID_unset?: boolean;
  updatedAt?: number;
  updatedAt_unset?: boolean;
  raw_unset?: boolean;
  _id?: GQLObjectId;
}

export interface GQLCommissionQueryInput {
  type_ne?: string;
  blockchain_exists?: boolean;
  commissionId_ne?: string;
  blockchain_gt?: string;
  valueBNB_lte?: string;
  commissionId_nin?: Array<string | null>;
  valueBNB_nin?: Array<string | null>;
  valueBNB_lt?: string;
  value_ne?: string;
  valueBNB_in?: Array<string | null>;
  blockchain_lte?: string;
  value_lte?: string;
  _id?: GQLObjectId;
  commissionId_in?: Array<string | null>;
  value_nin?: Array<string | null>;
  commissionId_gte?: string;
  value?: string;
  commissionId_lt?: string;
  valueBNB_ne?: string;
  commissionId_gt?: string;
  type_exists?: boolean;
  description_ne?: string;
  value_gt?: string;
  _id_in?: Array<GQLObjectId | null>;
  description_gte?: string;
  type_gte?: string;
  _id_gt?: GQLObjectId;
  value_in?: Array<string | null>;
  valueBNB?: string;
  _id_ne?: GQLObjectId;
  type_lt?: string;
  _id_lte?: GQLObjectId;
  valueBNB_gt?: string;
  value_lt?: string;
  blockchain_in?: Array<string | null>;
  blockchain_ne?: string;
  valueBNB_exists?: boolean;
  commissionId_exists?: boolean;
  commissionId_lte?: string;
  value_gte?: string;
  type_in?: Array<string | null>;
  type_nin?: Array<string | null>;
  type?: string;
  OR?: Array<GQLCommissionQueryInput>;
  description?: string;
  description_lt?: string;
  blockchain?: string;
  value_exists?: boolean;
  description_lte?: string;
  type_gt?: string;
  _id_nin?: Array<GQLObjectId | null>;
  blockchain_lt?: string;
  _id_lt?: GQLObjectId;
  description_nin?: Array<string | null>;
  _id_exists?: boolean;
  valueBNB_gte?: string;
  blockchain_gte?: string;
  blockchain_nin?: Array<string | null>;
  description_in?: Array<string | null>;
  description_gt?: string;
  _id_gte?: GQLObjectId;
  type_lte?: string;
  AND?: Array<GQLCommissionQueryInput>;
  description_exists?: boolean;
  commissionId?: string;
}

export interface GQLPaginationAction {
  time_gt?: number;
  isAsc?: boolean;
  skip?: number;
  limit?: number;
}

export interface GQLAskQueryInput {
  askID_gt?: string;
  createdAt_in?: Array<number | null>;
  _id_gte?: GQLObjectId;
  AND?: Array<GQLAskQueryInput>;
  OR?: Array<GQLAskQueryInput>;
  _id_lte?: GQLObjectId;
  askID_gte?: string;
  createdAt_ne?: number;
  _id_lt?: GQLObjectId;
  askID_lt?: string;
  updatedAt_ne?: number;
  updatedAt_in?: Array<number | null>;
  updatedAt_exists?: boolean;
  createdAt_lte?: number;
  updatedAt_nin?: Array<number | null>;
  askID_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  askID?: string;
  updatedAt_lte?: number;
  createdAt?: number;
  raw?: GQLAskRawQueryInput;
  createdAt_gt?: number;
  updatedAt_gte?: number;
  raw_exists?: boolean;
  askID_ne?: string;
  _id_exists?: boolean;
  askID_in?: Array<string | null>;
  updatedAt_lt?: number;
  deployed_exists?: boolean;
  updatedAt_gt?: number;
  _id?: GQLObjectId;
  askID_nin?: Array<string | null>;
  updatedAt?: number;
  createdAt_gte?: number;
  _id_in?: Array<GQLObjectId | null>;
  askID_lte?: string;
  createdAt_nin?: Array<number | null>;
  _id_gt?: GQLObjectId;
  createdAt_exists?: boolean;
  createdAt_lt?: number;
  _id_ne?: GQLObjectId;
  deployed?: GQLAskDeployedQueryInput;
}

export interface GQLTokenColImageUpdateInput {
  height_unset?: boolean;
  width?: number;
  height?: number;
  mimetype_unset?: boolean;
  weight_inc?: number;
  height_inc?: number;
  rarity_unset?: boolean;
  mimetype?: string;
  rarity?: number;
  width_inc?: number;
  width_unset?: boolean;
  subtitle_unset?: boolean;
  weight?: number;
  hash_unset?: boolean;
  weight_unset?: boolean;
  hash?: string;
  subtitle?: string;
  rarity_inc?: number;
}

export interface GQLPaginationCollection {
  skip?: number;
  created_lt?: number;
  limit?: number;
  search?: string;
  creator?: string;
  sort?: GQLPaginationCollectionSort;
}

export interface GQLActionActionAttributeUpdateInput {
  bidStep_unset?: boolean;
  endorsementCreator_unset?: boolean;
  managerSuperType?: string;
  managerSuperType_unset?: boolean;
  auctionStartTime?: number;
  actionCapture?: string;
  askValue?: string;
  showcaseFee?: string;
  actionStatus?: string;
  sealCreator?: string;
  showcaseFee_unset?: boolean;
  minimalBid_unset?: boolean;
  submittedBidOwner_unset?: boolean;
  askValue_unset?: boolean;
  auctionCreator?: string;
  releasedBidValue?: string;
  managerExpirationTime_inc?: number;
  submittedBidValue_unset?: boolean;
  bidCreator?: string;
  releasedBidValue_unset?: boolean;
  minimalBid?: string;
  auctionEndTime?: number;
  auctionEndTime_inc?: number;
  bidCreator_unset?: boolean;
  submittedBidValue?: string;
  bidValue_unset?: boolean;
  askEndTime_inc?: number;
  managerExpirationTime?: number;
  usdValue_unset?: boolean;
  auctionStartTime_unset?: boolean;
  finalBidValue_unset?: boolean;
  usdValue?: number;
  releasedBidOwner?: string;
  bidEndTime?: number;
  bidValue?: string;
  managerExpirationTime_unset?: boolean;
  sealCreator_unset?: boolean;
  submittedBidOwner?: string;
  bidEndTime_inc?: number;
  usdValue_inc?: number;
  releasedBidOwner_unset?: boolean;
  askEndTime_unset?: boolean;
  auctionStartTime_inc?: number;
  bidStep?: string;
  askEndTime?: number;
  auctionEndTime_unset?: boolean;
  askCreator_unset?: boolean;
  bidEndTime_unset?: boolean;
  actionCapture_unset?: boolean;
  finalBidValue?: string;
  askCreator?: string;
  endorsementCreator?: string;
  auctionCreator_unset?: boolean;
  actionStatus_unset?: boolean;
}

export interface GQLContract_typeAbi {
  root?: string;
  series?: string;
  token?: string;
  trx?: string;
}

export interface GQLAuctionDeployed {
  auctionAddress?: string;
  bidStep?: string;
  bids?: Array<GQLAuctionDeployedBid | null>;
  endTime?: number;
  finalBid?: string;
  showcaseFee?: string;
  startBid?: string;
  startTime?: number;
  status?: string;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
}

export interface GQLDailyUpdateInput {
  tokensEndorsed?: number;
  date?: number;
  saleMin_inc?: number;
  tokensCreated?: number;
  tokensCreated_unset?: boolean;
  totalEndorsementsSum_unset?: boolean;
  totalSum_inc?: number;
  totalEndorsementsSum_inc?: number;
  blockchain?: string;
  tokensCreated_inc?: number;
  saleAverage?: number;
  tokensEndorsed_inc?: number;
  date_unset?: boolean;
  totalSum_unset?: boolean;
  saleMax?: number;
  createdAt?: number;
  tokensEndorsed_unset?: boolean;
  saleMax_unset?: boolean;
  tokensSold_inc?: number;
  totalSum?: number;
  saleMax_inc?: number;
  totalSalesSum_unset?: boolean;
  _id?: GQLObjectId;
  totalEndorsementsSum?: number;
  updatedAt_inc?: number;
  endorsementMax_unset?: boolean;
  updatedAt_unset?: boolean;
  _id_unset?: boolean;
  updatedAt?: number;
  saleAverage_unset?: boolean;
  tokensSold_unset?: boolean;
  endorsementMax_inc?: number;
  totalSalesSum_inc?: number;
  createdAt_inc?: number;
  endorsementMin_unset?: boolean;
  saleMin?: number;
  totalSalesSum?: number;
  endorsementMax?: number;
  endorsementMin_inc?: number;
  endorsementAverage?: number;
  endorsementAverage_inc?: number;
  endorsementAverage_unset?: boolean;
  createdAt_unset?: boolean;
  saleAverage_inc?: number;
  blockchain_unset?: boolean;
  endorsementMin?: number;
  date_inc?: number;
  saleMin_unset?: boolean;
  tokensSold?: number;
}

export interface GQLPaginationUiManagement {
  skip?: number;
  limit?: number;
}

export interface GQLBlockchainNetworkQueryInput {
  test_exists?: boolean;
  AND?: Array<GQLBlockchainNetworkQueryInput>;
  OR?: Array<GQLBlockchainNetworkQueryInput>;
  main?: GQLBlockchainNetworkMainQueryInput;
  main_exists?: boolean;
  test?: GQLBlockchainNetworkTestQueryInput;
}

export interface GQLActionTokenAttributeInsertInput {
  maximum?: number;
  newOwner?: string;
  ownerPublicKey?: string;
  tokenCreator?: string;
  collectionID?: string;
  creatorFees?: string;
  supply?: number;
  collectionCreator?: string;
  hash?: string;
  manager?: string;
  owner?: string;
  tokenID?: string;
  seriesCreator?: string;
  oldOwner?: string;
  seriesID?: GQLActionTokenAttributeSeriesIDRelationInput;
}

export interface GQLSwift_messageMessageQueryInput {
  superType_nin?: Array<string | null>;
  superType_in?: Array<string | null>;
  discoveryTime_gt?: number;
  resolution_exists?: boolean;
  actionCode_gte?: string;
  senderAddress_lte?: string;
  discoveryTime_gte?: number;
  parsingTime_nin?: Array<number | null>;
  discoveryTime?: number;
  senderAddress_ne?: string;
  time_nin?: Array<number | null>;
  resolution_nin?: Array<string | null>;
  senderAddress_lt?: string;
  resolution_lte?: string;
  superType_gt?: string;
  actionCode_nin?: Array<string | null>;
  discoveryTime_ne?: number;
  actionCode_ne?: string;
  discoveryTime_in?: Array<number | null>;
  discoveryTime_exists?: boolean;
  discoveryTime_lte?: number;
  AND?: Array<GQLSwift_messageMessageQueryInput>;
  actionCode_gt?: string;
  actionCode_exists?: boolean;
  time_lt?: number;
  discoveryTime_nin?: Array<number | null>;
  time?: number;
  resolution?: string;
  actionCode_lte?: string;
  senderAddress_nin?: Array<string | null>;
  time_ne?: number;
  discoveryTime_lt?: number;
  senderAddress_gt?: string;
  time_gte?: number;
  parsingTime_gte?: number;
  superType_lt?: string;
  parsingTime_in?: Array<number | null>;
  senderAddress_exists?: boolean;
  senderAddress_in?: Array<string | null>;
  resolution_gt?: string;
  parsingTime_lte?: number;
  parsingTime?: number;
  senderAddress?: string;
  actionCode?: string;
  superType?: string;
  superType_exists?: boolean;
  parsingTime_gt?: number;
  actionCode_lt?: string;
  superType_ne?: string;
  resolution_lt?: string;
  superType_lte?: string;
  time_lte?: number;
  parsingTime_lt?: number;
  OR?: Array<GQLSwift_messageMessageQueryInput>;
  parsingTime_exists?: boolean;
  resolution_gte?: string;
  superType_gte?: string;
  senderAddress_gte?: string;
  resolution_ne?: string;
  resolution_in?: Array<string | null>;
  time_exists?: boolean;
  parsingTime_ne?: number;
  actionCode_in?: Array<string | null>;
  time_in?: Array<number | null>;
  time_gt?: number;
}

export interface GQLOpendatumUpdateInput {
  key_unset?: boolean;
  _id_unset?: boolean;
  updatedAt_inc?: number;
  permissions?: Array<GQLOpendatumPermissionUpdateInput | null>;
  createdAt_unset?: boolean;
  updatedAt?: number;
  updatedAt_unset?: boolean;
  key?: string;
  permissions_unset?: boolean;
  createdAt?: number;
  createdAt_inc?: number;
  _id?: GQLObjectId;
}

export interface GQLUi_chartInsertInput {
  function?: string;
  airtableId?: string;
  linkSuffix?: string;
  limit?: number;
  moduleID?: string;
  outputObject?: string;
  updatedAt?: number;
  sort?: string;
  createdAt?: number;
  _id?: GQLObjectId;
  field?: string;
  name?: string;
  aggregationField?: string;
  dataObject?: string;
}

export interface GQLTestQueryInput {
  _id?: GQLObjectId;
  _id_exists?: boolean;
  _id_gt?: GQLObjectId;
  _id_nin?: Array<GQLObjectId | null>;
  _id_gte?: GQLObjectId;
  crossEndorsement?: GQLTestCrossEndorsementQueryInput;
  OR?: Array<GQLTestQueryInput>;
  temporaryEndorsements_exists?: boolean;
  crossEndorsement_exists?: boolean;
  temporaryEndorsements_in?: Array<GQLTestTemporaryEndorsementQueryInput | null>;
  _id_in?: Array<GQLObjectId | null>;
  _id_ne?: GQLObjectId;
  _id_lt?: GQLObjectId;
  temporaryEndorsements?: Array<GQLTestTemporaryEndorsementQueryInput | null>;
  temporaryEndorsements_nin?: Array<GQLTestTemporaryEndorsementQueryInput | null>;
  AND?: Array<GQLTestQueryInput>;
  _id_lte?: GQLObjectId;
}

export interface GQLBidQueryInput {
  _id_exists?: boolean;
  bidID_gt?: string;
  deployed?: GQLBidDeployedQueryInput;
  AND?: Array<GQLBidQueryInput>;
  createdAt_gte?: number;
  createdAt_lte?: number;
  createdAt_in?: Array<number | null>;
  deployed_exists?: boolean;
  updatedAt?: number;
  bidID_nin?: Array<string | null>;
  updatedAt_gte?: number;
  createdAt_lt?: number;
  bidID_gte?: string;
  bidID_ne?: string;
  bidID_exists?: boolean;
  createdAt_nin?: Array<number | null>;
  updatedAt_in?: Array<number | null>;
  bidID_lte?: string;
  _id_gt?: GQLObjectId;
  raw_exists?: boolean;
  createdAt_gt?: number;
  createdAt_exists?: boolean;
  OR?: Array<GQLBidQueryInput>;
  updatedAt_ne?: number;
  updatedAt_lt?: number;
  updatedAt_nin?: Array<number | null>;
  _id?: GQLObjectId;
  _id_ne?: GQLObjectId;
  updatedAt_gt?: number;
  _id_gte?: GQLObjectId;
  bidID_lt?: string;
  createdAt?: number;
  createdAt_ne?: number;
  updatedAt_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  raw?: GQLBidRawQueryInput;
  _id_lt?: GQLObjectId;
  bidID_in?: Array<string | null>;
  _id_in?: Array<GQLObjectId | null>;
  _id_lte?: GQLObjectId;
  bidID?: string;
  updatedAt_lte?: number;
}

export interface GQLAskDeployed {
  askAddress?: string;
  askCreator?: string;
  blockchain?: string;
  currentAskValue?: string;
  endTime?: number;
  showcaseFee?: string;
  status?: string;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
  values?: Array<GQLAskDeployedValue | null>;
}

export interface GQLCommissionUpdateInput {
  description?: string;
  valueBNB?: string;
  commissionId?: string;
  description_unset?: boolean;
  blockchain_unset?: boolean;
  value?: string;
  value_unset?: boolean;
  type_unset?: boolean;
  type?: string;
  commissionId_unset?: boolean;
  valueBNB_unset?: boolean;
  _id_unset?: boolean;
  _id?: GQLObjectId;
  blockchain?: string;
}

export interface GQLContract_typeAbiUpdateInput {
  root_unset?: boolean;
  series?: string;
  series_unset?: boolean;
  token?: string;
  token_unset?: boolean;
  trx?: string;
  trx_unset?: boolean;
  root?: string;
}

export enum GQLEndorsementSortByInput {
  ENDORSEMENTID_ASC = 'ENDORSEMENTID_ASC',
  ENDORSEMENTID_DESC = 'ENDORSEMENTID_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC'
}

export interface GQLPrimary_jsonQueryInput {
  hash_ne?: string;
  _id_lte?: GQLObjectId;
  hash_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  createdAt_lt?: number;
  _id_gt?: GQLObjectId;
  hash_lt?: string;
  jsonString_ne?: string;
  createdAt_in?: Array<number | null>;
  AND?: Array<GQLPrimary_jsonQueryInput>;
  hash_gt?: string;
  hash_gte?: string;
  jsonString_gt?: string;
  createdAt_ne?: number;
  createdAt_nin?: Array<number | null>;
  createdAt_gte?: number;
  jsonString_in?: Array<string | null>;
  createdAt_gt?: number;
  createdAt_exists?: boolean;
  _id_ne?: GQLObjectId;
  _id_gte?: GQLObjectId;
  _id?: GQLObjectId;
  createdAt_lte?: number;
  _id_exists?: boolean;
  jsonString_lt?: string;
  OR?: Array<GQLPrimary_jsonQueryInput>;
  hash_nin?: Array<string | null>;
  jsonString_nin?: Array<string | null>;
  createdAt?: number;
  hash_lte?: string;
  jsonString_exists?: boolean;
  jsonString_gte?: string;
  hash_in?: Array<string | null>;
  jsonString?: string;
  jsonString_lte?: string;
  hash?: string;
  _id_lt?: GQLObjectId;
  _id_nin?: Array<GQLObjectId | null>;
}

export interface GQLHourlyQueryInput {
  BNBtoUSD_gte?: number;
  EVERtoUSD?: number;
  EVERtoUSD_gte?: number;
  USD_exists?: boolean;
  USD_nin?: Array<number | null>;
  BNBtoUSD_gt?: number;
  time_in?: Array<number | null>;
  _id_ne?: GQLObjectId;
  BNBtoUSD_ne?: number;
  _id_nin?: Array<GQLObjectId | null>;
  blockchain_ne?: string;
  BNBtoUSD_exists?: boolean;
  _id_gte?: GQLObjectId;
  USD_in?: Array<number | null>;
  _id_exists?: boolean;
  USD_ne?: number;
  BNBtoUSD_lte?: number;
  blockchain_gt?: string;
  USD_gt?: number;
  _id_in?: Array<GQLObjectId | null>;
  EVERtoUSD_nin?: Array<number | null>;
  blockchain_in?: Array<string | null>;
  time_gte?: number;
  EVERtoUSD_in?: Array<number | null>;
  BNBtoUSD?: number;
  time_nin?: Array<number | null>;
  OR?: Array<GQLHourlyQueryInput>;
  BNBtoUSD_lt?: number;
  blockchain_lte?: string;
  blockchain_exists?: boolean;
  USD_lt?: number;
  blockchain_lt?: string;
  time?: number;
  _id_gt?: GQLObjectId;
  EVERtoUSD_exists?: boolean;
  EVERtoUSD_gt?: number;
  blockchain_gte?: string;
  EVERtoUSD_ne?: number;
  _id_lte?: GQLObjectId;
  USD?: number;
  _id?: GQLObjectId;
  EVERtoUSD_lt?: number;
  _id_lt?: GQLObjectId;
  USD_gte?: number;
  time_lte?: number;
  AND?: Array<GQLHourlyQueryInput>;
  EVERtoUSD_lte?: number;
  USD_lte?: number;
  time_lt?: number;
  time_ne?: number;
  blockchain?: string;
  blockchain_nin?: Array<string | null>;
  time_gt?: number;
  time_exists?: boolean;
  BNBtoUSD_nin?: Array<number | null>;
  BNBtoUSD_in?: Array<number | null>;
}

export interface GQLLikeInsertInput {
  userAccountNumber?: number;
  _id?: GQLObjectId;
  seriesID?: string;
  status?: boolean;
  tokenID?: string;
}

export enum GQLCol1SortByInput {
  SUPPLY_ASC = 'SUPPLY_ASC',
  MINTCOST_ASC = 'MINTCOST_ASC',
  CREATOR_DESC = 'CREATOR_DESC',
  HASH_ASC = 'HASH_ASC',
  MAXIMUM_ASC = 'MAXIMUM_ASC',
  MAXIMUM_DESC = 'MAXIMUM_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  SUPPLY_DESC = 'SUPPLY_DESC',
  DESCRIPTION_DESC = 'DESCRIPTION_DESC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  NAME_ASC = 'NAME_ASC',
  DESCRIPTION_ASC = 'DESCRIPTION_ASC',
  HASH_DESC = 'HASH_DESC',
  SERIESID_DESC = 'SERIESID_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  ADDRESS_ASC = 'ADDRESS_ASC',
  ADDRESS_DESC = 'ADDRESS_DESC',
  MINTCOST_DESC = 'MINTCOST_DESC',
  CREATOR_ASC = 'CREATOR_ASC',
  NAME_DESC = 'NAME_DESC',
  SERIESID_ASC = 'SERIESID_ASC'
}

export interface GQLSubscription {
  _id?: GQLObjectId;
  abiFileUrl?: string;
  address?: string;
  blockchain?: string;
  lastBlockRead?: GQLLong;
  status?: string;
  superType?: string;
}

export enum GQLIntegrationSortByInput {
  _ID_ASC = '_ID_ASC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  CODE_ASC = 'CODE_ASC',
  NAME_ASC = 'NAME_ASC',
  _ID_DESC = '_ID_DESC',
  CODE_DESC = 'CODE_DESC',
  STATUS_DESC = 'STATUS_DESC',
  SUBTYPE_DESC = 'SUBTYPE_DESC',
  TYPE_DESC = 'TYPE_DESC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  STATUS_ASC = 'STATUS_ASC',
  TYPE_ASC = 'TYPE_ASC',
  NAME_DESC = 'NAME_DESC',
  SUBTYPE_ASC = 'SUBTYPE_ASC'
}

export enum GQLTokenPaginationSort {
  CREATED_ASC = 'CREATED_ASC',
  CREATED_DESC = 'CREATED_DESC'
}

export interface GQLUpdateManyPayload {
  matchedCount: number;
  modifiedCount: number;
}

export interface GQLAddress_abiInsertInput {
  superType?: string;
  _id?: GQLObjectId;
  address?: string;
  level?: string;
}

export interface GQLUserIntegrationQueryInput {
  priority_lt?: number;
  shadowAddresses?: Array<string | null>;
  name_in?: Array<string | null>;
  name_ne?: string;
  priority_in?: Array<number | null>;
  shadowAddresses_exists?: boolean;
  priority?: number;
  name?: string;
  priority_ne?: number;
  priority_exists?: boolean;
  name_gt?: string;
  name_nin?: Array<string | null>;
  priority_gte?: number;
  priority_lte?: number;
  priority_gt?: number;
  AND?: Array<GQLUserIntegrationQueryInput>;
  name_lte?: string;
  shadowAddresses_nin?: Array<string | null>;
  shadowAddresses_in?: Array<string | null>;
  name_gte?: string;
  OR?: Array<GQLUserIntegrationQueryInput>;
  name_exists?: boolean;
  name_lt?: string;
  priority_nin?: Array<number | null>;
}

export interface GQLCol1Layer {
  images?: Array<GQLCol1LayerImage | null>;
  layer?: string;
  points?: Array<GQLCol1LayerPoint | null>;
}

export interface GQLContract_typeHashField {
  collectionID?: string;
  creator?: string;
  creatorFee?: string;
  description?: string;
  height?: string;
  layers?: GQLContract_typeHashFieldLayer;
  media?: GQLContract_typeHashFieldMedium;
  minimalMintFee?: string;
  numberOfEditions?: string;
  title?: string;
  type?: string;
  width?: string;
}

export interface GQLTokenColUpdateInput {
  address?: string;
  address_unset?: boolean;
  tokenId_unset?: boolean;
  createdAt_inc?: number;
  seriesId_unset?: boolean;
  _id?: GQLObjectId;
  images_unset?: boolean;
  updatedAt_inc?: number;
  merged_unset?: boolean;
  seriesId?: string;
  createdAt_unset?: boolean;
  images?: Array<GQLTokenColImageUpdateInput | null>;
  createdAt?: number;
  updatedAt?: number;
  updatedAt_unset?: boolean;
  owner_unset?: boolean;
  owner?: string;
  merged?: string;
  _id_unset?: boolean;
  tokenId?: string;
}

export enum GQLOpendatumSortByInput {
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  KEY_ASC = 'KEY_ASC',
  KEY_DESC = 'KEY_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLCol1LayerImageUpdateInput {
  width_unset?: boolean;
  mimetype?: string;
  subtitle?: string;
  weight?: number;
  rarity_inc?: number;
  height?: number;
  hash_unset?: boolean;
  height_inc?: number;
  mimetype_unset?: boolean;
  rarity?: number;
  subtitle_unset?: boolean;
  height_unset?: boolean;
  hash?: string;
  weight_inc?: number;
  weight_unset?: boolean;
  width_inc?: number;
  width?: number;
  rarity_unset?: boolean;
}

export interface GQLTokenDeployedSeriesObjectRelationInput {
  create?: GQLSeriesInsertInput;
  link?: string;
}

export interface GQLContract {
  _id?: GQLObjectId;
  abiFile?: string;
  abiPath?: string;
  address?: string;
  blockchain?: string;
  environment?: string;
  longType?: string;
  network?: string;
  privacy?: string;
  status?: string;
  superType?: string;
}

export interface GQLCollectionQueryInput {
  collectionID_in?: Array<string | null>;
  title_in?: Array<string | null>;
  createdAt_nin?: Array<number | null>;
  creator_exists?: boolean;
  about_lte?: string;
  qualification_ne?: number;
  creatorAccountNumber_in?: Array<number | null>;
  _id_lte?: GQLObjectId;
  updatedAt?: number;
  collectionID_exists?: boolean;
  deployed?: GQLCollectionDeployedQueryInput;
  about?: string;
  _id_nin?: Array<GQLObjectId | null>;
  creatorAccountNumber_exists?: boolean;
  AND?: Array<GQLCollectionQueryInput>;
  title_gt?: string;
  updatedAt_in?: Array<number | null>;
  _id_lt?: GQLObjectId;
  updatedAt_lte?: number;
  raw?: GQLCollectionRawQueryInput;
  qualification_exists?: boolean;
  title_lte?: string;
  creator_ne?: string;
  updatedAt_nin?: Array<number | null>;
  creator_nin?: Array<string | null>;
  tokensInCollection_exists?: boolean;
  media_in?: Array<GQLCollectionMediumQueryInput | null>;
  collectionID_lt?: string;
  title_nin?: Array<string | null>;
  collectionID_lte?: string;
  qualification_nin?: Array<number | null>;
  qualification_lt?: number;
  updatedAt_gt?: number;
  creator_gt?: string;
  qualification_gte?: number;
  title_gte?: string;
  about_nin?: Array<string | null>;
  createdAt_ne?: number;
  creatorAccountNumber_gte?: number;
  createdAt_lt?: number;
  creator_lt?: string;
  collectionID_gte?: string;
  creatorAccountNumber_gt?: number;
  collectionID_ne?: string;
  creatorAccountNumber?: number;
  about_in?: Array<string | null>;
  creator_in?: Array<string | null>;
  _id_ne?: GQLObjectId;
  _id_exists?: boolean;
  creatorAccountNumber_lt?: number;
  updatedAt_gte?: number;
  qualification_gt?: number;
  collectionID_gt?: string;
  title?: string;
  _id?: GQLObjectId;
  tokensInCollection?: number;
  about_lt?: string;
  deployed_exists?: boolean;
  media?: Array<GQLCollectionMediumQueryInput | null>;
  tokensInCollection_ne?: number;
  _id_in?: Array<GQLObjectId | null>;
  createdAt_gt?: number;
  creator_lte?: string;
  collectionID?: string;
  createdAt?: number;
  updatedAt_lt?: number;
  media_exists?: boolean;
  creator_gte?: string;
  tokensInCollection_gte?: number;
  _id_gte?: GQLObjectId;
  creatorAccountNumber_lte?: number;
  tokensInCollection_nin?: Array<number | null>;
  creatorAccountNumber_ne?: number;
  tokensInCollection_in?: Array<number | null>;
  about_ne?: string;
  title_exists?: boolean;
  media_nin?: Array<GQLCollectionMediumQueryInput | null>;
  updatedAt_exists?: boolean;
  about_gt?: string;
  qualification_lte?: number;
  about_gte?: string;
  createdAt_exists?: boolean;
  updatedAt_ne?: number;
  collectionID_nin?: Array<string | null>;
  title_lt?: string;
  tokensInCollection_lt?: number;
  createdAt_lte?: number;
  qualification_in?: Array<number | null>;
  createdAt_in?: Array<number | null>;
  qualification?: number;
  raw_exists?: boolean;
  creatorAccountNumber_nin?: Array<number | null>;
  tokensInCollection_gt?: number;
  _id_gt?: GQLObjectId;
  creator?: string;
  title_ne?: string;
  tokensInCollection_lte?: number;
  about_exists?: boolean;
  OR?: Array<GQLCollectionQueryInput>;
  createdAt_gte?: number;
}

export interface GQLTokenInsertInput {
  tokenID?: string;
  updatedAt?: number;
  _id?: GQLObjectId;
  createdAt?: number;
  deployed?: GQLTokenDeployedInsertInput;
  raw?: GQLTokenRawInsertInput;
}

export interface GQLContract_typeAbiInsertInput {
  token?: string;
  trx?: string;
  root?: string;
  series?: string;
}

export interface GQLUi_moduleUpdateInput {
  buttonLink_unset?: boolean;
  buttonName_unset?: boolean;
  mode_unset?: boolean;
  updatedAt_inc?: number;
  status_unset?: boolean;
  itemType_unset?: boolean;
  moduleID?: string;
  page?: string;
  _id?: GQLObjectId;
  status?: string;
  managementIDs?: string;
  name_unset?: boolean;
  autoFinish?: number;
  managementIDs_unset?: boolean;
  autoFinish_unset?: boolean;
  timerVisible?: boolean;
  specialFeature_unset?: boolean;
  comment_unset?: boolean;
  updatedAt_unset?: boolean;
  buttonAction_unset?: boolean;
  buttonLink?: string;
  comment?: string;
  autoStart_inc?: number;
  mainLink_unset?: boolean;
  timerVisible_unset?: boolean;
  airtableId?: string;
  createdAt?: number;
  autoStart_unset?: boolean;
  page_unset?: boolean;
  autoFinish_inc?: number;
  mode?: string;
  moduleID_unset?: boolean;
  buttonName?: string;
  mainLink?: string;
  _id_unset?: boolean;
  createdAt_unset?: boolean;
  buttonAction?: string;
  buttonType?: string;
  buttonType_unset?: boolean;
  scope?: string;
  specialFeature?: string;
  scope_unset?: boolean;
  airtableId_unset?: boolean;
  autoStart?: number;
  itemType?: string;
  updatedAt?: number;
  createdAt_inc?: number;
  name?: string;
}

export interface GQLCol1LayerPointInsertInput {
  hash?: string;
  point?: number;
}

export enum GQLNew_sessionSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  TOKEN_ASC = 'TOKEN_ASC',
  TOKEN_DESC = 'TOKEN_DESC',
  WALLETADDRESS_ASC = 'WALLETADDRESS_ASC',
  WALLETADDRESS_DESC = 'WALLETADDRESS_DESC'
}

export interface GQLUserQueryInput {
  avatarHash_in?: Array<string | null>;
  defaultWallet_lt?: string;
  blockchain_exists?: boolean;
  managingAccount_nin?: Array<number | null>;
  wallpaperHash_gte?: string;
  registeredWallet_lt?: string;
  photoHash_lte?: string;
  wallpaperHash_gt?: string;
  registeredWallet_lte?: string;
  integrations_exists?: boolean;
  username_gte?: string;
  walletAddress_ne?: string;
  wallpaperHash_nin?: Array<string | null>;
  createdAt_exists?: boolean;
  nickname_gte?: string;
  blockchain_gte?: string;
  createdAt_nin?: Array<number | null>;
  wallpaperHash_in?: Array<string | null>;
  mergedAccounts?: Array<GQLUserMergedAccountQueryInput | null>;
  createdAt_lt?: number;
  avatarHash?: string;
  _id_lt?: GQLObjectId;
  about_nin?: Array<string | null>;
  updatedAt_gte?: number;
  about_in?: Array<string | null>;
  accountNumber?: number;
  _id_exists?: boolean;
  username_lt?: string;
  username_nin?: Array<string | null>;
  managingAccount_lt?: number;
  _id?: GQLObjectId;
  qualification_lte?: number;
  photoHash_in?: Array<string | null>;
  registeredWallet_exists?: boolean;
  language_gte?: string;
  walletAddress_in?: Array<string | null>;
  blockchain_gt?: string;
  createdAt_lte?: number;
  createdAt_in?: Array<number | null>;
  wallpaperHash?: string;
  language_in?: Array<string | null>;
  managingAccount_ne?: number;
  settings_exists?: boolean;
  username_in?: Array<string | null>;
  username_ne?: string;
  about_ne?: string;
  _id_gte?: GQLObjectId;
  integrations_nin?: Array<GQLUserIntegrationQueryInput | null>;
  nickname_exists?: boolean;
  username_gt?: string;
  nickname?: string;
  avatarHash_ne?: string;
  accountNumber_exists?: boolean;
  createdAt_gte?: number;
  managingAccount_lte?: number;
  registeredWallet_nin?: Array<string | null>;
  updatedAt_nin?: Array<number | null>;
  settings?: GQLUserSettingQueryInput;
  walletAddress_lte?: string;
  managingAccount_gt?: number;
  language_gt?: string;
  defaultWallet_gte?: string;
  mergedAccounts_exists?: boolean;
  integrations?: Array<GQLUserIntegrationQueryInput | null>;
  blockchain?: string;
  createdAt_ne?: number;
  nickname_in?: Array<string | null>;
  managingAccount_in?: Array<number | null>;
  blockchain_lte?: string;
  avatarHash_exists?: boolean;
  _id_lte?: GQLObjectId;
  nickname_gt?: string;
  walletAddress_gte?: string;
  defaultWallet?: string;
  accountNumber_nin?: Array<number | null>;
  photoHash_ne?: string;
  qualification_ne?: number;
  registeredWallet_ne?: string;
  defaultWallet_in?: Array<string | null>;
  qualification?: number;
  qualification_lt?: number;
  walletAddress?: string;
  updatedAt_gt?: number;
  avatarHash_lte?: string;
  walletAddress_gt?: string;
  _id_ne?: GQLObjectId;
  managingAccount_gte?: number;
  nickname_lte?: string;
  walletAddress_nin?: Array<string | null>;
  _id_nin?: Array<GQLObjectId | null>;
  username_exists?: boolean;
  registeredWallet_gt?: string;
  blockchain_nin?: Array<string | null>;
  username?: string;
  wallpaperHash_ne?: string;
  wallpaperHash_lt?: string;
  accountNumber_lte?: number;
  about_gt?: string;
  username_lte?: string;
  updatedAt_in?: Array<number | null>;
  AND?: Array<GQLUserQueryInput>;
  language_exists?: boolean;
  blockchain_lt?: string;
  accountNumber_ne?: number;
  walletAddress_lt?: string;
  managingAccount_exists?: boolean;
  qualification_in?: Array<number | null>;
  OR?: Array<GQLUserQueryInput>;
  qualification_nin?: Array<number | null>;
  updatedAt?: number;
  updatedAt_exists?: boolean;
  avatarHash_gte?: string;
  language_nin?: Array<string | null>;
  managingAccount?: number;
  photoHash_exists?: boolean;
  about_lt?: string;
  accountNumber_in?: Array<number | null>;
  language_lt?: string;
  avatarHash_nin?: Array<string | null>;
  wallpaperHash_lte?: string;
  updatedAt_ne?: number;
  nickname_lt?: string;
  about_exists?: boolean;
  photoHash?: string;
  nickname_nin?: Array<string | null>;
  defaultWallet_gt?: string;
  language_ne?: string;
  walletAddress_exists?: boolean;
  integrations_in?: Array<GQLUserIntegrationQueryInput | null>;
  photoHash_gte?: string;
  photoHash_gt?: string;
  avatarHash_lt?: string;
  blockchain_ne?: string;
  updatedAt_lt?: number;
  updatedAt_lte?: number;
  photoHash_lt?: string;
  about_lte?: string;
  photoHash_nin?: Array<string | null>;
  qualification_exists?: boolean;
  registeredWallet?: string;
  language?: string;
  about_gte?: string;
  accountNumber_lt?: number;
  registeredWallet_gte?: string;
  defaultWallet_exists?: boolean;
  defaultWallet_lte?: string;
  accountNumber_gt?: number;
  _id_in?: Array<GQLObjectId | null>;
  wallpaperHash_exists?: boolean;
  mergedAccounts_in?: Array<GQLUserMergedAccountQueryInput | null>;
  defaultWallet_nin?: Array<string | null>;
  language_lte?: string;
  _id_gt?: GQLObjectId;
  createdAt_gt?: number;
  qualification_gt?: number;
  registeredWallet_in?: Array<string | null>;
  qualification_gte?: number;
  about?: string;
  accountNumber_gte?: number;
  defaultWallet_ne?: string;
  nickname_ne?: string;
  createdAt?: number;
  mergedAccounts_nin?: Array<GQLUserMergedAccountQueryInput | null>;
  avatarHash_gt?: string;
  blockchain_in?: Array<string | null>;
}

export interface GQLUi_management {
  _id?: GQLObjectId;
  airtableId?: string;
  assetID?: GQLUi_asset;
  assetTitle?: string;
  createdAt?: number;
  image?: string;
  itemID?: string;
  itemLink?: string;
  moduleID?: GQLUi_module;
  moduleItemType?: string;
  moduleName?: string;
  moduleScope?: string;
  recordID?: string;
  tag?: Array<string | null>;
  updatedAt?: number;
  visibilityStatus?: string;
}

export interface GQLAskRawValueInsertInput {
  askTime?: number;
  askValue?: string;
}

export interface GQLActionColTokenAttributeUpdateInput {
  seriesCreator?: string;
  seriesCreator_unset?: boolean;
  seriesID?: string;
  seriesID_unset?: boolean;
  tokenID?: string;
  tokenID_unset?: boolean;
}

export interface GQLLocaleModuleRelationInput {
  create?: GQLModuleInsertInput;
  link?: string;
}

export interface GQLContract_typeHashFieldLayerImageUpdateInput {
  hash?: string;
  mimetype?: string;
  rarityWeight?: string;
  rarityWeight_unset?: boolean;
  mimetype_unset?: boolean;
  imageIndex?: string;
  imageIndex_unset?: boolean;
  weight_unset?: boolean;
  hash_unset?: boolean;
  weight?: string;
}

export interface GQLEndorsementDeployedUpdateInput {
  expiresAt?: number;
  blockchain_unset?: boolean;
  masterMediaType_unset?: boolean;
  sealID_unset?: boolean;
  sealID?: string;
  status?: string;
  corner?: string;
  value_unset?: boolean;
  requestedCorners?: number;
  masterID_unset?: boolean;
  corner_unset?: boolean;
  superType_unset?: boolean;
  type_unset?: boolean;
  value?: string;
  tokenID_unset?: boolean;
  creator_unset?: boolean;
  blockchain?: string;
  masterMediaType?: string;
  superType?: string;
  type?: string;
  expiresAt_inc?: number;
  expiresAt_unset?: boolean;
  masterID?: string;
  requestedCorners_unset?: boolean;
  status_unset?: boolean;
  creator?: string;
  tokenID?: string;
  requestedCorners_inc?: number;
}

export interface GQLNew_sessionQueryInput {
  _id_lte?: GQLObjectId;
  walletAddress_ne?: string;
  walletAddress_gt?: string;
  token_gt?: string;
  _id_in?: Array<GQLObjectId | null>;
  _id_gt?: GQLObjectId;
  token?: string;
  AND?: Array<GQLNew_sessionQueryInput>;
  walletAddress_gte?: string;
  _id?: GQLObjectId;
  _id_gte?: GQLObjectId;
  walletAddress_lte?: string;
  OR?: Array<GQLNew_sessionQueryInput>;
  _id_lt?: GQLObjectId;
  walletAddress_nin?: Array<string | null>;
  _id_exists?: boolean;
  _id_ne?: GQLObjectId;
  token_nin?: Array<string | null>;
  token_lt?: string;
  walletAddress?: string;
  token_gte?: string;
  walletAddress_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  token_in?: Array<string | null>;
  token_exists?: boolean;
  walletAddress_in?: Array<string | null>;
  token_lte?: string;
  walletAddress_lt?: string;
  token_ne?: string;
}

export interface GQLActionColActionAttribute {
  actionCapture?: string;
}

export interface GQLContract_typeHashFieldMedium {
  hash?: string;
  height?: string;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: string;
  width?: string;
}

export interface GQLModuleInsertInput {
  _id?: GQLObjectId;
  page?: string;
  module?: string;
  nameType?: string;
  type?: string;
  createdAt?: number;
  updatedAt?: number;
}

export interface GQLAuctionRawUpdateInput {
  tokenID?: string;
  endTime_inc?: number;
  showcaseFee_unset?: boolean;
  endTime_unset?: boolean;
  bids?: Array<GQLAuctionRawBidUpdateInput | null>;
  tokenAddress_unset?: boolean;
  endTime?: number;
  superType?: string;
  startBid_unset?: boolean;
  startBid?: string;
  tokenAddress?: string;
  bidStep?: string;
  bids_unset?: boolean;
  bidStep_unset?: boolean;
  startTime_inc?: number;
  tokenID_unset?: boolean;
  startTime?: number;
  startTime_unset?: boolean;
  auctionCreator_unset?: boolean;
  showcaseFee?: string;
  auctionCreator?: string;
  superType_unset?: boolean;
}

export enum GQLFormatSortByInput {
  WIDTH_ASC = 'WIDTH_ASC',
  WIDTH_DESC = 'WIDTH_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  FORMATNAME_ASC = 'FORMATNAME_ASC',
  FORMATNAME_DESC = 'FORMATNAME_DESC',
  HEIGHT_ASC = 'HEIGHT_ASC',
  HEIGHT_DESC = 'HEIGHT_DESC'
}

export interface GQLBlockchain {
  _id?: GQLObjectId;
  contractsRepo?: string;
  name?: string;
  network?: GQLBlockchainNetwork;
}

export interface GQLUi_managementModuleIDRelationInput {
  create?: GQLUi_moduleInsertInput;
  link?: string;
}

export interface GQLSwift_messageMessageUpdateInput {
  senderAddress_unset?: boolean;
  discoveryTime?: number;
  time?: number;
  resolution_unset?: boolean;
  time_unset?: boolean;
  discoveryTime_inc?: number;
  superType?: string;
  parsingTime_unset?: boolean;
  senderAddress?: string;
  parsingTime_inc?: number;
  time_inc?: number;
  discoveryTime_unset?: boolean;
  parsingTime?: number;
  actionCode_unset?: boolean;
  superType_unset?: boolean;
  actionCode?: string;
  resolution?: string;
}

export interface GQLCollectionDeployedUpdateInput {
  superType?: string;
  type?: string;
  superType_unset?: boolean;
  supply_unset?: boolean;
  address?: string;
  hash_unset?: boolean;
  privacy_unset?: boolean;
  supply_inc?: number;
  address_unset?: boolean;
  creator_unset?: boolean;
  blockchain?: string;
  hash?: string;
  blockchain_unset?: boolean;
  supply?: number;
  privacy?: string;
  type_unset?: boolean;
  blockNumber_unset?: boolean;
  blockNumber?: GQLLong;
  creator?: string;
}

export interface GQLCol1LayerInsertInput {
  layer?: string;
  points?: Array<GQLCol1LayerPointInsertInput | null>;
  images?: Array<GQLCol1LayerImageInsertInput | null>;
}

export interface GQLTokenColImageQueryInput {
  rarity_ne?: number;
  mimetype_lt?: string;
  height_gt?: number;
  width_gt?: number;
  height_lt?: number;
  mimetype_gte?: string;
  mimetype_ne?: string;
  rarity_gt?: number;
  width_nin?: Array<number | null>;
  width_exists?: boolean;
  width_lt?: number;
  AND?: Array<GQLTokenColImageQueryInput>;
  hash?: string;
  OR?: Array<GQLTokenColImageQueryInput>;
  width_lte?: number;
  weight_lt?: number;
  weight_in?: Array<number | null>;
  subtitle_in?: Array<string | null>;
  width_in?: Array<number | null>;
  hash_in?: Array<string | null>;
  hash_lte?: string;
  height?: number;
  hash_nin?: Array<string | null>;
  height_lte?: number;
  subtitle_nin?: Array<string | null>;
  rarity_gte?: number;
  subtitle_exists?: boolean;
  subtitle_lte?: string;
  mimetype_gt?: string;
  height_ne?: number;
  rarity_lt?: number;
  height_gte?: number;
  width_gte?: number;
  mimetype_exists?: boolean;
  subtitle_lt?: string;
  subtitle_gt?: string;
  mimetype_nin?: Array<string | null>;
  mimetype?: string;
  weight_exists?: boolean;
  weight_ne?: number;
  height_in?: Array<number | null>;
  mimetype_in?: Array<string | null>;
  rarity_exists?: boolean;
  hash_gt?: string;
  rarity_nin?: Array<number | null>;
  subtitle_ne?: string;
  hash_lt?: string;
  width?: number;
  width_ne?: number;
  subtitle_gte?: string;
  weight_lte?: number;
  height_exists?: boolean;
  height_nin?: Array<number | null>;
  hash_exists?: boolean;
  weight_gte?: number;
  subtitle?: string;
  mimetype_lte?: string;
  weight_gt?: number;
  weight?: number;
  rarity_lte?: number;
  hash_gte?: string;
  weight_nin?: Array<number | null>;
  hash_ne?: string;
  rarity?: number;
  rarity_in?: Array<number | null>;
}

export interface GQLUser {
  _id?: GQLObjectId;
  about?: string;
  accountNumber?: number;
  avatarHash?: string;
  blockchain?: string;
  createdAt?: number;
  defaultWallet?: string;
  integrations?: Array<GQLUserIntegration | null>;
  language?: string;
  managingAccount?: number;
  mergedAccounts?: Array<GQLUserMergedAccount | null>;
  nickname?: string;
  photoHash?: string;
  qualification?: number;
  registeredWallet?: string;
  settings?: GQLUserSetting;
  updatedAt?: number;
  username?: string;
  walletAddress?: string;
  wallpaperHash?: string;
}

export interface GQLUserInsertInput {
  walletAddress?: string;
  createdAt?: number;
  photoHash?: string;
  nickname?: string;
  language?: string;
  integrations?: Array<GQLUserIntegrationInsertInput | null>;
  managingAccount?: number;
  avatarHash?: string;
  blockchain?: string;
  updatedAt?: number;
  _id?: GQLObjectId;
  accountNumber?: number;
  settings?: GQLUserSettingInsertInput;
  defaultWallet?: string;
  registeredWallet?: string;
  wallpaperHash?: string;
  about?: string;
  qualification?: number;
  username?: string;
  mergedAccounts?: Array<GQLUserMergedAccountInsertInput | null>;
}

export enum GQLPrimary_jsonSortByInput {
  JSONSTRING_DESC = 'JSONSTRING_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  HASH_ASC = 'HASH_ASC',
  HASH_DESC = 'HASH_DESC',
  JSONSTRING_ASC = 'JSONSTRING_ASC'
}

export interface GQLOpendatumPermission {
  functions?: Array<string | null>;
  root?: string;
}

export interface GQLAuctionRawQueryInput {
  tokenAddress_lte?: string;
  tokenAddress_gt?: string;
  startBid?: string;
  endTime_nin?: Array<number | null>;
  bids_in?: Array<GQLAuctionRawBidQueryInput | null>;
  showcaseFee_gt?: string;
  bidStep_lt?: string;
  tokenAddress_lt?: string;
  tokenAddress_nin?: Array<string | null>;
  superType?: string;
  startTime?: number;
  endTime_lt?: number;
  tokenID_lte?: string;
  bids_exists?: boolean;
  startTime_gte?: number;
  AND?: Array<GQLAuctionRawQueryInput>;
  bidStep?: string;
  superType_exists?: boolean;
  startTime_in?: Array<number | null>;
  showcaseFee_in?: Array<string | null>;
  tokenAddress_ne?: string;
  tokenID_gt?: string;
  auctionCreator_ne?: string;
  showcaseFee?: string;
  bidStep_lte?: string;
  startTime_gt?: number;
  bidStep_nin?: Array<string | null>;
  startBid_exists?: boolean;
  tokenID_gte?: string;
  endTime_exists?: boolean;
  auctionCreator_lt?: string;
  tokenID_in?: Array<string | null>;
  superType_gte?: string;
  startBid_lte?: string;
  startBid_nin?: Array<string | null>;
  startTime_nin?: Array<number | null>;
  tokenID_exists?: boolean;
  showcaseFee_lt?: string;
  tokenAddress_gte?: string;
  endTime_gt?: number;
  bids?: Array<GQLAuctionRawBidQueryInput | null>;
  tokenAddress_exists?: boolean;
  auctionCreator_gte?: string;
  tokenID_ne?: string;
  auctionCreator?: string;
  endTime_gte?: number;
  startTime_ne?: number;
  endTime_in?: Array<number | null>;
  auctionCreator_nin?: Array<string | null>;
  tokenAddress_in?: Array<string | null>;
  auctionCreator_gt?: string;
  bidStep_ne?: string;
  bids_nin?: Array<GQLAuctionRawBidQueryInput | null>;
  showcaseFee_ne?: string;
  auctionCreator_in?: Array<string | null>;
  bidStep_gte?: string;
  startBid_lt?: string;
  bidStep_exists?: boolean;
  showcaseFee_gte?: string;
  startBid_in?: Array<string | null>;
  auctionCreator_lte?: string;
  auctionCreator_exists?: boolean;
  endTime_ne?: number;
  tokenID_nin?: Array<string | null>;
  startTime_exists?: boolean;
  superType_in?: Array<string | null>;
  superType_nin?: Array<string | null>;
  startBid_gte?: string;
  superType_lte?: string;
  showcaseFee_lte?: string;
  superType_ne?: string;
  startTime_lte?: number;
  showcaseFee_exists?: boolean;
  tokenAddress?: string;
  superType_lt?: string;
  OR?: Array<GQLAuctionRawQueryInput>;
  startBid_ne?: string;
  tokenID_lt?: string;
  bidStep_gt?: string;
  endTime_lte?: number;
  startBid_gt?: string;
  superType_gt?: string;
  startTime_lt?: number;
  tokenID?: string;
  showcaseFee_nin?: Array<string | null>;
  endTime?: number;
  bidStep_in?: Array<string | null>;
}

export interface GQLBidInsertInput {
  bidID?: string;
  createdAt?: number;
  deployed?: GQLBidDeployedInsertInput;
  raw?: GQLBidRawInsertInput;
  updatedAt?: number;
  _id?: GQLObjectId;
}

export interface GQLBidRawInsertInput {
  tokenAddress?: string;
  tokenID?: string;
  bidCreator?: string;
  bidValue?: string;
  endTime?: number;
  superType?: string;
}

export interface GQLCollectionRawInsertInput {
  txHash?: string;
  hash?: string;
  privacy?: string;
  type?: string;
  about?: string;
  creator?: string;
  blockchain?: string;
  media?: Array<GQLCollectionRawMediumInsertInput | null>;
  superType?: string;
  title?: string;
}

export interface GQLGetSession {
  swiftMessageTime?: number;
  confirmationHash?: string;
  cookiesHash?: string;
}

export interface GQLBid {
  _id?: GQLObjectId;
  bidID?: string;
  createdAt?: number;
  deployed?: GQLBidDeployed;
  raw?: GQLBidRaw;
  updatedAt?: number;
}

export interface GQLSeriesRawQueryInput {
  media_exists?: boolean;
  qualification?: number;
  title?: string;
  qualification_lt?: number;
  type_lt?: string;
  creatorFees_in?: Array<string | null>;
  collectionID_lte?: string;
  creator_gte?: string;
  creatorFees_lt?: string;
  type_lte?: string;
  hash_gte?: string;
  qualification_exists?: boolean;
  hash_nin?: Array<string | null>;
  usersWhoShared_exists?: boolean;
  type_in?: Array<string | null>;
  blockchain_lte?: string;
  usersWhoShared?: Array<number | null>;
  creator_lte?: string;
  media_nin?: Array<GQLSeriesRawMediumQueryInput | null>;
  AND?: Array<GQLSeriesRawQueryInput>;
  numberOfEditions_lt?: number;
  type_nin?: Array<string | null>;
  usersWhoShared_in?: Array<number | null>;
  description_in?: Array<string | null>;
  superType_nin?: Array<string | null>;
  numberOfEditions_ne?: number;
  title_gte?: string;
  blockchain_exists?: boolean;
  collectionID_gte?: string;
  type?: string;
  blockchain_gte?: string;
  superType_lte?: string;
  creatorFees_nin?: Array<string | null>;
  description_exists?: boolean;
  title_exists?: boolean;
  collectionID_nin?: Array<string | null>;
  blockchain_in?: Array<string | null>;
  title_lt?: string;
  blockchain_ne?: string;
  title_gt?: string;
  creator_nin?: Array<string | null>;
  numberOfEditions?: number;
  superType_gt?: string;
  creator_lt?: string;
  superType_exists?: boolean;
  usersWhoShared_nin?: Array<number | null>;
  creatorFees?: string;
  numberOfEditions_nin?: Array<number | null>;
  blockchain_gt?: string;
  creatorFees_gte?: string;
  hash_exists?: boolean;
  numberOfEditions_in?: Array<number | null>;
  hash_in?: Array<string | null>;
  creator_in?: Array<string | null>;
  superType_in?: Array<string | null>;
  type_gt?: string;
  description?: string;
  OR?: Array<GQLSeriesRawQueryInput>;
  blockchain_nin?: Array<string | null>;
  superType_gte?: string;
  creator?: string;
  creator_gt?: string;
  media_in?: Array<GQLSeriesRawMediumQueryInput | null>;
  numberOfEditions_gt?: number;
  creatorFees_ne?: string;
  creator_ne?: string;
  hash?: string;
  superType?: string;
  title_nin?: Array<string | null>;
  collectionID_lt?: string;
  collectionID_ne?: string;
  description_lt?: string;
  description_nin?: Array<string | null>;
  numberOfEditions_lte?: number;
  title_lte?: string;
  superType_ne?: string;
  qualification_gt?: number;
  qualification_gte?: number;
  title_ne?: string;
  superType_lt?: string;
  hash_lt?: string;
  hash_gt?: string;
  collectionID_gt?: string;
  type_ne?: string;
  media?: Array<GQLSeriesRawMediumQueryInput | null>;
  qualification_nin?: Array<number | null>;
  numberOfEditions_gte?: number;
  blockchain_lt?: string;
  hash_ne?: string;
  numberOfEditions_exists?: boolean;
  blockchain?: string;
  description_gt?: string;
  hash_lte?: string;
  collectionID?: string;
  creatorFees_exists?: boolean;
  collectionID_exists?: boolean;
  collectionID_in?: Array<string | null>;
  description_ne?: string;
  qualification_lte?: number;
  qualification_in?: Array<number | null>;
  qualification_ne?: number;
  type_gte?: string;
  type_exists?: boolean;
  description_gte?: string;
  title_in?: Array<string | null>;
  creatorFees_gt?: string;
  creatorFees_lte?: string;
  creator_exists?: boolean;
  description_lte?: string;
}

export interface GQLAuctionRawBidInsertInput {
  bidCreator?: string;
  bidValue?: string;
}

export interface GQLUi_managementInsertInput {
  visibilityStatus?: string;
  moduleScope?: string;
  recordID?: string;
  assetID?: GQLUi_managementAssetIDRelationInput;
  updatedAt?: number;
  itemID?: string;
  tag?: Array<string | null>;
  assetTitle?: string;
  createdAt?: number;
  image?: string;
  moduleID?: GQLUi_managementModuleIDRelationInput;
  moduleItemType?: string;
  moduleName?: string;
  itemLink?: string;
  airtableId?: string;
  _id?: GQLObjectId;
}

export interface GQLSeriesRawMediumUpdateInput {
  subtitle_unset?: boolean;
  role?: string;
  ipfsHash_unset?: boolean;
  width_unset?: boolean;
  mimetype?: string;
  width?: number;
  height_unset?: boolean;
  height?: number;
  weight?: number;
  height_inc?: number;
  weight_inc?: number;
  hash_unset?: boolean;
  ipfsHash?: string;
  mimetype_unset?: boolean;
  weight_unset?: boolean;
  width_inc?: number;
  role_unset?: boolean;
  subtitle?: string;
  hash?: string;
}

export interface GQLActionColMessage {
  actionCode?: string;
  hash?: string;
  senderAddress?: string;
  senderID?: string;
  superType?: string;
  time?: number;
}

export interface GQLContract_typeParameter {
  hashLevel?: string;
  likesLevel?: string;
  sharesLevel?: string;
}

export enum GQLSwift_messageSortByInput {
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  HASH_ASC = 'HASH_ASC',
  HASH_DESC = 'HASH_DESC',
  STATUS_ASC = 'STATUS_ASC',
  _ID_ASC = '_ID_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  _ID_DESC = '_ID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  STATUS_DESC = 'STATUS_DESC'
}

export interface GQLCollectionRaw {
  about?: string;
  blockchain?: string;
  creator?: string;
  hash?: string;
  media?: Array<GQLCollectionRawMedium | null>;
  privacy?: string;
  superType?: string;
  title?: string;
  txHash?: string;
  type?: string;
}

export interface GQLActionColTokenAttribute {
  seriesCreator?: string;
  seriesID?: string;
  tokenID?: string;
}

export interface GQLContractInsertInput {
  abiPath?: string;
  blockchain?: string;
  environment?: string;
  abiFile?: string;
  network?: string;
  status?: string;
  superType?: string;
  _id?: GQLObjectId;
  longType?: string;
  privacy?: string;
  address?: string;
}

export interface GQLHourly {
  BNBtoUSD?: number;
  EVERtoUSD?: number;
  USD?: number;
  _id?: GQLObjectId;
  blockchain?: string;
  time?: number;
}

export interface GQLActionActionAttributeInsertInput {
  showcaseFee?: string;
  submittedBidValue?: string;
  managerExpirationTime?: number;
  auctionStartTime?: number;
  managerSuperType?: string;
  submittedBidOwner?: string;
  askValue?: string;
  usdValue?: number;
  askEndTime?: number;
  auctionEndTime?: number;
  bidCreator?: string;
  releasedBidValue?: string;
  releasedBidOwner?: string;
  sealCreator?: string;
  bidEndTime?: number;
  actionStatus?: string;
  bidStep?: string;
  auctionCreator?: string;
  finalBidValue?: string;
  actionCapture?: string;
  askCreator?: string;
  minimalBid?: string;
  bidValue?: string;
  endorsementCreator?: string;
}

export interface GQLDailyInsertInput {
  blockchain?: string;
  tokensSold?: number;
  saleMin?: number;
  totalSalesSum?: number;
  createdAt?: number;
  saleAverage?: number;
  endorsementAverage?: number;
  saleMax?: number;
  totalSum?: number;
  tokensEndorsed?: number;
  totalEndorsementsSum?: number;
  tokensCreated?: number;
  _id?: GQLObjectId;
  date?: number;
  updatedAt?: number;
  endorsementMax?: number;
  endorsementMin?: number;
}

export interface GQLEndorsementRawInsertInput {
  masterID?: string;
  sealID?: string;
  cornerSE?: boolean;
  masterMediaType?: string;
  superType?: string;
  blockchain?: string;
  expiresAt?: number;
  cornerNE?: boolean;
  tokenID?: string;
  cornerNW?: boolean;
  type?: string;
  value?: string;
  creator?: string;
  cornerSW?: boolean;
}

export interface GQLCol1QueryInput {
  mintCost_in?: Array<number | null>;
  hash?: string;
  creator_in?: Array<string | null>;
  _id_lt?: GQLObjectId;
  creator_nin?: Array<string | null>;
  mintCost_exists?: boolean;
  updatedAt_ne?: number;
  address_lt?: string;
  creator?: string;
  createdAt_gte?: number;
  hash_ne?: string;
  description_exists?: boolean;
  name_exists?: boolean;
  description_in?: Array<string | null>;
  updatedAt_gte?: number;
  name_in?: Array<string | null>;
  name_nin?: Array<string | null>;
  _id_exists?: boolean;
  updatedAt_in?: Array<number | null>;
  name_gt?: string;
  _id_gt?: GQLObjectId;
  hash_lt?: string;
  _id_lte?: GQLObjectId;
  supply_lte?: number;
  supply_lt?: number;
  address_nin?: Array<string | null>;
  createdAt_gt?: number;
  seriesId_lt?: string;
  hash_exists?: boolean;
  creator_exists?: boolean;
  address_gte?: string;
  maximum?: number;
  name_lt?: string;
  mintCost_nin?: Array<number | null>;
  maximum_exists?: boolean;
  createdAt_ne?: number;
  hash_gt?: string;
  address_in?: Array<string | null>;
  description_gte?: string;
  layers?: Array<GQLCol1LayerQueryInput | null>;
  seriesId_nin?: Array<string | null>;
  description_gt?: string;
  _id?: GQLObjectId;
  mintCost_ne?: number;
  mintCost_gte?: number;
  description_lte?: string;
  createdAt_lt?: number;
  maximum_gt?: number;
  mintCost_lt?: number;
  createdAt_lte?: number;
  hash_gte?: string;
  _id_nin?: Array<GQLObjectId | null>;
  _id_ne?: GQLObjectId;
  description_ne?: string;
  layers_in?: Array<GQLCol1LayerQueryInput | null>;
  layers_nin?: Array<GQLCol1LayerQueryInput | null>;
  updatedAt_exists?: boolean;
  supply_exists?: boolean;
  maximum_lt?: number;
  supply_in?: Array<number | null>;
  hash_in?: Array<string | null>;
  name?: string;
  seriesId_exists?: boolean;
  createdAt_nin?: Array<number | null>;
  OR?: Array<GQLCol1QueryInput>;
  supply_gte?: number;
  updatedAt_lt?: number;
  supply_gt?: number;
  maximum_ne?: number;
  creator_lte?: string;
  layers_exists?: boolean;
  name_ne?: string;
  seriesId?: string;
  maximum_lte?: number;
  createdAt?: number;
  _id_gte?: GQLObjectId;
  updatedAt?: number;
  mintCost_gt?: number;
  mintCost_lte?: number;
  supply_nin?: Array<number | null>;
  _id_in?: Array<GQLObjectId | null>;
  AND?: Array<GQLCol1QueryInput>;
  maximum_in?: Array<number | null>;
  supply?: number;
  updatedAt_lte?: number;
  updatedAt_nin?: Array<number | null>;
  updatedAt_gt?: number;
  description_lt?: string;
  seriesId_gt?: string;
  creator_ne?: string;
  creator_gte?: string;
  address_gt?: string;
  seriesId_in?: Array<string | null>;
  maximum_nin?: Array<number | null>;
  seriesId_ne?: string;
  description_nin?: Array<string | null>;
  address_ne?: string;
  address?: string;
  supply_ne?: number;
  createdAt_exists?: boolean;
  hash_nin?: Array<string | null>;
  seriesId_gte?: string;
  maximum_gte?: number;
  name_gte?: string;
  seriesId_lte?: string;
  address_lte?: string;
  address_exists?: boolean;
  creator_gt?: string;
  createdAt_in?: Array<number | null>;
  name_lte?: string;
  mintCost?: number;
  creator_lt?: string;
  description?: string;
  hash_lte?: string;
}

export interface GQLAction {
  _id?: GQLObjectId;
  actionAttributes?: GQLActionActionAttribute;
  blockchain?: string;
  createdAt?: number;
  message?: GQLActionMessage;
  tokenAttributes?: GQLActionTokenAttribute;
  updatedAt?: number;
}

export interface GQLSeriesPagination {
  skip?: number;
  limit?: number;
  search?: string;
  creator?: string;
  created_lt?: number;
  sort?: GQLSeriesPaginationSort;
}

export interface GQLActionColUpdateInput {
  _id_unset?: boolean;
  actionAttributes?: GQLActionColActionAttributeUpdateInput;
  actionAttributes_unset?: boolean;
  message?: GQLActionColMessageUpdateInput;
  message_unset?: boolean;
  tokenAttributes?: GQLActionColTokenAttributeUpdateInput;
  tokenAttributes_unset?: boolean;
  _id?: GQLObjectId;
}

export interface GQLTokenDeployedInsertInput {
  frontStatus?: string;
  foreverID?: string;
  creatorFees?: string;
  superType?: string;
  foreverStatus?: string;
  hash?: string;
  address?: string;
  collectionID?: string;
  creatorObject?: GQLTokenDeployedCreatorObjectRelationInput;
  ownerObject?: GQLTokenDeployedOwnerObjectRelationInput;
  seriesID?: GQLTokenDeployedSeriesIDRelationInput;
  seriesObject?: GQLTokenDeployedSeriesObjectRelationInput;
  index?: number;
  seal?: string;
  sealPosition?: string;
  lastSalePrice?: number;
  blockchain?: string;
  managerExpirationTime?: number;
  stamps?: Array<GQLTokenDeployedStampInsertInput | null>;
  lastSaleTime?: number;
  manager?: string;
  owner?: string;
  isEndorsed?: boolean;
  creator?: string;
  type?: string;
}

export interface GQLBidRawQueryInput {
  bidValue_ne?: string;
  bidValue_exists?: boolean;
  bidCreator_exists?: boolean;
  tokenAddress_lt?: string;
  superType_exists?: boolean;
  tokenID_lte?: string;
  tokenAddress_gte?: string;
  tokenAddress_lte?: string;
  endTime_lt?: number;
  bidCreator_in?: Array<string | null>;
  endTime?: number;
  bidCreator_gte?: string;
  bidValue_lt?: string;
  superType_lte?: string;
  bidValue_nin?: Array<string | null>;
  tokenAddress_ne?: string;
  endTime_exists?: boolean;
  endTime_gte?: number;
  bidCreator_ne?: string;
  bidValue?: string;
  bidCreator_lte?: string;
  endTime_gt?: number;
  superType_lt?: string;
  tokenID_gte?: string;
  tokenID_in?: Array<string | null>;
  tokenAddress_exists?: boolean;
  bidValue_lte?: string;
  OR?: Array<GQLBidRawQueryInput>;
  tokenID?: string;
  tokenID_nin?: Array<string | null>;
  tokenAddress_gt?: string;
  tokenAddress_in?: Array<string | null>;
  tokenAddress?: string;
  superType?: string;
  tokenID_exists?: boolean;
  AND?: Array<GQLBidRawQueryInput>;
  bidValue_gt?: string;
  endTime_ne?: number;
  tokenAddress_nin?: Array<string | null>;
  endTime_nin?: Array<number | null>;
  tokenID_ne?: string;
  bidCreator?: string;
  tokenID_lt?: string;
  bidCreator_nin?: Array<string | null>;
  bidValue_gte?: string;
  superType_ne?: string;
  bidCreator_gt?: string;
  bidCreator_lt?: string;
  superType_in?: Array<string | null>;
  bidValue_in?: Array<string | null>;
  superType_nin?: Array<string | null>;
  endTime_in?: Array<number | null>;
  superType_gte?: string;
  endTime_lte?: number;
  superType_gt?: string;
  tokenID_gt?: string;
}

export interface GQLContract_typeHashFieldLayerImage {
  hash?: string;
  imageIndex?: string;
  mimetype?: string;
  rarityWeight?: string;
  weight?: string;
}

export interface GQLAskInsertInput {
  raw?: GQLAskRawInsertInput;
  _id?: GQLObjectId;
  askID?: string;
  updatedAt?: number;
  createdAt?: number;
  deployed?: GQLAskDeployedInsertInput;
}

export interface GQLContract_typeHashFieldUpdateInput {
  creatorFee?: string;
  description_unset?: boolean;
  layers_unset?: boolean;
  creator?: string;
  collectionID?: string;
  media_unset?: boolean;
  width?: string;
  collectionID_unset?: boolean;
  creator_unset?: boolean;
  numberOfEditions_unset?: boolean;
  height?: string;
  title_unset?: boolean;
  minimalMintFee?: string;
  type_unset?: boolean;
  height_unset?: boolean;
  title?: string;
  type?: string;
  creatorFee_unset?: boolean;
  media?: GQLContract_typeHashFieldMediumUpdateInput;
  description?: string;
  numberOfEditions?: string;
  layers?: GQLContract_typeHashFieldLayerUpdateInput;
  minimalMintFee_unset?: boolean;
  width_unset?: boolean;
}

export interface GQLOpendatumInsertInput {
  key?: string;
  permissions?: Array<GQLOpendatumPermissionInsertInput | null>;
  _id?: GQLObjectId;
  createdAt?: number;
  updatedAt?: number;
}

export interface GQLLocale {
  _id?: GQLObjectId;
  createdAt?: number;
  lang?: string;
  module?: GQLModule;
  moduleName?: string;
  string?: string;
  stringName?: string;
  updatedAt?: number;
}

export enum GQLTokenSortByInput {
  TOKENID_ASC = 'TOKENID_ASC',
  TOKENID_DESC = 'TOKENID_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC'
}

export interface GQLAuctionUpdateInput {
  deployed?: GQLAuctionDeployedUpdateInput;
  raw_unset?: boolean;
  _id?: GQLObjectId;
  createdAt_inc?: number;
  createdAt?: number;
  updatedAt_inc?: number;
  raw?: GQLAuctionRawUpdateInput;
  updatedAt?: number;
  auctionID_unset?: boolean;
  updatedAt_unset?: boolean;
  _id_unset?: boolean;
  auctionID?: string;
  createdAt_unset?: boolean;
  deployed_unset?: boolean;
}

export interface GQLContract_typeUpdateInput {
  abi?: GQLContract_typeAbiUpdateInput;
  hashFields_unset?: boolean;
  status?: string;
  applicableBlockchains_unset?: boolean;
  objectType?: string;
  objectType_unset?: boolean;
  _id?: GQLObjectId;
  numberOfLevels_unset?: boolean;
  numberOfLevels?: string;
  abi_unset?: boolean;
  frontendName?: string;
  applicableBlockchains?: Array<string | null>;
  parameters?: GQLContract_typeParameterUpdateInput;
  collectionDeployAvailable_unset?: boolean;
  _id_unset?: boolean;
  hashFields?: GQLContract_typeHashFieldUpdateInput;
  frontendName_unset?: boolean;
  parameters_unset?: boolean;
  longType?: string;
  longType_unset?: boolean;
  collectionDeployAvailable?: boolean;
  status_unset?: boolean;
}

export interface GQLTestTemporaryEndorsementUpdateInput {
  sealID_unset?: boolean;
  expiresAt?: number;
  expiresAt_inc?: number;
  expiresAt_unset?: boolean;
  sealID?: string;
}

export interface GQLModuleQueryInput {
  updatedAt_gte?: number;
  page_exists?: boolean;
  updatedAt_gt?: number;
  module_nin?: Array<string | null>;
  type_lte?: string;
  type_nin?: Array<string | null>;
  updatedAt_exists?: boolean;
  page_gte?: string;
  page?: string;
  _id_ne?: GQLObjectId;
  updatedAt?: number;
  createdAt_gt?: number;
  _id_lt?: GQLObjectId;
  module_ne?: string;
  module_exists?: boolean;
  createdAt_lte?: number;
  _id_exists?: boolean;
  OR?: Array<GQLModuleQueryInput>;
  type_exists?: boolean;
  nameType_gt?: string;
  nameType_nin?: Array<string | null>;
  _id_gt?: GQLObjectId;
  createdAt_in?: Array<number | null>;
  _id_gte?: GQLObjectId;
  updatedAt_lte?: number;
  _id_in?: Array<GQLObjectId | null>;
  _id_nin?: Array<GQLObjectId | null>;
  module_lte?: string;
  nameType_ne?: string;
  module_lt?: string;
  createdAt_lt?: number;
  type_in?: Array<string | null>;
  updatedAt_in?: Array<number | null>;
  updatedAt_lt?: number;
  page_lte?: string;
  page_gt?: string;
  page_in?: Array<string | null>;
  type_lt?: string;
  nameType_exists?: boolean;
  type_ne?: string;
  type_gt?: string;
  _id?: GQLObjectId;
  createdAt_gte?: number;
  _id_lte?: GQLObjectId;
  module_gte?: string;
  page_lt?: string;
  type?: string;
  createdAt_nin?: Array<number | null>;
  nameType_gte?: string;
  module_gt?: string;
  page_nin?: Array<string | null>;
  createdAt?: number;
  nameType_lt?: string;
  module_in?: Array<string | null>;
  module?: string;
  nameType_lte?: string;
  createdAt_exists?: boolean;
  type_gte?: string;
  createdAt_ne?: number;
  nameType_in?: Array<string | null>;
  updatedAt_nin?: Array<number | null>;
  AND?: Array<GQLModuleQueryInput>;
  nameType?: string;
  page_ne?: string;
  updatedAt_ne?: number;
}

export interface GQLSeriesRawMediumQueryInput {
  mimetype_lt?: string;
  mimetype_lte?: string;
  subtitle_gte?: string;
  hash_in?: Array<string | null>;
  height_lte?: number;
  width?: number;
  subtitle_nin?: Array<string | null>;
  weight_exists?: boolean;
  ipfsHash_exists?: boolean;
  weight_gte?: number;
  height_exists?: boolean;
  subtitle_ne?: string;
  width_gte?: number;
  height?: number;
  subtitle_lt?: string;
  ipfsHash_gte?: string;
  ipfsHash_lte?: string;
  mimetype_gt?: string;
  ipfsHash_nin?: Array<string | null>;
  width_lte?: number;
  width_in?: Array<number | null>;
  hash_exists?: boolean;
  weight_in?: Array<number | null>;
  ipfsHash_gt?: string;
  subtitle_exists?: boolean;
  height_gte?: number;
  width_gt?: number;
  role_exists?: boolean;
  height_ne?: number;
  weight_nin?: Array<number | null>;
  height_gt?: number;
  hash_gt?: string;
  weight_lte?: number;
  hash_gte?: string;
  height_lt?: number;
  role_gte?: string;
  role_lt?: string;
  weight_gt?: number;
  width_lt?: number;
  weight?: number;
  hash?: string;
  subtitle?: string;
  mimetype_in?: Array<string | null>;
  mimetype_gte?: string;
  weight_ne?: number;
  ipfsHash_lt?: string;
  ipfsHash?: string;
  mimetype_exists?: boolean;
  subtitle_gt?: string;
  role?: string;
  weight_lt?: number;
  mimetype_ne?: string;
  hash_lte?: string;
  mimetype_nin?: Array<string | null>;
  height_in?: Array<number | null>;
  width_ne?: number;
  ipfsHash_ne?: string;
  AND?: Array<GQLSeriesRawMediumQueryInput>;
  subtitle_lte?: string;
  ipfsHash_in?: Array<string | null>;
  hash_lt?: string;
  width_nin?: Array<number | null>;
  hash_nin?: Array<string | null>;
  width_exists?: boolean;
  role_in?: Array<string | null>;
  role_gt?: string;
  subtitle_in?: Array<string | null>;
  role_nin?: Array<string | null>;
  hash_ne?: string;
  mimetype?: string;
  height_nin?: Array<number | null>;
  role_ne?: string;
  role_lte?: string;
  OR?: Array<GQLSeriesRawMediumQueryInput>;
}

export interface GQLAskRawValueUpdateInput {
  askTime?: number;
  askTime_inc?: number;
  askTime_unset?: boolean;
  askValue?: string;
  askValue_unset?: boolean;
}

export interface GQLTokenUpdateInput {
  raw?: GQLTokenRawUpdateInput;
  tokenID_unset?: boolean;
  raw_unset?: boolean;
  tokenID?: string;
  updatedAt_unset?: boolean;
  _id?: GQLObjectId;
  createdAt_inc?: number;
  updatedAt?: number;
  _id_unset?: boolean;
  createdAt_unset?: boolean;
  updatedAt_inc?: number;
  deployed?: GQLTokenDeployedUpdateInput;
  createdAt?: number;
  deployed_unset?: boolean;
}

export interface GQLNetworkUpdateInput {
  _id_unset?: boolean;
  integration?: string;
  integration_unset?: boolean;
  name?: string;
  name_unset?: boolean;
  type?: string;
  type_unset?: boolean;
  _id?: GQLObjectId;
}

export interface GQLAskDeployedValueInsertInput {
  askTime?: number;
  askValue?: string;
}

export interface GQLTokenRawMediumInsertInput {
  height?: number;
  mimetype?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
  role?: string;
  hash?: string;
  ipfsHash?: string;
}

export interface GQLEvent {
  _id?: GQLObjectId;
  blockNumber?: GQLLong;
  blockchain?: string;
  createdAt?: number;
  message?: GQLEventMessage;
  parameters?: GQLEventParameter;
  status?: string;
  topics?: Array<string | null>;
  updatedAt?: number;
}

export interface GQLOpendatumQueryInput {
  permissions_in?: Array<GQLOpendatumPermissionQueryInput | null>;
  createdAt_nin?: Array<number | null>;
  createdAt_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  key_exists?: boolean;
  updatedAt_ne?: number;
  OR?: Array<GQLOpendatumQueryInput>;
  updatedAt_lte?: number;
  updatedAt_gte?: number;
  permissions_nin?: Array<GQLOpendatumPermissionQueryInput | null>;
  createdAt_gt?: number;
  key_ne?: string;
  _id_in?: Array<GQLObjectId | null>;
  key_nin?: Array<string | null>;
  _id_lte?: GQLObjectId;
  _id_ne?: GQLObjectId;
  _id_exists?: boolean;
  createdAt_lte?: number;
  createdAt_ne?: number;
  permissions_exists?: boolean;
  key_gt?: string;
  _id?: GQLObjectId;
  createdAt_lt?: number;
  updatedAt?: number;
  updatedAt_lt?: number;
  updatedAt_nin?: Array<number | null>;
  _id_lt?: GQLObjectId;
  updatedAt_gt?: number;
  key_lt?: string;
  _id_gt?: GQLObjectId;
  key_gte?: string;
  createdAt_gte?: number;
  _id_gte?: GQLObjectId;
  updatedAt_in?: Array<number | null>;
  createdAt?: number;
  key?: string;
  key_lte?: string;
  createdAt_in?: Array<number | null>;
  updatedAt_exists?: boolean;
  permissions?: Array<GQLOpendatumPermissionQueryInput | null>;
  AND?: Array<GQLOpendatumQueryInput>;
  key_in?: Array<string | null>;
}

export interface GQLTriggerUpdateInput {
  _id?: GQLObjectId;
  _id_unset?: boolean;
  name?: string;
  name_unset?: boolean;
  lastDate?: number;
  lastDate_inc?: number;
  lastDate_unset?: boolean;
}

export interface GQLCol1InsertInput {
  mintCost?: number;
  description?: string;
  creator?: string;
  seriesId?: string;
  layers?: Array<GQLCol1LayerInsertInput | null>;
  maximum?: number;
  createdAt?: number;
  address?: string;
  updatedAt?: number;
  _id?: GQLObjectId;
  name?: string;
  hash?: string;
  supply?: number;
}

export interface GQLUi_chartQueryInput {
  updatedAt?: number;
  updatedAt_nin?: Array<number | null>;
  aggregationField_gte?: string;
  moduleID_exists?: boolean;
  aggregationField_nin?: Array<string | null>;
  linkSuffix_nin?: Array<string | null>;
  name_gte?: string;
  sort_nin?: Array<string | null>;
  outputObject_lte?: string;
  linkSuffix_lte?: string;
  outputObject_nin?: Array<string | null>;
  name_lte?: string;
  createdAt_ne?: number;
  moduleID_lt?: string;
  outputObject_gte?: string;
  sort_lte?: string;
  name_lt?: string;
  dataObject_lt?: string;
  limit_exists?: boolean;
  _id?: GQLObjectId;
  airtableId_nin?: Array<string | null>;
  airtableId_ne?: string;
  function?: string;
  aggregationField_gt?: string;
  outputObject_lt?: string;
  limit_ne?: number;
  dataObject_lte?: string;
  function_lt?: string;
  updatedAt_lte?: number;
  field_ne?: string;
  createdAt_gte?: number;
  _id_lte?: GQLObjectId;
  name?: string;
  outputObject?: string;
  linkSuffix?: string;
  dataObject?: string;
  outputObject_gt?: string;
  aggregationField_lt?: string;
  moduleID_lte?: string;
  createdAt?: number;
  aggregationField_in?: Array<string | null>;
  sort_gt?: string;
  _id_lt?: GQLObjectId;
  dataObject_gt?: string;
  updatedAt_in?: Array<number | null>;
  moduleID?: string;
  limit_in?: Array<number | null>;
  airtableId_lte?: string;
  field_lte?: string;
  createdAt_lt?: number;
  createdAt_lte?: number;
  function_ne?: string;
  field_nin?: Array<string | null>;
  limit_gt?: number;
  limit_lte?: number;
  moduleID_gt?: string;
  moduleID_in?: Array<string | null>;
  sort?: string;
  name_nin?: Array<string | null>;
  function_in?: Array<string | null>;
  name_gt?: string;
  aggregationField_exists?: boolean;
  airtableId_gte?: string;
  airtableId_lt?: string;
  dataObject_in?: Array<string | null>;
  limit?: number;
  function_exists?: boolean;
  sort_in?: Array<string | null>;
  _id_nin?: Array<GQLObjectId | null>;
  function_gte?: string;
  updatedAt_gte?: number;
  airtableId_gt?: string;
  function_gt?: string;
  updatedAt_exists?: boolean;
  moduleID_gte?: string;
  limit_lt?: number;
  airtableId?: string;
  airtableId_exists?: boolean;
  dataObject_exists?: boolean;
  createdAt_in?: Array<number | null>;
  sort_ne?: string;
  linkSuffix_lt?: string;
  createdAt_gt?: number;
  createdAt_exists?: boolean;
  dataObject_ne?: string;
  function_nin?: Array<string | null>;
  linkSuffix_gte?: string;
  field?: string;
  field_gt?: string;
  updatedAt_lt?: number;
  _id_in?: Array<GQLObjectId | null>;
  updatedAt_ne?: number;
  outputObject_in?: Array<string | null>;
  sort_exists?: boolean;
  sort_gte?: string;
  aggregationField_ne?: string;
  name_ne?: string;
  outputObject_ne?: string;
  name_exists?: boolean;
  linkSuffix_gt?: string;
  _id_exists?: boolean;
  moduleID_ne?: string;
  createdAt_nin?: Array<number | null>;
  aggregationField?: string;
  updatedAt_gt?: number;
  _id_gte?: GQLObjectId;
  OR?: Array<GQLUi_chartQueryInput>;
  limit_nin?: Array<number | null>;
  AND?: Array<GQLUi_chartQueryInput>;
  field_exists?: boolean;
  dataObject_nin?: Array<string | null>;
  outputObject_exists?: boolean;
  sort_lt?: string;
  dataObject_gte?: string;
  field_gte?: string;
  airtableId_in?: Array<string | null>;
  linkSuffix_in?: Array<string | null>;
  limit_gte?: number;
  name_in?: Array<string | null>;
  linkSuffix_exists?: boolean;
  aggregationField_lte?: string;
  _id_ne?: GQLObjectId;
  field_lt?: string;
  function_lte?: string;
  linkSuffix_ne?: string;
  _id_gt?: GQLObjectId;
  moduleID_nin?: Array<string | null>;
  field_in?: Array<string | null>;
}

export interface GQLCollectionMediumInsertInput {
  height?: number;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
  hash?: string;
}

export interface GQLActionColActionAttributeInsertInput {
  actionCapture?: string;
}

export interface GQLActionColActionAttributeQueryInput {
  actionCapture_exists?: boolean;
  actionCapture_gte?: string;
  actionCapture_lte?: string;
  actionCapture_nin?: Array<string | null>;
  actionCapture_gt?: string;
  actionCapture_lt?: string;
  AND?: Array<GQLActionColActionAttributeQueryInput>;
  OR?: Array<GQLActionColActionAttributeQueryInput>;
  actionCapture?: string;
  actionCapture_in?: Array<string | null>;
  actionCapture_ne?: string;
}

export interface GQLSwift_messageParameterInsertInput {
  finalBidValue?: string;
  newManager?: string;
  startBid?: string;
  stepBid?: string;
  buyer?: string;
  endTime?: string;
  expirationTime?: string;
  askCreator?: string;
  auctionCreator?: string;
  id?: string;
  bidValue?: string;
  bidCreator?: string;
  startTime?: string;
  showcaseFees?: string;
  newOwner?: string;
  askValue?: string;
  seriesId?: string;
  tokenAddress?: string;
}

export interface GQLAuctionDeployedQueryInput {
  startTime_ne?: number;
  showcaseFee_lte?: string;
  startBid_lt?: string;
  tokenAddress_in?: Array<string | null>;
  startBid_gte?: string;
  status_gte?: string;
  bids_in?: Array<GQLAuctionDeployedBidQueryInput | null>;
  tokenAddress?: string;
  finalBid_gt?: string;
  showcaseFee_lt?: string;
  finalBid_gte?: string;
  bidStep_gt?: string;
  endTime?: number;
  tokenID_gte?: string;
  startTime_gt?: number;
  AND?: Array<GQLAuctionDeployedQueryInput>;
  bidStep_lte?: string;
  startBid_gt?: string;
  bids_nin?: Array<GQLAuctionDeployedBidQueryInput | null>;
  endTime_gte?: number;
  finalBid?: string;
  showcaseFee_exists?: boolean;
  startTime_lt?: number;
  auctionAddress_gt?: string;
  startBid_ne?: string;
  bidStep?: string;
  tokenID_gt?: string;
  tokenID?: string;
  startTime_exists?: boolean;
  superType_gte?: string;
  tokenID_lte?: string;
  bidStep_lt?: string;
  startTime_gte?: number;
  bidStep_nin?: Array<string | null>;
  finalBid_in?: Array<string | null>;
  bids_exists?: boolean;
  tokenID_ne?: string;
  status?: string;
  status_gt?: string;
  tokenID_in?: Array<string | null>;
  finalBid_nin?: Array<string | null>;
  superType_in?: Array<string | null>;
  startTime?: number;
  tokenAddress_ne?: string;
  status_lt?: string;
  OR?: Array<GQLAuctionDeployedQueryInput>;
  bidStep_exists?: boolean;
  superType_lte?: string;
  showcaseFee_gt?: string;
  startBid_exists?: boolean;
  status_ne?: string;
  tokenAddress_exists?: boolean;
  showcaseFee_gte?: string;
  auctionAddress?: string;
  showcaseFee_nin?: Array<string | null>;
  status_nin?: Array<string | null>;
  superType_nin?: Array<string | null>;
  showcaseFee_in?: Array<string | null>;
  tokenAddress_nin?: Array<string | null>;
  startBid?: string;
  bids?: Array<GQLAuctionDeployedBidQueryInput | null>;
  endTime_exists?: boolean;
  endTime_lt?: number;
  endTime_ne?: number;
  endTime_lte?: number;
  tokenAddress_gt?: string;
  tokenAddress_lte?: string;
  tokenAddress_lt?: string;
  endTime_in?: Array<number | null>;
  auctionAddress_in?: Array<string | null>;
  endTime_gt?: number;
  superType?: string;
  bidStep_ne?: string;
  startBid_in?: Array<string | null>;
  superType_lt?: string;
  auctionAddress_exists?: boolean;
  auctionAddress_ne?: string;
  auctionAddress_lte?: string;
  startTime_nin?: Array<number | null>;
  status_in?: Array<string | null>;
  bidStep_gte?: string;
  bidStep_in?: Array<string | null>;
  showcaseFee?: string;
  finalBid_exists?: boolean;
  auctionAddress_lt?: string;
  finalBid_lte?: string;
  tokenID_exists?: boolean;
  superType_ne?: string;
  auctionAddress_gte?: string;
  startTime_in?: Array<number | null>;
  tokenID_nin?: Array<string | null>;
  tokenAddress_gte?: string;
  superType_gt?: string;
  startBid_nin?: Array<string | null>;
  finalBid_ne?: string;
  status_exists?: boolean;
  tokenID_lt?: string;
  auctionAddress_nin?: Array<string | null>;
  finalBid_lt?: string;
  startBid_lte?: string;
  superType_exists?: boolean;
  endTime_nin?: Array<number | null>;
  startTime_lte?: number;
  showcaseFee_ne?: string;
  status_lte?: string;
}

export interface GQLActionUpdateInput {
  actionAttributes?: GQLActionActionAttributeUpdateInput;
  actionAttributes_unset?: boolean;
  blockchain_unset?: boolean;
  createdAt?: number;
  message?: GQLActionMessageUpdateInput;
  blockchain?: string;
  createdAt_unset?: boolean;
  updatedAt?: number;
  updatedAt_inc?: number;
  tokenAttributes_unset?: boolean;
  tokenAttributes?: GQLActionTokenAttributeUpdateInput;
  createdAt_inc?: number;
  updatedAt_unset?: boolean;
  _id?: GQLObjectId;
  message_unset?: boolean;
  _id_unset?: boolean;
}

export interface GQLAskUpdateInput {
  createdAt_unset?: boolean;
  askID?: string;
  updatedAt_unset?: boolean;
  _id?: GQLObjectId;
  _id_unset?: boolean;
  deployed_unset?: boolean;
  updatedAt_inc?: number;
  createdAt?: number;
  updatedAt?: number;
  createdAt_inc?: number;
  raw?: GQLAskRawUpdateInput;
  deployed?: GQLAskDeployedUpdateInput;
  askID_unset?: boolean;
  raw_unset?: boolean;
}

export interface GQLCollectionDeployed {
  address?: string;
  blockNumber?: GQLLong;
  blockchain?: string;
  creator?: string;
  hash?: string;
  privacy?: string;
  superType?: string;
  supply?: number;
  type?: string;
}

export interface GQLHourlyInsertInput {
  time?: number;
  blockchain?: string;
  USD?: number;
  EVERtoUSD?: number;
  BNBtoUSD?: number;
  _id?: GQLObjectId;
}

export interface GQLBlockchainNetworkTestUpdateInput {
  endpoint_unset?: boolean;
  browser?: string;
  browser_unset?: boolean;
  endpoint?: string;
}

export enum GQLAddress_abiSortByInput {
  ADDRESS_DESC = 'ADDRESS_DESC',
  LEVEL_ASC = 'LEVEL_ASC',
  LEVEL_DESC = 'LEVEL_DESC',
  SUPERTYPE_ASC = 'SUPERTYPE_ASC',
  SUPERTYPE_DESC = 'SUPERTYPE_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  ADDRESS_ASC = 'ADDRESS_ASC'
}

export interface GQLSession {
  _id?: GQLObjectId;
  accountNumberObject?: GQLUser;
  address?: string;
  confirmationHash?: string;
  cookiesHash?: string;
  createdAt?: number;
  integrationCode?: string;
  isExpired?: boolean;
  swiftMessageTime?: number;
  updatedAt?: number;
}

export interface GQLAskRawQueryInput {
  tokenID_in?: Array<string | null>;
  currentAskValue_gt?: string;
  tokenAddress_lte?: string;
  tokenAddress_ne?: string;
  blockchain_gte?: string;
  showcaseFee_gt?: string;
  blockchain_nin?: Array<string | null>;
  showcaseFee_lte?: string;
  blockchain_lte?: string;
  superType_lte?: string;
  endTime_in?: Array<number | null>;
  tokenAddress_nin?: Array<string | null>;
  endTime_ne?: number;
  blockchain_gt?: string;
  OR?: Array<GQLAskRawQueryInput>;
  blockchain_exists?: boolean;
  showcaseFee_ne?: string;
  endTime_exists?: boolean;
  showcaseFee_nin?: Array<string | null>;
  currentAskValue?: string;
  endTime_gt?: number;
  values_nin?: Array<GQLAskRawValueQueryInput | null>;
  superType_nin?: Array<string | null>;
  AND?: Array<GQLAskRawQueryInput>;
  showcaseFee_lt?: string;
  askCreator_nin?: Array<string | null>;
  superType?: string;
  endTime_lt?: number;
  tokenID_ne?: string;
  showcaseFee_exists?: boolean;
  tokenAddress_gte?: string;
  tokenID_nin?: Array<string | null>;
  showcaseFee?: string;
  endTime_lte?: number;
  superType_gt?: string;
  currentAskValue_in?: Array<string | null>;
  showcaseFee_in?: Array<string | null>;
  tokenAddress?: string;
  tokenID_gte?: string;
  endTime_nin?: Array<number | null>;
  tokenID_lt?: string;
  tokenID?: string;
  endTime?: number;
  askCreator_gte?: string;
  blockchain_ne?: string;
  askCreator_in?: Array<string | null>;
  values_exists?: boolean;
  superType_gte?: string;
  currentAskValue_gte?: string;
  tokenAddress_gt?: string;
  tokenID_exists?: boolean;
  endTime_gte?: number;
  superType_exists?: boolean;
  currentAskValue_lt?: string;
  tokenAddress_lt?: string;
  values?: Array<GQLAskRawValueQueryInput | null>;
  askCreator_ne?: string;
  askCreator_exists?: boolean;
  values_in?: Array<GQLAskRawValueQueryInput | null>;
  showcaseFee_gte?: string;
  blockchain_in?: Array<string | null>;
  superType_lt?: string;
  blockchain_lt?: string;
  askCreator_gt?: string;
  askCreator?: string;
  currentAskValue_exists?: boolean;
  tokenAddress_exists?: boolean;
  tokenID_gt?: string;
  askCreator_lt?: string;
  tokenID_lte?: string;
  blockchain?: string;
  askCreator_lte?: string;
  superType_in?: Array<string | null>;
  currentAskValue_ne?: string;
  superType_ne?: string;
  tokenAddress_in?: Array<string | null>;
  currentAskValue_nin?: Array<string | null>;
  currentAskValue_lte?: string;
}

export interface GQLTestCrossEndorsementQueryInput {
  mediaType_gt?: string;
  mediaType?: string;
  OR?: Array<GQLTestCrossEndorsementQueryInput>;
  masterID_lt?: string;
  mediaType_in?: Array<string | null>;
  mediaType_gte?: string;
  masterID?: string;
  mediaType_ne?: string;
  AND?: Array<GQLTestCrossEndorsementQueryInput>;
  masterID_gt?: string;
  masterID_gte?: string;
  mediaType_exists?: boolean;
  masterID_exists?: boolean;
  masterID_lte?: string;
  masterID_in?: Array<string | null>;
  masterID_nin?: Array<string | null>;
  mediaType_lt?: string;
  mediaType_lte?: string;
  masterID_ne?: string;
  mediaType_nin?: Array<string | null>;
}

export interface GQLCol1LayerPointUpdateInput {
  hash?: string;
  hash_unset?: boolean;
  point?: number;
  point_inc?: number;
  point_unset?: boolean;
}

export interface GQLAskDeployedValueUpdateInput {
  askTime_unset?: boolean;
  askValue?: string;
  askValue_unset?: boolean;
  askTime?: number;
  askTime_inc?: number;
}

export interface GQLTestUpdateInput {
  _id?: GQLObjectId;
  _id_unset?: boolean;
  crossEndorsement?: GQLTestCrossEndorsementUpdateInput;
  crossEndorsement_unset?: boolean;
  temporaryEndorsements?: Array<GQLTestTemporaryEndorsementUpdateInput | null>;
  temporaryEndorsements_unset?: boolean;
}

export interface GQLTokenCount {
  isLiveBid?: boolean;
  creator?: string;
  collectionID?: string;
  isOnSale?: boolean;
  search?: string;
  created_lt?: number;
  qualification_gte?: number;
  type?: string;
  owner?: string;
}

export interface GQLTokenDeployedOwnerObjectRelationInput {
  create?: GQLUserInsertInput;
  link?: string;
}

export interface GQLTestTemporaryEndorsementInsertInput {
  sealID?: string;
  expiresAt?: number;
}

export interface GQLEndorsementRawUpdateInput {
  cornerSE_unset?: boolean;
  masterMediaType?: string;
  cornerNE?: boolean;
  masterID_unset?: boolean;
  tokenID_unset?: boolean;
  creator?: string;
  expiresAt?: number;
  cornerSW_unset?: boolean;
  masterMediaType_unset?: boolean;
  masterID?: string;
  value_unset?: boolean;
  tokenID?: string;
  value?: string;
  blockchain_unset?: boolean;
  cornerNW_unset?: boolean;
  type_unset?: boolean;
  cornerNW?: boolean;
  cornerSW?: boolean;
  blockchain?: string;
  sealID?: string;
  expiresAt_inc?: number;
  expiresAt_unset?: boolean;
  type?: string;
  sealID_unset?: boolean;
  cornerNE_unset?: boolean;
  superType_unset?: boolean;
  cornerSE?: boolean;
  superType?: string;
  creator_unset?: boolean;
}

export interface GQLUserMergedAccountQueryInput {
  status_gt?: string;
  accountNumber_lte?: number;
  accountNumber_exists?: boolean;
  accountNumber_nin?: Array<number | null>;
  status_in?: Array<string | null>;
  status_exists?: boolean;
  accountNumber_lt?: number;
  accountNumber_ne?: number;
  AND?: Array<GQLUserMergedAccountQueryInput>;
  accountNumber?: number;
  status_lte?: string;
  status_ne?: string;
  status_nin?: Array<string | null>;
  accountNumber_gt?: number;
  status_gte?: string;
  accountNumber_gte?: number;
  accountNumber_in?: Array<number | null>;
  status?: string;
  status_lt?: string;
  OR?: Array<GQLUserMergedAccountQueryInput>;
}

export enum GQLTestSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLAsk {
  _id?: GQLObjectId;
  askID?: string;
  createdAt?: number;
  deployed?: GQLAskDeployed;
  raw?: GQLAskRaw;
  updatedAt?: number;
}

export interface GQLCollectionRawMediumQueryInput {
  width_exists?: boolean;
  height_nin?: Array<number | null>;
  weight?: number;
  hash_ne?: string;
  role_lt?: string;
  width_gte?: number;
  OR?: Array<GQLCollectionRawMediumQueryInput>;
  weight_nin?: Array<number | null>;
  role_lte?: string;
  hash_lt?: string;
  width_ne?: number;
  height_ne?: number;
  role_in?: Array<string | null>;
  weight_lte?: number;
  mimetype_lte?: string;
  hash_gt?: string;
  subtitle_gte?: string;
  role_exists?: boolean;
  height_lt?: number;
  subtitle_exists?: boolean;
  mimetype_gt?: string;
  role_gte?: string;
  weight_in?: Array<number | null>;
  role_ne?: string;
  weight_lt?: number;
  mimetype_in?: Array<string | null>;
  width_lt?: number;
  width_nin?: Array<number | null>;
  hash?: string;
  hash_exists?: boolean;
  mimetype_gte?: string;
  width_lte?: number;
  hash_nin?: Array<string | null>;
  weight_gte?: number;
  hash_in?: Array<string | null>;
  height_exists?: boolean;
  mimetype_lt?: string;
  mimetype_nin?: Array<string | null>;
  mimetype_exists?: boolean;
  height_gt?: number;
  subtitle_ne?: string;
  subtitle_lte?: string;
  role_gt?: string;
  width?: number;
  role?: string;
  hash_lte?: string;
  subtitle_lt?: string;
  weight_gt?: number;
  role_nin?: Array<string | null>;
  weight_ne?: number;
  AND?: Array<GQLCollectionRawMediumQueryInput>;
  height_gte?: number;
  mimetype_ne?: string;
  subtitle_gt?: string;
  subtitle_nin?: Array<string | null>;
  mimetype?: string;
  width_gt?: number;
  width_in?: Array<number | null>;
  subtitle?: string;
  height_lte?: number;
  weight_exists?: boolean;
  height_in?: Array<number | null>;
  subtitle_in?: Array<string | null>;
  hash_gte?: string;
  height?: number;
}

export interface GQLOpendatumPermissionQueryInput {
  root_ne?: string;
  root_lt?: string;
  root_nin?: Array<string | null>;
  root_gte?: string;
  root_lte?: string;
  root_exists?: boolean;
  functions_in?: Array<string | null>;
  root_gt?: string;
  functions?: Array<string | null>;
  AND?: Array<GQLOpendatumPermissionQueryInput>;
  functions_nin?: Array<string | null>;
  OR?: Array<GQLOpendatumPermissionQueryInput>;
  root?: string;
  root_in?: Array<string | null>;
  functions_exists?: boolean;
}

export interface GQLIpf {
  _id?: GQLObjectId;
  createdAt?: number;
  ipfsHash?: string;
  mediaHash?: string;
}

export interface GQLSwift_codeUpdateInput {
  applicableBlockchains?: Array<string | null>;
  actorField_unset?: boolean;
  additionalInfo?: string;
  additionalInfo_unset?: boolean;
  description?: string;
  _id?: GQLObjectId;
  _id_unset?: boolean;
  description_unset?: boolean;
  code_unset?: boolean;
  applicableBlockchains_unset?: boolean;
  actionCapture_unset?: boolean;
  applicableContractType?: Array<string | null>;
  actorField?: string;
  applicableContractType_unset?: boolean;
  code?: string;
  actionCapture?: string;
}

export enum GQLSeriesPaginationSort {
  CREATED_ASC = 'CREATED_ASC',
  CREATED_DESC = 'CREATED_DESC'
}

export interface GQLTokenPagination {
  owner?: string;
  isLiveBid?: boolean;
  search?: string;
  skip?: number;
  limit?: number;
  collectionID?: string;
  qualification_gte?: number;
  creator?: string;
  isOnSale?: boolean;
  sort?: GQLTokenPaginationSort;
  created_lt?: number;
  type?: string;
}

export enum GQLUi_moduleSortByInput {
  BUTTONNAME_ASC = 'BUTTONNAME_ASC',
  BUTTONNAME_DESC = 'BUTTONNAME_DESC',
  BUTTONTYPE_DESC = 'BUTTONTYPE_DESC',
  STATUS_DESC = 'STATUS_DESC',
  AIRTABLEID_DESC = 'AIRTABLEID_DESC',
  MODULEID_ASC = 'MODULEID_ASC',
  PAGE_ASC = 'PAGE_ASC',
  STATUS_ASC = 'STATUS_ASC',
  SCOPE_ASC = 'SCOPE_ASC',
  SCOPE_DESC = 'SCOPE_DESC',
  BUTTONACTION_ASC = 'BUTTONACTION_ASC',
  COMMENT_ASC = 'COMMENT_ASC',
  COMMENT_DESC = 'COMMENT_DESC',
  ITEMTYPE_ASC = 'ITEMTYPE_ASC',
  NAME_DESC = 'NAME_DESC',
  PAGE_DESC = 'PAGE_DESC',
  SPECIALFEATURE_DESC = 'SPECIALFEATURE_DESC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  AUTOFINISH_ASC = 'AUTOFINISH_ASC',
  AUTOFINISH_DESC = 'AUTOFINISH_DESC',
  BUTTONACTION_DESC = 'BUTTONACTION_DESC',
  _ID_DESC = '_ID_DESC',
  AUTOSTART_DESC = 'AUTOSTART_DESC',
  NAME_ASC = 'NAME_ASC',
  MODE_ASC = 'MODE_ASC',
  MODULEID_DESC = 'MODULEID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  _ID_ASC = '_ID_ASC',
  AUTOSTART_ASC = 'AUTOSTART_ASC',
  MANAGEMENTIDS_DESC = 'MANAGEMENTIDS_DESC',
  BUTTONTYPE_ASC = 'BUTTONTYPE_ASC',
  MAINLINK_DESC = 'MAINLINK_DESC',
  AIRTABLEID_ASC = 'AIRTABLEID_ASC',
  MAINLINK_ASC = 'MAINLINK_ASC',
  MANAGEMENTIDS_ASC = 'MANAGEMENTIDS_ASC',
  MODE_DESC = 'MODE_DESC',
  SPECIALFEATURE_ASC = 'SPECIALFEATURE_ASC',
  BUTTONLINK_ASC = 'BUTTONLINK_ASC',
  BUTTONLINK_DESC = 'BUTTONLINK_DESC',
  ITEMTYPE_DESC = 'ITEMTYPE_DESC'
}

export interface GQLTokenRawUpdateInput {
  owner?: string;
  seriesID?: string;
  media?: Array<GQLTokenRawMediumUpdateInput | null>;
  owner_unset?: boolean;
  collectionID?: string;
  description_unset?: boolean;
  width_unset?: boolean;
  numberOfEditions_inc?: number;
  creator_unset?: boolean;
  blockchain?: string;
  qualification_inc?: number;
  type_unset?: boolean;
  collectionID_unset?: boolean;
  creatorFees_unset?: boolean;
  creator?: string;
  superType?: string;
  media_unset?: boolean;
  description?: string;
  usersWhoShared_unset?: boolean;
  hash_unset?: boolean;
  qualification?: number;
  hash?: string;
  title?: string;
  height?: string;
  qualification_unset?: boolean;
  superType_unset?: boolean;
  type?: string;
  height_unset?: boolean;
  numberOfEditions_unset?: boolean;
  usersWhoShared?: Array<number | null>;
  seriesID_unset?: boolean;
  creatorFees?: string;
  blockchain_unset?: boolean;
  numberOfEditions?: number;
  title_unset?: boolean;
  width?: string;
}

export interface GQLCollectionRawMedium {
  hash?: string;
  height?: number;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLContract_typeHashFieldLayerQueryInput {
  layerIndex_gte?: string;
  layerIndex_lte?: string;
  layerIndex_in?: Array<string | null>;
  OR?: Array<GQLContract_typeHashFieldLayerQueryInput>;
  layerIndex_lt?: string;
  layerIndex_exists?: boolean;
  layerIndex_ne?: string;
  layerIndex?: string;
  layerIndex_gt?: string;
  layerIndex_nin?: Array<string | null>;
  AND?: Array<GQLContract_typeHashFieldLayerQueryInput>;
  images?: GQLContract_typeHashFieldLayerImageQueryInput;
  images_exists?: boolean;
}

export interface GQLInsertManyPayload {
  insertedIds: Array<GQLObjectId | null>;
}

export interface GQLSwift_message {
  _id?: GQLObjectId;
  createdAt?: number;
  hash?: string;
  message?: GQLSwift_messageMessage;
  parameters?: GQLSwift_messageParameter;
  status?: string;
  updatedAt?: number;
}

export interface GQLActionMessageUpdateInput {
  actionCode?: GQLActionMessageActionCodeRelationInput;
  time?: number;
  senderID?: string;
  hash_unset?: boolean;
  superType?: string;
  actionCode_unset?: boolean;
  superType_unset?: boolean;
  time_inc?: number;
  senderAddress_unset?: boolean;
  resolution_unset?: boolean;
  resolution?: string;
  senderAddress?: string;
  senderID_unset?: boolean;
  hash?: string;
  time_unset?: boolean;
}

export interface GQLAuctionRawBidUpdateInput {
  bidCreator?: string;
  bidCreator_unset?: boolean;
  bidValue?: string;
  bidValue_unset?: boolean;
}

export interface GQLTestCrossEndorsementInsertInput {
  masterID?: string;
  mediaType?: string;
}

export interface GQLTokenDeployedStampUpdateInput {
  tokenID?: string;
  tokenID_unset?: boolean;
}

export interface GQLAskDeployedValueQueryInput {
  askValue_gte?: string;
  askValue_lte?: string;
  askValue_in?: Array<string | null>;
  askTime_gt?: number;
  askTime_in?: Array<number | null>;
  askTime?: number;
  askValue_gt?: string;
  OR?: Array<GQLAskDeployedValueQueryInput>;
  AND?: Array<GQLAskDeployedValueQueryInput>;
  askTime_gte?: number;
  askTime_ne?: number;
  askValue_exists?: boolean;
  askTime_lte?: number;
  askTime_nin?: Array<number | null>;
  askValue_lt?: string;
  askValue_nin?: Array<string | null>;
  askTime_lt?: number;
  askTime_exists?: boolean;
  askValue_ne?: string;
  askValue?: string;
}

export interface GQLNew_sessionUpdateInput {
  _id_unset?: boolean;
  token?: string;
  token_unset?: boolean;
  walletAddress?: string;
  walletAddress_unset?: boolean;
  _id?: GQLObjectId;
}

export interface GQLCollectionRawQueryInput {
  hash_in?: Array<string | null>;
  type_lt?: string;
  blockchain_lte?: string;
  type_gte?: string;
  blockchain_gt?: string;
  creator_lte?: string;
  hash_ne?: string;
  txHash_ne?: string;
  privacy_gt?: string;
  hash_nin?: Array<string | null>;
  txHash_in?: Array<string | null>;
  blockchain_nin?: Array<string | null>;
  type_lte?: string;
  title_nin?: Array<string | null>;
  AND?: Array<GQLCollectionRawQueryInput>;
  type?: string;
  privacy_nin?: Array<string | null>;
  creator_in?: Array<string | null>;
  type_in?: Array<string | null>;
  about_exists?: boolean;
  about_gte?: string;
  privacy_exists?: boolean;
  creator_lt?: string;
  hash_gt?: string;
  creator_nin?: Array<string | null>;
  about_lte?: string;
  superType_nin?: Array<string | null>;
  title_exists?: boolean;
  type_exists?: boolean;
  hash_lt?: string;
  blockchain_lt?: string;
  title_in?: Array<string | null>;
  txHash_exists?: boolean;
  about_nin?: Array<string | null>;
  blockchain?: string;
  title_ne?: string;
  creator?: string;
  hash_exists?: boolean;
  superType_ne?: string;
  superType_lt?: string;
  superType_lte?: string;
  OR?: Array<GQLCollectionRawQueryInput>;
  superType?: string;
  title?: string;
  media_in?: Array<GQLCollectionRawMediumQueryInput | null>;
  txHash_gte?: string;
  title_lt?: string;
  superType_gt?: string;
  about_in?: Array<string | null>;
  blockchain_ne?: string;
  privacy_lt?: string;
  privacy_ne?: string;
  superType_gte?: string;
  privacy_in?: Array<string | null>;
  txHash?: string;
  privacy_lte?: string;
  type_nin?: Array<string | null>;
  about_gt?: string;
  creator_gte?: string;
  about_ne?: string;
  privacy?: string;
  superType_in?: Array<string | null>;
  blockchain_exists?: boolean;
  about?: string;
  hash?: string;
  creator_ne?: string;
  privacy_gte?: string;
  title_gte?: string;
  txHash_lte?: string;
  creator_exists?: boolean;
  type_gt?: string;
  hash_gte?: string;
  media_exists?: boolean;
  type_ne?: string;
  hash_lte?: string;
  about_lt?: string;
  title_gt?: string;
  superType_exists?: boolean;
  media_nin?: Array<GQLCollectionRawMediumQueryInput | null>;
  txHash_gt?: string;
  txHash_lt?: string;
  blockchain_gte?: string;
  blockchain_in?: Array<string | null>;
  txHash_nin?: Array<string | null>;
  media?: Array<GQLCollectionRawMediumQueryInput | null>;
  title_lte?: string;
  creator_gt?: string;
}

export interface GQLAskRaw {
  askCreator?: string;
  blockchain?: string;
  currentAskValue?: string;
  endTime?: number;
  showcaseFee?: string;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
  values?: Array<GQLAskRawValue | null>;
}

export interface GQLActionColMessageInsertInput {
  senderID?: string;
  superType?: string;
  time?: number;
  actionCode?: string;
  hash?: string;
  senderAddress?: string;
}

export enum GQLDailySortByInput {
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  SALEMAX_DESC = 'SALEMAX_DESC',
  TOKENSSOLD_DESC = 'TOKENSSOLD_DESC',
  TOKENSENDORSED_ASC = 'TOKENSENDORSED_ASC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  SALEMIN_ASC = 'SALEMIN_ASC',
  ENDORSEMENTAVERAGE_DESC = 'ENDORSEMENTAVERAGE_DESC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  TOTALENDORSEMENTSSUM_ASC = 'TOTALENDORSEMENTSSUM_ASC',
  _ID_ASC = '_ID_ASC',
  SALEMIN_DESC = 'SALEMIN_DESC',
  ENDORSEMENTMIN_ASC = 'ENDORSEMENTMIN_ASC',
  TOKENSENDORSED_DESC = 'TOKENSENDORSED_DESC',
  DATE_DESC = 'DATE_DESC',
  SALEAVERAGE_ASC = 'SALEAVERAGE_ASC',
  ENDORSEMENTMAX_DESC = 'ENDORSEMENTMAX_DESC',
  TOKENSCREATED_DESC = 'TOKENSCREATED_DESC',
  _ID_DESC = '_ID_DESC',
  DATE_ASC = 'DATE_ASC',
  TOTALSALESSUM_ASC = 'TOTALSALESSUM_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  ENDORSEMENTAVERAGE_ASC = 'ENDORSEMENTAVERAGE_ASC',
  SALEAVERAGE_DESC = 'SALEAVERAGE_DESC',
  ENDORSEMENTMAX_ASC = 'ENDORSEMENTMAX_ASC',
  TOKENSCREATED_ASC = 'TOKENSCREATED_ASC',
  TOTALSUM_ASC = 'TOTALSUM_ASC',
  TOTALSUM_DESC = 'TOTALSUM_DESC',
  TOTALSALESSUM_DESC = 'TOTALSALESSUM_DESC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  TOKENSSOLD_ASC = 'TOKENSSOLD_ASC',
  TOTALENDORSEMENTSSUM_DESC = 'TOTALENDORSEMENTSSUM_DESC',
  SALEMAX_ASC = 'SALEMAX_ASC',
  ENDORSEMENTMIN_DESC = 'ENDORSEMENTMIN_DESC'
}

export interface GQLToken {
  _id?: GQLObjectId;
  createdAt?: number;
  deployed?: GQLTokenDeployed;
  raw?: GQLTokenRaw;
  tokenID?: string;
  updatedAt?: number;
}

export interface GQLLocaleInsertInput {
  createdAt?: number;
  updatedAt?: number;
  _id?: GQLObjectId;
  lang?: string;
  module?: GQLLocaleModuleRelationInput;
  moduleName?: string;
  stringName?: string;
  string?: string;
}

export interface GQLCol1LayerImageInsertInput {
  subtitle?: string;
  weight?: number;
  width?: number;
  hash?: string;
  height?: number;
  mimetype?: string;
  rarity?: number;
}

export interface GQLRoyalty {
  _id?: GQLObjectId;
  count?: number;
  lowerValue?: number;
  percentage?: number;
  upperValue?: number;
}

export interface GQLLocaleUpdateInput {
  string_unset?: boolean;
  updatedAt_inc?: number;
  _id_unset?: boolean;
  lang?: string;
  string?: string;
  moduleName?: string;
  _id?: GQLObjectId;
  stringName?: string;
  stringName_unset?: boolean;
  module?: GQLLocaleModuleRelationInput;
  updatedAt?: number;
  moduleName_unset?: boolean;
  lang_unset?: boolean;
  module_unset?: boolean;
  createdAt?: number;
  createdAt_unset?: boolean;
  updatedAt_unset?: boolean;
  createdAt_inc?: number;
}

export interface GQLCollectionRawUpdateInput {
  title?: string;
  creator?: string;
  about?: string;
  txHash_unset?: boolean;
  hash?: string;
  privacy_unset?: boolean;
  blockchain?: string;
  privacy?: string;
  txHash?: string;
  type?: string;
  creator_unset?: boolean;
  title_unset?: boolean;
  media_unset?: boolean;
  type_unset?: boolean;
  media?: Array<GQLCollectionRawMediumUpdateInput | null>;
  about_unset?: boolean;
  blockchain_unset?: boolean;
  hash_unset?: boolean;
  superType?: string;
  superType_unset?: boolean;
}

export enum GQLUi_assetSortByInput {
  MANAGEMENTIDS_ASC = 'MANAGEMENTIDS_ASC',
  TEXTLANDING_ASC = 'TEXTLANDING_ASC',
  AIRTABLEID_DESC = 'AIRTABLEID_DESC',
  _ID_DESC = '_ID_DESC',
  ASSETTITLE_ASC = 'ASSETTITLE_ASC',
  ASSETTITLE_DESC = 'ASSETTITLE_DESC',
  IMAGE_ASC = 'IMAGE_ASC',
  IMAGELANDING_DESC = 'IMAGELANDING_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  ASSETID_ASC = 'ASSETID_ASC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  MANAGEMENTIDS_DESC = 'MANAGEMENTIDS_DESC',
  TEXTLANDING_DESC = 'TEXTLANDING_DESC',
  _ID_ASC = '_ID_ASC',
  ASSETID_DESC = 'ASSETID_DESC',
  ASSETSUBTITLE_ASC = 'ASSETSUBTITLE_ASC',
  ASSETSUBTITLE_DESC = 'ASSETSUBTITLE_DESC',
  IMAGE_DESC = 'IMAGE_DESC',
  IMAGELANDING_ASC = 'IMAGELANDING_ASC',
  AIRTABLEID_ASC = 'AIRTABLEID_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC'
}

export interface GQLAuctionDeployedBidInsertInput {
  bidCreator?: string;
  bidStatus?: string;
  bidValue?: string;
}

export enum GQLUserSortByInput {
  WALLPAPERHASH_ASC = 'WALLPAPERHASH_ASC',
  ABOUT_ASC = 'ABOUT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  DEFAULTWALLET_ASC = 'DEFAULTWALLET_ASC',
  LANGUAGE_DESC = 'LANGUAGE_DESC',
  PHOTOHASH_ASC = 'PHOTOHASH_ASC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  USERNAME_ASC = 'USERNAME_ASC',
  ACCOUNTNUMBER_DESC = 'ACCOUNTNUMBER_DESC',
  AVATARHASH_DESC = 'AVATARHASH_DESC',
  WALLETADDRESS_ASC = 'WALLETADDRESS_ASC',
  NICKNAME_DESC = 'NICKNAME_DESC',
  WALLETADDRESS_DESC = 'WALLETADDRESS_DESC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  MANAGINGACCOUNT_ASC = 'MANAGINGACCOUNT_ASC',
  AVATARHASH_ASC = 'AVATARHASH_ASC',
  NICKNAME_ASC = 'NICKNAME_ASC',
  REGISTEREDWALLET_DESC = 'REGISTEREDWALLET_DESC',
  _ID_ASC = '_ID_ASC',
  ABOUT_DESC = 'ABOUT_DESC',
  MANAGINGACCOUNT_DESC = 'MANAGINGACCOUNT_DESC',
  PHOTOHASH_DESC = 'PHOTOHASH_DESC',
  _ID_DESC = '_ID_DESC',
  LANGUAGE_ASC = 'LANGUAGE_ASC',
  QUALIFICATION_DESC = 'QUALIFICATION_DESC',
  USERNAME_DESC = 'USERNAME_DESC',
  DEFAULTWALLET_DESC = 'DEFAULTWALLET_DESC',
  QUALIFICATION_ASC = 'QUALIFICATION_ASC',
  ACCOUNTNUMBER_ASC = 'ACCOUNTNUMBER_ASC',
  REGISTEREDWALLET_ASC = 'REGISTEREDWALLET_ASC',
  WALLPAPERHASH_DESC = 'WALLPAPERHASH_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC'
}

export interface GQLCol1LayerPoint {
  hash?: string;
  point?: number;
}

export enum GQLSubscriptionSortByInput {
  _ID_DESC = '_ID_DESC',
  LASTBLOCKREAD_ASC = 'LASTBLOCKREAD_ASC',
  SUPERTYPE_ASC = 'SUPERTYPE_ASC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  LASTBLOCKREAD_DESC = 'LASTBLOCKREAD_DESC',
  STATUS_ASC = 'STATUS_ASC',
  STATUS_DESC = 'STATUS_DESC',
  SUPERTYPE_DESC = 'SUPERTYPE_DESC',
  _ID_ASC = '_ID_ASC',
  ABIFILEURL_ASC = 'ABIFILEURL_ASC',
  ABIFILEURL_DESC = 'ABIFILEURL_DESC',
  ADDRESS_DESC = 'ADDRESS_DESC',
  ADDRESS_ASC = 'ADDRESS_ASC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC'
}

export interface GQLBidDeployedInsertInput {
  bidValue?: string;
  endTime?: number;
  status?: string;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
  bidAddress?: string;
  bidCreator?: string;
}

export interface GQLActionTokenAttributeUpdateInput {
  collectionID?: string;
  manager_unset?: boolean;
  supply?: number;
  tokenID?: string;
  tokenCreator_unset?: boolean;
  tokenID_unset?: boolean;
  hash_unset?: boolean;
  creatorFees_unset?: boolean;
  creatorFees?: string;
  ownerPublicKey?: string;
  seriesCreator?: string;
  manager?: string;
  hash?: string;
  oldOwner_unset?: boolean;
  oldOwner?: string;
  newOwner_unset?: boolean;
  collectionCreator?: string;
  owner?: string;
  tokenCreator?: string;
  collectionCreator_unset?: boolean;
  supply_inc?: number;
  supply_unset?: boolean;
  maximum?: number;
  maximum_inc?: number;
  owner_unset?: boolean;
  ownerPublicKey_unset?: boolean;
  seriesCreator_unset?: boolean;
  maximum_unset?: boolean;
  collectionID_unset?: boolean;
  seriesID_unset?: boolean;
  newOwner?: string;
  seriesID?: GQLActionTokenAttributeSeriesIDRelationInput;
}

export interface GQLAskRawValueQueryInput {
  askValue_in?: Array<string | null>;
  OR?: Array<GQLAskRawValueQueryInput>;
  askValue_nin?: Array<string | null>;
  askTime_in?: Array<number | null>;
  askTime_nin?: Array<number | null>;
  askValue_gt?: string;
  askTime_gt?: number;
  askValue?: string;
  askTime?: number;
  AND?: Array<GQLAskRawValueQueryInput>;
  askValue_ne?: string;
  askValue_gte?: string;
  askValue_lte?: string;
  askTime_ne?: number;
  askTime_gte?: number;
  askValue_exists?: boolean;
  askValue_lt?: string;
  askTime_lt?: number;
  askTime_lte?: number;
  askTime_exists?: boolean;
}

export interface GQLAddress_abiQueryInput {
  _id_gt?: GQLObjectId;
  address_in?: Array<string | null>;
  level_lte?: string;
  superType_gte?: string;
  level?: string;
  superType_exists?: boolean;
  superType_lte?: string;
  _id_gte?: GQLObjectId;
  address_lt?: string;
  address?: string;
  superType?: string;
  _id_lte?: GQLObjectId;
  _id?: GQLObjectId;
  OR?: Array<GQLAddress_abiQueryInput>;
  _id_in?: Array<GQLObjectId | null>;
  _id_exists?: boolean;
  level_in?: Array<string | null>;
  level_lt?: string;
  level_exists?: boolean;
  address_ne?: string;
  level_gt?: string;
  _id_ne?: GQLObjectId;
  level_gte?: string;
  _id_nin?: Array<GQLObjectId | null>;
  level_ne?: string;
  address_nin?: Array<string | null>;
  address_lte?: string;
  superType_ne?: string;
  superType_nin?: Array<string | null>;
  address_gt?: string;
  level_nin?: Array<string | null>;
  superType_in?: Array<string | null>;
  _id_lt?: GQLObjectId;
  superType_gt?: string;
  superType_lt?: string;
  AND?: Array<GQLAddress_abiQueryInput>;
  address_gte?: string;
  address_exists?: boolean;
}

export interface GQLUserMergedAccountUpdateInput {
  accountNumber?: number;
  accountNumber_inc?: number;
  accountNumber_unset?: boolean;
  status?: string;
  status_unset?: boolean;
}

export interface GQLPaginationUiChart {
  skip?: number;
  limit?: number;
}

export interface GQLTokenDeployedQueryInput {
  foreverStatus_ne?: string;
  creator_exists?: boolean;
  seriesObject?: GQLSeriesQueryInput;
  index_lt?: number;
  sealPosition_lt?: string;
  ownerObject_exists?: boolean;
  foreverID_exists?: boolean;
  seriesID?: GQLSeriesQueryInput;
  index_gt?: number;
  collectionID_gt?: string;
  stamps_nin?: Array<GQLTokenDeployedStampQueryInput | null>;
  seal_ne?: string;
  managerExpirationTime?: number;
  lastSalePrice_gt?: number;
  foreverStatus_gt?: string;
  hash_ne?: string;
  superType_gt?: string;
  hash_gt?: string;
  sealPosition_exists?: boolean;
  managerExpirationTime_ne?: number;
  foreverStatus?: string;
  blockchain_in?: Array<string | null>;
  creatorFees_lte?: string;
  superType_exists?: boolean;
  index_ne?: number;
  lastSalePrice_lte?: number;
  superType_in?: Array<string | null>;
  isEndorsed?: boolean;
  owner_gte?: string;
  lastSaleTime_in?: Array<number | null>;
  creator_in?: Array<string | null>;
  owner_gt?: string;
  sealPosition_ne?: string;
  lastSaleTime_exists?: boolean;
  isEndorsed_exists?: boolean;
  creatorFees_lt?: string;
  stamps_in?: Array<GQLTokenDeployedStampQueryInput | null>;
  stamps?: Array<GQLTokenDeployedStampQueryInput | null>;
  hash_nin?: Array<string | null>;
  foreverID_gt?: string;
  lastSalePrice_in?: Array<number | null>;
  lastSaleTime_ne?: number;
  index?: number;
  address_nin?: Array<string | null>;
  managerExpirationTime_nin?: Array<number | null>;
  address?: string;
  sealPosition_gte?: string;
  manager_lte?: string;
  lastSaleTime_gte?: number;
  type_gt?: string;
  manager_exists?: boolean;
  index_exists?: boolean;
  address_in?: Array<string | null>;
  seal_lte?: string;
  foreverID_gte?: string;
  lastSaleTime_nin?: Array<number | null>;
  type?: string;
  owner?: string;
  frontStatus_lte?: string;
  owner_exists?: boolean;
  creatorFees?: string;
  frontStatus_exists?: boolean;
  owner_lt?: string;
  collectionID?: string;
  manager_gte?: string;
  stamps_exists?: boolean;
  frontStatus_ne?: string;
  superType_lt?: string;
  lastSalePrice_ne?: number;
  creatorFees_nin?: Array<string | null>;
  foreverID_ne?: string;
  sealPosition_lte?: string;
  OR?: Array<GQLTokenDeployedQueryInput>;
  hash_gte?: string;
  creatorFees_gt?: string;
  foreverStatus_gte?: string;
  index_lte?: number;
  type_nin?: Array<string | null>;
  seal?: string;
  superType_nin?: Array<string | null>;
  blockchain_exists?: boolean;
  index_in?: Array<number | null>;
  type_lt?: string;
  frontStatus_nin?: Array<string | null>;
  sealPosition_in?: Array<string | null>;
  sealPosition?: string;
  foreverID_in?: Array<string | null>;
  seriesID_exists?: boolean;
  type_in?: Array<string | null>;
  foreverStatus_lt?: string;
  lastSaleTime?: number;
  frontStatus_in?: Array<string | null>;
  index_gte?: number;
  hash_exists?: boolean;
  manager_nin?: Array<string | null>;
  address_gte?: string;
  superType_ne?: string;
  type_ne?: string;
  address_exists?: boolean;
  type_lte?: string;
  hash_lt?: string;
  lastSalePrice_lt?: number;
  managerExpirationTime_lte?: number;
  address_lt?: string;
  blockchain_lt?: string;
  creator_gte?: string;
  address_ne?: string;
  ownerObject?: GQLUserQueryInput;
  foreverID?: string;
  superType?: string;
  creatorFees_ne?: string;
  lastSaleTime_lte?: number;
  address_gt?: string;
  creatorObject?: GQLUserQueryInput;
  managerExpirationTime_lt?: number;
  manager_in?: Array<string | null>;
  collectionID_in?: Array<string | null>;
  isEndorsed_ne?: boolean;
  creatorFees_gte?: string;
  seal_gte?: string;
  foreverStatus_in?: Array<string | null>;
  lastSaleTime_lt?: number;
  collectionID_lt?: string;
  address_lte?: string;
  blockchain_nin?: Array<string | null>;
  manager_ne?: string;
  manager_lt?: string;
  creatorFees_exists?: boolean;
  owner_in?: Array<string | null>;
  hash?: string;
  seal_nin?: Array<string | null>;
  AND?: Array<GQLTokenDeployedQueryInput>;
  collectionID_lte?: string;
  managerExpirationTime_exists?: boolean;
  foreverStatus_nin?: Array<string | null>;
  managerExpirationTime_in?: Array<number | null>;
  seal_in?: Array<string | null>;
  creator_lt?: string;
  sealPosition_gt?: string;
  owner_ne?: string;
  owner_lte?: string;
  sealPosition_nin?: Array<string | null>;
  seriesObject_exists?: boolean;
  collectionID_ne?: string;
  foreverID_lte?: string;
  frontStatus_gt?: string;
  creatorFees_in?: Array<string | null>;
  type_exists?: boolean;
  seal_exists?: boolean;
  manager_gt?: string;
  managerExpirationTime_gte?: number;
  creator?: string;
  index_nin?: Array<number | null>;
  creatorObject_exists?: boolean;
  foreverStatus_exists?: boolean;
  creator_gt?: string;
  blockchain?: string;
  seal_lt?: string;
  lastSalePrice?: number;
  collectionID_nin?: Array<string | null>;
  creator_ne?: string;
  foreverStatus_lte?: string;
  type_gte?: string;
  seal_gt?: string;
  superType_lte?: string;
  frontStatus?: string;
  lastSalePrice_gte?: number;
  frontStatus_lt?: string;
  hash_lte?: string;
  owner_nin?: Array<string | null>;
  blockchain_lte?: string;
  frontStatus_gte?: string;
  collectionID_gte?: string;
  blockchain_gte?: string;
  collectionID_exists?: boolean;
  lastSaleTime_gt?: number;
  lastSalePrice_exists?: boolean;
  blockchain_gt?: string;
  managerExpirationTime_gt?: number;
  manager?: string;
  blockchain_ne?: string;
  creator_lte?: string;
  lastSalePrice_nin?: Array<number | null>;
  foreverID_lt?: string;
  superType_gte?: string;
  foreverID_nin?: Array<string | null>;
  creator_nin?: Array<string | null>;
  hash_in?: Array<string | null>;
}

export interface GQLTokenRawMedium {
  hash?: string;
  height?: number;
  ipfsHash?: string;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export enum GQLSwift_codeSortByInput {
  ACTIONCAPTURE_DESC = 'ACTIONCAPTURE_DESC',
  ACTORFIELD_DESC = 'ACTORFIELD_DESC',
  ADDITIONALINFO_ASC = 'ADDITIONALINFO_ASC',
  ADDITIONALINFO_DESC = 'ADDITIONALINFO_DESC',
  CODE_ASC = 'CODE_ASC',
  _ID_ASC = '_ID_ASC',
  ACTIONCAPTURE_ASC = 'ACTIONCAPTURE_ASC',
  ACTORFIELD_ASC = 'ACTORFIELD_ASC',
  CODE_DESC = 'CODE_DESC',
  DESCRIPTION_ASC = 'DESCRIPTION_ASC',
  DESCRIPTION_DESC = 'DESCRIPTION_DESC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLTestTemporaryEndorsement {
  expiresAt?: number;
  sealID?: string;
}

export interface GQLDaily {
  _id?: GQLObjectId;
  blockchain?: string;
  createdAt?: number;
  date?: number;
  endorsementAverage?: number;
  endorsementMax?: number;
  endorsementMin?: number;
  saleAverage?: number;
  saleMax?: number;
  saleMin?: number;
  tokensCreated?: number;
  tokensEndorsed?: number;
  tokensSold?: number;
  totalEndorsementsSum?: number;
  totalSalesSum?: number;
  totalSum?: number;
  updatedAt?: number;
}

export interface GQLNew_sessionInsertInput {
  _id?: GQLObjectId;
  token?: string;
  walletAddress?: string;
}

export enum GQLLikeSortByInput {
  SERIESID_DESC = 'SERIESID_DESC',
  TOKENID_ASC = 'TOKENID_ASC',
  TOKENID_DESC = 'TOKENID_DESC',
  USERACCOUNTNUMBER_ASC = 'USERACCOUNTNUMBER_ASC',
  USERACCOUNTNUMBER_DESC = 'USERACCOUNTNUMBER_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  SERIESID_ASC = 'SERIESID_ASC'
}

export interface GQLAuctionDeployedUpdateInput {
  endTime_inc?: number;
  showcaseFee?: string;
  tokenID_unset?: boolean;
  bidStep_unset?: boolean;
  finalBid_unset?: boolean;
  status_unset?: boolean;
  bids_unset?: boolean;
  showcaseFee_unset?: boolean;
  auctionAddress?: string;
  auctionAddress_unset?: boolean;
  finalBid?: string;
  bids?: Array<GQLAuctionDeployedBidUpdateInput | null>;
  startTime?: number;
  endTime?: number;
  startTime_unset?: boolean;
  status?: string;
  tokenAddress_unset?: boolean;
  tokenID?: string;
  startTime_inc?: number;
  endTime_unset?: boolean;
  startBid?: string;
  startBid_unset?: boolean;
  superType_unset?: boolean;
  bidStep?: string;
  tokenAddress?: string;
  superType?: string;
}

export enum GQLTriggerSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  NAME_ASC = 'NAME_ASC',
  NAME_DESC = 'NAME_DESC',
  LASTDATE_ASC = 'LASTDATE_ASC',
  LASTDATE_DESC = 'LASTDATE_DESC'
}

export interface GQLContract_typeHashFieldLayerImageQueryInput {
  hash_gt?: string;
  mimetype?: string;
  mimetype_exists?: boolean;
  rarityWeight_nin?: Array<string | null>;
  hash_ne?: string;
  weight_nin?: Array<string | null>;
  imageIndex_gt?: string;
  hash_nin?: Array<string | null>;
  imageIndex_nin?: Array<string | null>;
  rarityWeight_exists?: boolean;
  hash_gte?: string;
  imageIndex_lte?: string;
  mimetype_nin?: Array<string | null>;
  rarityWeight_in?: Array<string | null>;
  imageIndex_in?: Array<string | null>;
  imageIndex_lt?: string;
  hash_in?: Array<string | null>;
  mimetype_gte?: string;
  mimetype_lte?: string;
  weight_lte?: string;
  weight_ne?: string;
  AND?: Array<GQLContract_typeHashFieldLayerImageQueryInput>;
  imageIndex_gte?: string;
  mimetype_lt?: string;
  hash_lt?: string;
  imageIndex_ne?: string;
  hash_exists?: boolean;
  weight_gt?: string;
  imageIndex_exists?: boolean;
  rarityWeight_ne?: string;
  mimetype_gt?: string;
  rarityWeight_gte?: string;
  weight_in?: Array<string | null>;
  mimetype_in?: Array<string | null>;
  imageIndex?: string;
  weight?: string;
  weight_lt?: string;
  OR?: Array<GQLContract_typeHashFieldLayerImageQueryInput>;
  rarityWeight_lte?: string;
  hash?: string;
  rarityWeight_gt?: string;
  hash_lte?: string;
  weight_gte?: string;
  rarityWeight?: string;
  rarityWeight_lt?: string;
  weight_exists?: boolean;
  mimetype_ne?: string;
}

export interface GQLSessionAccountNumberObjectRelationInput {
  create?: GQLUserInsertInput;
  link?: number;
}

export interface GQLSeriesRawInsertInput {
  creator?: string;
  description?: string;
  media?: Array<GQLSeriesRawMediumInsertInput | null>;
  numberOfEditions?: number;
  type?: string;
  creatorFees?: string;
  hash?: string;
  title?: string;
  blockchain?: string;
  qualification?: number;
  collectionID?: string;
  usersWhoShared?: Array<number | null>;
  superType?: string;
}

export interface GQLEndorsementRawQueryInput {
  expiresAt_gt?: number;
  value_lte?: string;
  creator?: string;
  OR?: Array<GQLEndorsementRawQueryInput>;
  tokenID?: string;
  type?: string;
  masterID?: string;
  sealID_ne?: string;
  blockchain_nin?: Array<string | null>;
  creator_exists?: boolean;
  creator_lt?: string;
  type_ne?: string;
  tokenID_nin?: Array<string | null>;
  masterID_gte?: string;
  cornerSE_exists?: boolean;
  creator_in?: Array<string | null>;
  masterMediaType_lt?: string;
  expiresAt_exists?: boolean;
  value_gte?: string;
  masterID_lt?: string;
  superType_lte?: string;
  masterMediaType_exists?: boolean;
  creator_gt?: string;
  expiresAt_nin?: Array<number | null>;
  cornerNE_exists?: boolean;
  cornerNW?: boolean;
  value_gt?: string;
  value_nin?: Array<string | null>;
  sealID_nin?: Array<string | null>;
  creator_ne?: string;
  value_ne?: string;
  cornerNW_ne?: boolean;
  expiresAt_lte?: number;
  superType_lt?: string;
  type_gt?: string;
  creator_gte?: string;
  superType_exists?: boolean;
  AND?: Array<GQLEndorsementRawQueryInput>;
  type_gte?: string;
  masterID_exists?: boolean;
  sealID_in?: Array<string | null>;
  masterMediaType_gte?: string;
  superType?: string;
  cornerSE?: boolean;
  sealID?: string;
  masterMediaType?: string;
  superType_gte?: string;
  tokenID_lte?: string;
  tokenID_in?: Array<string | null>;
  expiresAt_ne?: number;
  masterMediaType_lte?: string;
  blockchain_lt?: string;
  sealID_gt?: string;
  creator_nin?: Array<string | null>;
  sealID_lte?: string;
  type_exists?: boolean;
  cornerNE_ne?: boolean;
  blockchain_gte?: string;
  value_exists?: boolean;
  blockchain?: string;
  masterID_ne?: string;
  type_nin?: Array<string | null>;
  masterMediaType_in?: Array<string | null>;
  masterMediaType_ne?: string;
  expiresAt_lt?: number;
  value_lt?: string;
  masterID_lte?: string;
  superType_nin?: Array<string | null>;
  type_lt?: string;
  masterID_gt?: string;
  masterID_in?: Array<string | null>;
  value?: string;
  cornerNE?: boolean;
  cornerSW?: boolean;
  blockchain_lte?: string;
  sealID_lt?: string;
  type_lte?: string;
  tokenID_exists?: boolean;
  value_in?: Array<string | null>;
  creator_lte?: string;
  sealID_exists?: boolean;
  blockchain_exists?: boolean;
  cornerNW_exists?: boolean;
  blockchain_ne?: string;
  blockchain_in?: Array<string | null>;
  masterID_nin?: Array<string | null>;
  tokenID_ne?: string;
  superType_ne?: string;
  blockchain_gt?: string;
  masterMediaType_nin?: Array<string | null>;
  tokenID_gt?: string;
  cornerSE_ne?: boolean;
  superType_in?: Array<string | null>;
  expiresAt_gte?: number;
  type_in?: Array<string | null>;
  expiresAt?: number;
  cornerSW_exists?: boolean;
  tokenID_gte?: string;
  sealID_gte?: string;
  masterMediaType_gt?: string;
  superType_gt?: string;
  cornerSW_ne?: boolean;
  tokenID_lt?: string;
  expiresAt_in?: Array<number | null>;
}

export enum GQLBidSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  BIDID_ASC = 'BIDID_ASC',
  BIDID_DESC = 'BIDID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC'
}

export interface GQLUi_moduleQueryInput {
  page_ne?: string;
  page_lt?: string;
  updatedAt_exists?: boolean;
  buttonType_ne?: string;
  airtableId_lt?: string;
  buttonLink_lt?: string;
  scope?: string;
  moduleID_gte?: string;
  autoFinish_exists?: boolean;
  createdAt_ne?: number;
  status_exists?: boolean;
  comment_gt?: string;
  comment_lt?: string;
  name_in?: Array<string | null>;
  name_nin?: Array<string | null>;
  managementIDs_in?: Array<string | null>;
  autoFinish_gte?: number;
  OR?: Array<GQLUi_moduleQueryInput>;
  managementIDs_gte?: string;
  _id_lt?: GQLObjectId;
  mainLink_in?: Array<string | null>;
  airtableId_ne?: string;
  name_gt?: string;
  createdAt_lte?: number;
  buttonLink_gt?: string;
  page_gte?: string;
  buttonType?: string;
  scope_exists?: boolean;
  buttonAction_lte?: string;
  mainLink_lte?: string;
  page_gt?: string;
  createdAt?: number;
  updatedAt_gte?: number;
  buttonType_in?: Array<string | null>;
  itemType_lt?: string;
  createdAt_nin?: Array<number | null>;
  mainLink_gt?: string;
  itemType_nin?: Array<string | null>;
  buttonLink_gte?: string;
  specialFeature_lte?: string;
  itemType_gt?: string;
  name_exists?: boolean;
  specialFeature_nin?: Array<string | null>;
  name_lt?: string;
  buttonName_lt?: string;
  status_gt?: string;
  airtableId?: string;
  buttonName_ne?: string;
  page_nin?: Array<string | null>;
  moduleID_lt?: string;
  timerVisible?: boolean;
  buttonLink_ne?: string;
  status?: string;
  buttonAction_lt?: string;
  autoFinish_ne?: number;
  buttonAction_nin?: Array<string | null>;
  mainLink_gte?: string;
  autoStart_gte?: number;
  mode?: string;
  timerVisible_exists?: boolean;
  updatedAt_lt?: number;
  status_lte?: string;
  createdAt_in?: Array<number | null>;
  autoStart_exists?: boolean;
  itemType_gte?: string;
  updatedAt_in?: Array<number | null>;
  specialFeature_gte?: string;
  status_nin?: Array<string | null>;
  moduleID_gt?: string;
  name_ne?: string;
  timerVisible_ne?: boolean;
  name?: string;
  managementIDs?: string;
  mainLink_lt?: string;
  updatedAt_ne?: number;
  autoFinish_in?: Array<number | null>;
  airtableId_gte?: string;
  specialFeature?: string;
  itemType?: string;
  autoStart_lt?: number;
  buttonLink_in?: Array<string | null>;
  comment?: string;
  managementIDs_gt?: string;
  managementIDs_lt?: string;
  specialFeature_exists?: boolean;
  buttonName_exists?: boolean;
  mainLink_ne?: string;
  moduleID_exists?: boolean;
  buttonName_gt?: string;
  status_gte?: string;
  moduleID_nin?: Array<string | null>;
  scope_nin?: Array<string | null>;
  mainLink?: string;
  autoStart_nin?: Array<number | null>;
  managementIDs_nin?: Array<string | null>;
  scope_lt?: string;
  buttonName_in?: Array<string | null>;
  mode_ne?: string;
  page_in?: Array<string | null>;
  buttonName_nin?: Array<string | null>;
  autoStart?: number;
  name_gte?: string;
  buttonAction?: string;
  buttonType_gte?: string;
  autoStart_in?: Array<number | null>;
  buttonName_gte?: string;
  mainLink_exists?: boolean;
  buttonAction_ne?: string;
  managementIDs_ne?: string;
  autoFinish?: number;
  managementIDs_exists?: boolean;
  buttonAction_exists?: boolean;
  moduleID_lte?: string;
  specialFeature_ne?: string;
  page?: string;
  _id?: GQLObjectId;
  itemType_ne?: string;
  mode_exists?: boolean;
  mode_lte?: string;
  mode_nin?: Array<string | null>;
  comment_ne?: string;
  _id_exists?: boolean;
  scope_gte?: string;
  specialFeature_in?: Array<string | null>;
  specialFeature_gt?: string;
  mode_gt?: string;
  buttonAction_in?: Array<string | null>;
  buttonLink?: string;
  scope_gt?: string;
  autoStart_gt?: number;
  moduleID?: string;
  mode_gte?: string;
  itemType_exists?: boolean;
  autoFinish_gt?: number;
  updatedAt_nin?: Array<number | null>;
  comment_exists?: boolean;
  mode_in?: Array<string | null>;
  name_lte?: string;
  scope_lte?: string;
  page_exists?: boolean;
  scope_ne?: string;
  _id_in?: Array<GQLObjectId | null>;
  airtableId_exists?: boolean;
  moduleID_ne?: string;
  createdAt_gte?: number;
  buttonType_gt?: string;
  itemType_in?: Array<string | null>;
  buttonName_lte?: string;
  specialFeature_lt?: string;
  buttonAction_gt?: string;
  scope_in?: Array<string | null>;
  _id_gt?: GQLObjectId;
  updatedAt_gt?: number;
  updatedAt_lte?: number;
  status_lt?: string;
  createdAt_exists?: boolean;
  createdAt_lt?: number;
  AND?: Array<GQLUi_moduleQueryInput>;
  managementIDs_lte?: string;
  buttonType_lt?: string;
  autoFinish_nin?: Array<number | null>;
  airtableId_in?: Array<string | null>;
  airtableId_lte?: string;
  comment_gte?: string;
  _id_lte?: GQLObjectId;
  mainLink_nin?: Array<string | null>;
  autoFinish_lt?: number;
  airtableId_nin?: Array<string | null>;
  airtableId_gt?: string;
  comment_nin?: Array<string | null>;
  _id_nin?: Array<GQLObjectId | null>;
  comment_in?: Array<string | null>;
  buttonLink_nin?: Array<string | null>;
  createdAt_gt?: number;
  page_lte?: string;
  buttonLink_lte?: string;
  buttonAction_gte?: string;
  comment_lte?: string;
  autoStart_ne?: number;
  updatedAt?: number;
  buttonType_lte?: string;
  autoStart_lte?: number;
  status_in?: Array<string | null>;
  buttonName?: string;
  buttonType_nin?: Array<string | null>;
  status_ne?: string;
  buttonLink_exists?: boolean;
  _id_gte?: GQLObjectId;
  moduleID_in?: Array<string | null>;
  _id_ne?: GQLObjectId;
  autoFinish_lte?: number;
  mode_lt?: string;
  itemType_lte?: string;
  buttonType_exists?: boolean;
}

export interface GQLNetworkQueryInput {
  name_gt?: string;
  type_nin?: Array<string | null>;
  AND?: Array<GQLNetworkQueryInput>;
  name_ne?: string;
  name_nin?: Array<string | null>;
  type_exists?: boolean;
  integration_in?: Array<string | null>;
  type_gt?: string;
  type_lte?: string;
  name_gte?: string;
  integration_nin?: Array<string | null>;
  name_exists?: boolean;
  _id_lte?: GQLObjectId;
  type_gte?: string;
  integration?: string;
  integration_ne?: string;
  type?: string;
  name?: string;
  name_lte?: string;
  integration_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  type_in?: Array<string | null>;
  name_in?: Array<string | null>;
  _id_in?: Array<GQLObjectId | null>;
  integration_gt?: string;
  name_lt?: string;
  type_ne?: string;
  type_lt?: string;
  integration_lt?: string;
  integration_gte?: string;
  OR?: Array<GQLNetworkQueryInput>;
  _id?: GQLObjectId;
  integration_lte?: string;
  _id_gte?: GQLObjectId;
  _id_exists?: boolean;
  _id_lt?: GQLObjectId;
  _id_ne?: GQLObjectId;
  _id_gt?: GQLObjectId;
}

export interface GQLModule {
  _id?: GQLObjectId;
  createdAt?: number;
  module?: string;
  nameType?: string;
  page?: string;
  type?: string;
  updatedAt?: number;
}

export interface GQLCollectionInsertInput {
  qualification?: number;
  tokensInCollection?: number;
  updatedAt?: number;
  collectionID?: string;
  creator?: string;
  deployed?: GQLCollectionDeployedInsertInput;
  raw?: GQLCollectionRawInsertInput;
  _id?: GQLObjectId;
  createdAt?: number;
  media?: Array<GQLCollectionMediumInsertInput | null>;
  title?: string;
  creatorAccountNumber?: number;
  about?: string;
}

export interface GQLEventUpdateInput {
  topics?: Array<string | null>;
  blockchain_unset?: boolean;
  _id_unset?: boolean;
  message_unset?: boolean;
  _id?: GQLObjectId;
  updatedAt_unset?: boolean;
  blockNumber?: GQLLong;
  createdAt_unset?: boolean;
  status?: string;
  status_unset?: boolean;
  blockchain?: string;
  blockNumber_unset?: boolean;
  message?: GQLEventMessageUpdateInput;
  updatedAt_inc?: number;
  createdAt?: number;
  updatedAt?: number;
  parameters_unset?: boolean;
  topics_unset?: boolean;
  parameters?: GQLEventParameterUpdateInput;
  createdAt_inc?: number;
}

export interface GQLUi_assetInsertInput {
  airtableId?: string;
  createdAt?: number;
  _id?: GQLObjectId;
  assetSubtitle?: string;
  updatedAt?: number;
  assetTitle?: string;
  textLanding?: string;
  assetID?: string;
  image?: string;
  imageLanding?: string;
  managementIDs?: string;
}

export interface GQLTestInsertInput {
  _id?: GQLObjectId;
  crossEndorsement?: GQLTestCrossEndorsementInsertInput;
  temporaryEndorsements?: Array<GQLTestTemporaryEndorsementInsertInput | null>;
}

export interface GQLCollectionDeployedInsertInput {
  hash?: string;
  privacy?: string;
  blockNumber?: GQLLong;
  blockchain?: string;
  type?: string;
  superType?: string;
  supply?: number;
  address?: string;
  creator?: string;
}

export interface GQLEndorsementRaw {
  blockchain?: string;
  cornerNE?: boolean;
  cornerNW?: boolean;
  cornerSE?: boolean;
  cornerSW?: boolean;
  creator?: string;
  expiresAt?: number;
  masterID?: string;
  masterMediaType?: string;
  sealID?: string;
  superType?: string;
  tokenID?: string;
  type?: string;
  value?: string;
}

export interface GQLUserSettingInsertInput {
  defaultWallet?: string;
  language?: string;
  notifiedOfCookies?: boolean;
}

export interface GQLAuctionInsertInput {
  deployed?: GQLAuctionDeployedInsertInput;
  raw?: GQLAuctionRawInsertInput;
  updatedAt?: number;
  _id?: GQLObjectId;
  auctionID?: string;
  createdAt?: number;
}

export interface GQLActionInsertInput {
  _id?: GQLObjectId;
  actionAttributes?: GQLActionActionAttributeInsertInput;
  blockchain?: string;
  createdAt?: number;
  message?: GQLActionMessageInsertInput;
  tokenAttributes?: GQLActionTokenAttributeInsertInput;
  updatedAt?: number;
}

export interface GQLTokenRawInsertInput {
  superType?: string;
  title?: string;
  collectionID?: string;
  height?: string;
  creator?: string;
  type?: string;
  numberOfEditions?: number;
  width?: string;
  owner?: string;
  creatorFees?: string;
  media?: Array<GQLTokenRawMediumInsertInput | null>;
  seriesID?: string;
  usersWhoShared?: Array<number | null>;
  blockchain?: string;
  qualification?: number;
  description?: string;
  hash?: string;
}

export interface GQLSwift_messageParameterUpdateInput {
  showcaseFees_unset?: boolean;
  bidCreator?: string;
  bidCreator_unset?: boolean;
  endTime_unset?: boolean;
  id_unset?: boolean;
  askValue?: string;
  newOwner_unset?: boolean;
  seriesId?: string;
  startTime_unset?: boolean;
  showcaseFees?: string;
  tokenAddress?: string;
  stepBid?: string;
  askValue_unset?: boolean;
  startTime?: string;
  tokenAddress_unset?: boolean;
  buyer?: string;
  newManager?: string;
  auctionCreator_unset?: boolean;
  startBid?: string;
  finalBidValue?: string;
  askCreator?: string;
  newOwner?: string;
  bidValue?: string;
  expirationTime?: string;
  stepBid_unset?: boolean;
  endTime?: string;
  expirationTime_unset?: boolean;
  bidValue_unset?: boolean;
  finalBidValue_unset?: boolean;
  startBid_unset?: boolean;
  seriesId_unset?: boolean;
  newManager_unset?: boolean;
  buyer_unset?: boolean;
  askCreator_unset?: boolean;
  auctionCreator?: string;
  id?: string;
}

export interface GQLEndorsementQueryInput {
  updatedAt_lte?: number;
  endorsementID_exists?: boolean;
  endorsementID_ne?: string;
  createdAt?: number;
  endorsementID_in?: Array<string | null>;
  raw_exists?: boolean;
  createdAt_gte?: number;
  deployed_exists?: boolean;
  _id_gte?: GQLObjectId;
  createdAt_nin?: Array<number | null>;
  updatedAt?: number;
  endorsementID?: string;
  _id?: GQLObjectId;
  _id_gt?: GQLObjectId;
  raw?: GQLEndorsementRawQueryInput;
  _id_exists?: boolean;
  createdAt_lt?: number;
  endorsementID_gte?: string;
  updatedAt_lt?: number;
  _id_nin?: Array<GQLObjectId | null>;
  endorsementID_nin?: Array<string | null>;
  endorsementID_gt?: string;
  endorsementID_lt?: string;
  _id_in?: Array<GQLObjectId | null>;
  updatedAt_exists?: boolean;
  updatedAt_in?: Array<number | null>;
  _id_lt?: GQLObjectId;
  createdAt_lte?: number;
  updatedAt_gte?: number;
  _id_lte?: GQLObjectId;
  createdAt_ne?: number;
  createdAt_exists?: boolean;
  deployed?: GQLEndorsementDeployedQueryInput;
  AND?: Array<GQLEndorsementQueryInput>;
  updatedAt_ne?: number;
  createdAt_gt?: number;
  updatedAt_gt?: number;
  updatedAt_nin?: Array<number | null>;
  OR?: Array<GQLEndorsementQueryInput>;
  _id_ne?: GQLObjectId;
  endorsementID_lte?: string;
  createdAt_in?: Array<number | null>;
}

export interface GQLTokenDeployedStamp {
  tokenID?: string;
}

export interface GQLIntegrationUpdateInput {
  code_unset?: boolean;
  name?: string;
  subType_unset?: boolean;
  type?: string;
  _id_unset?: boolean;
  blockchain?: string;
  subType?: string;
  name_unset?: boolean;
  _id?: GQLObjectId;
  status_unset?: boolean;
  blockchain_unset?: boolean;
  code?: string;
  status?: string;
  type_unset?: boolean;
}

export interface GQLCommission {
  _id?: GQLObjectId;
  blockchain?: string;
  commissionId?: string;
  description?: string;
  type?: string;
  value?: string;
  valueBNB?: string;
}

export interface GQLActionTokenAttribute {
  collectionCreator?: string;
  collectionID?: string;
  creatorFees?: string;
  hash?: string;
  manager?: string;
  maximum?: number;
  newOwner?: string;
  oldOwner?: string;
  owner?: string;
  ownerPublicKey?: string;
  seriesCreator?: string;
  seriesID?: GQLSeries;
  supply?: number;
  tokenCreator?: string;
  tokenID?: string;
}

export interface GQLSeriesRawMediumInsertInput {
  hash?: string;
  ipfsHash?: string;
  role?: string;
  height?: number;
  mimetype?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLSeriesRawUpdateInput {
  creatorFees_unset?: boolean;
  collectionID_unset?: boolean;
  description_unset?: boolean;
  blockchain?: string;
  usersWhoShared?: Array<number | null>;
  numberOfEditions_inc?: number;
  creator_unset?: boolean;
  hash?: string;
  blockchain_unset?: boolean;
  qualification_inc?: number;
  type?: string;
  media_unset?: boolean;
  numberOfEditions_unset?: boolean;
  title_unset?: boolean;
  title?: string;
  media?: Array<GQLSeriesRawMediumUpdateInput | null>;
  collectionID?: string;
  description?: string;
  superType?: string;
  hash_unset?: boolean;
  qualification_unset?: boolean;
  creatorFees?: string;
  numberOfEditions?: number;
  qualification?: number;
  superType_unset?: boolean;
  usersWhoShared_unset?: boolean;
  type_unset?: boolean;
  creator?: string;
}

export interface GQLPaginationUser {
  limit?: number;
  skip?: number;
}

export interface GQLAskDeployedInsertInput {
  tokenAddress?: string;
  values?: Array<GQLAskDeployedValueInsertInput | null>;
  endTime?: number;
  status?: string;
  showcaseFee?: string;
  askAddress?: string;
  askCreator?: string;
  currentAskValue?: string;
  blockchain?: string;
  superType?: string;
  tokenID?: string;
}

export interface GQLCol1LayerUpdateInput {
  images_unset?: boolean;
  layer?: string;
  layer_unset?: boolean;
  points?: Array<GQLCol1LayerPointUpdateInput | null>;
  points_unset?: boolean;
  images?: Array<GQLCol1LayerImageUpdateInput | null>;
}

export interface GQLUi_managementAssetIDRelationInput {
  create?: GQLUi_assetInsertInput;
  link?: string;
}

export interface GQLActionColInsertInput {
  _id?: GQLObjectId;
  actionAttributes?: GQLActionColActionAttributeInsertInput;
  message?: GQLActionColMessageInsertInput;
  tokenAttributes?: GQLActionColTokenAttributeInsertInput;
}

export interface GQLUi_module {
  _id?: GQLObjectId;
  airtableId?: string;
  autoFinish?: number;
  autoStart?: number;
  buttonAction?: string;
  buttonLink?: string;
  buttonName?: string;
  buttonType?: string;
  comment?: string;
  createdAt?: number;
  itemType?: string;
  mainLink?: string;
  managementIDs?: string;
  mode?: string;
  moduleID?: string;
  name?: string;
  page?: string;
  scope?: string;
  specialFeature?: string;
  status?: string;
  timerVisible?: boolean;
  updatedAt?: number;
}

export interface GQLContract_typeQueryInput {
  frontendName_ne?: string;
  parameters_exists?: boolean;
  objectType_lt?: string;
  status_exists?: boolean;
  numberOfLevels_gt?: string;
  status_lte?: string;
  numberOfLevels_ne?: string;
  frontendName_nin?: Array<string | null>;
  numberOfLevels_lte?: string;
  longType_nin?: Array<string | null>;
  OR?: Array<GQLContract_typeQueryInput>;
  abi?: GQLContract_typeAbiQueryInput;
  frontendName_gt?: string;
  longType?: string;
  status_nin?: Array<string | null>;
  numberOfLevels_in?: Array<string | null>;
  longType_exists?: boolean;
  objectType_lte?: string;
  status_gte?: string;
  longType_lte?: string;
  objectType_exists?: boolean;
  frontendName_lt?: string;
  frontendName?: string;
  objectType_in?: Array<string | null>;
  numberOfLevels_exists?: boolean;
  status_ne?: string;
  status_gt?: string;
  parameters?: GQLContract_typeParameterQueryInput;
  numberOfLevels_nin?: Array<string | null>;
  _id?: GQLObjectId;
  objectType_ne?: string;
  frontendName_exists?: boolean;
  numberOfLevels?: string;
  _id_lt?: GQLObjectId;
  AND?: Array<GQLContract_typeQueryInput>;
  objectType_gte?: string;
  hashFields?: GQLContract_typeHashFieldQueryInput;
  collectionDeployAvailable_exists?: boolean;
  numberOfLevels_lt?: string;
  applicableBlockchains?: Array<string | null>;
  collectionDeployAvailable?: boolean;
  _id_gt?: GQLObjectId;
  _id_in?: Array<GQLObjectId | null>;
  frontendName_in?: Array<string | null>;
  longType_lt?: string;
  _id_exists?: boolean;
  objectType_nin?: Array<string | null>;
  _id_gte?: GQLObjectId;
  longType_gte?: string;
  _id_lte?: GQLObjectId;
  _id_nin?: Array<GQLObjectId | null>;
  status_in?: Array<string | null>;
  applicableBlockchains_in?: Array<string | null>;
  objectType?: string;
  status?: string;
  frontendName_lte?: string;
  hashFields_exists?: boolean;
  applicableBlockchains_nin?: Array<string | null>;
  longType_gt?: string;
  _id_ne?: GQLObjectId;
  numberOfLevels_gte?: string;
  frontendName_gte?: string;
  longType_in?: Array<string | null>;
  collectionDeployAvailable_ne?: boolean;
  applicableBlockchains_exists?: boolean;
  abi_exists?: boolean;
  longType_ne?: string;
  status_lt?: string;
  objectType_gt?: string;
}

export enum GQLBlockchainSortByInput {
  NAME_DESC = 'NAME_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  CONTRACTSREPO_ASC = 'CONTRACTSREPO_ASC',
  CONTRACTSREPO_DESC = 'CONTRACTSREPO_DESC',
  NAME_ASC = 'NAME_ASC'
}

export interface GQLSwift_messageQueryInput {
  createdAt_exists?: boolean;
  hash_ne?: string;
  status_in?: Array<string | null>;
  updatedAt_nin?: Array<number | null>;
  createdAt_in?: Array<number | null>;
  updatedAt_exists?: boolean;
  _id_exists?: boolean;
  OR?: Array<GQLSwift_messageQueryInput>;
  parameters?: GQLSwift_messageParameterQueryInput;
  _id_gt?: GQLObjectId;
  updatedAt?: number;
  _id_nin?: Array<GQLObjectId | null>;
  updatedAt_ne?: number;
  createdAt_nin?: Array<number | null>;
  status_lt?: string;
  parameters_exists?: boolean;
  hash_gte?: string;
  createdAt?: number;
  _id_ne?: GQLObjectId;
  status_ne?: string;
  createdAt_lt?: number;
  _id_gte?: GQLObjectId;
  hash_gt?: string;
  hash_lt?: string;
  createdAt_gt?: number;
  status_exists?: boolean;
  hash_in?: Array<string | null>;
  status?: string;
  updatedAt_gte?: number;
  _id_in?: Array<GQLObjectId | null>;
  hash_exists?: boolean;
  message_exists?: boolean;
  _id?: GQLObjectId;
  updatedAt_in?: Array<number | null>;
  _id_lt?: GQLObjectId;
  hash_nin?: Array<string | null>;
  status_nin?: Array<string | null>;
  status_gte?: string;
  message?: GQLSwift_messageMessageQueryInput;
  AND?: Array<GQLSwift_messageQueryInput>;
  _id_lte?: GQLObjectId;
  updatedAt_lte?: number;
  createdAt_lte?: number;
  createdAt_ne?: number;
  updatedAt_lt?: number;
  updatedAt_gt?: number;
  status_lte?: string;
  status_gt?: string;
  createdAt_gte?: number;
  hash?: string;
  hash_lte?: string;
}

export interface GQLSwift_messageParameterQueryInput {
  showcaseFees_exists?: boolean;
  finalBidValue_lt?: string;
  id_lte?: string;
  newOwner_nin?: Array<string | null>;
  newOwner_ne?: string;
  stepBid?: string;
  showcaseFees_lt?: string;
  id_lt?: string;
  buyer_exists?: boolean;
  bidCreator?: string;
  startTime_exists?: boolean;
  newOwner_gte?: string;
  expirationTime_gte?: string;
  AND?: Array<GQLSwift_messageParameterQueryInput>;
  id_exists?: boolean;
  tokenAddress?: string;
  tokenAddress_ne?: string;
  seriesId_gte?: string;
  bidValue_nin?: Array<string | null>;
  seriesId_ne?: string;
  newManager_gt?: string;
  stepBid_in?: Array<string | null>;
  startBid_nin?: Array<string | null>;
  startTime_lte?: string;
  auctionCreator_gt?: string;
  tokenAddress_gte?: string;
  newOwner?: string;
  stepBid_nin?: Array<string | null>;
  newOwner_in?: Array<string | null>;
  startBid_exists?: boolean;
  tokenAddress_gt?: string;
  askCreator_gte?: string;
  showcaseFees_gte?: string;
  endTime_exists?: boolean;
  finalBidValue?: string;
  askValue_nin?: Array<string | null>;
  OR?: Array<GQLSwift_messageParameterQueryInput>;
  bidCreator_in?: Array<string | null>;
  finalBidValue_lte?: string;
  expirationTime_ne?: string;
  bidValue_lt?: string;
  showcaseFees_ne?: string;
  stepBid_gt?: string;
  startTime_ne?: string;
  askCreator_exists?: boolean;
  auctionCreator_in?: Array<string | null>;
  askCreator?: string;
  startBid_gt?: string;
  askValue_lt?: string;
  buyer_gte?: string;
  stepBid_exists?: boolean;
  finalBidValue_ne?: string;
  expirationTime_nin?: Array<string | null>;
  bidCreator_exists?: boolean;
  endTime_gte?: string;
  newManager?: string;
  askValue_lte?: string;
  newManager_ne?: string;
  bidValue?: string;
  bidValue_gte?: string;
  finalBidValue_gt?: string;
  seriesId_exists?: boolean;
  askValue_in?: Array<string | null>;
  buyer?: string;
  id_in?: Array<string | null>;
  bidCreator_nin?: Array<string | null>;
  startBid_in?: Array<string | null>;
  id_gt?: string;
  askCreator_gt?: string;
  newOwner_gt?: string;
  startTime_gt?: string;
  endTime_in?: Array<string | null>;
  newManager_lt?: string;
  buyer_ne?: string;
  auctionCreator?: string;
  bidValue_ne?: string;
  endTime?: string;
  finalBidValue_exists?: boolean;
  stepBid_lt?: string;
  expirationTime_gt?: string;
  bidValue_lte?: string;
  startTime_lt?: string;
  endTime_lte?: string;
  newOwner_lte?: string;
  buyer_lt?: string;
  askValue?: string;
  bidCreator_lte?: string;
  showcaseFees_nin?: Array<string | null>;
  tokenAddress_lte?: string;
  startTime?: string;
  id_gte?: string;
  askValue_gte?: string;
  showcaseFees_lte?: string;
  tokenAddress_exists?: boolean;
  bidValue_exists?: boolean;
  askValue_exists?: boolean;
  seriesId_lt?: string;
  expirationTime?: string;
  newManager_in?: Array<string | null>;
  startBid?: string;
  newOwner_lt?: string;
  askCreator_ne?: string;
  seriesId_gt?: string;
  auctionCreator_exists?: boolean;
  seriesId?: string;
  bidValue_gt?: string;
  startTime_gte?: string;
  seriesId_lte?: string;
  newManager_exists?: boolean;
  auctionCreator_gte?: string;
  buyer_nin?: Array<string | null>;
  startBid_gte?: string;
  auctionCreator_lte?: string;
  bidValue_in?: Array<string | null>;
  startBid_lte?: string;
  tokenAddress_lt?: string;
  finalBidValue_nin?: Array<string | null>;
  bidCreator_lt?: string;
  showcaseFees?: string;
  buyer_gt?: string;
  auctionCreator_lt?: string;
  endTime_nin?: Array<string | null>;
  startTime_in?: Array<string | null>;
  newOwner_exists?: boolean;
  auctionCreator_nin?: Array<string | null>;
  buyer_in?: Array<string | null>;
  expirationTime_lt?: string;
  stepBid_lte?: string;
  bidCreator_gt?: string;
  askCreator_lt?: string;
  endTime_gt?: string;
  expirationTime_exists?: boolean;
  auctionCreator_ne?: string;
  endTime_lt?: string;
  showcaseFees_in?: Array<string | null>;
  id_ne?: string;
  startTime_nin?: Array<string | null>;
  endTime_ne?: string;
  tokenAddress_nin?: Array<string | null>;
  startBid_ne?: string;
  buyer_lte?: string;
  expirationTime_in?: Array<string | null>;
  showcaseFees_gt?: string;
  newManager_gte?: string;
  newManager_nin?: Array<string | null>;
  askCreator_nin?: Array<string | null>;
  bidCreator_gte?: string;
  askCreator_lte?: string;
  askValue_ne?: string;
  id_nin?: Array<string | null>;
  newManager_lte?: string;
  expirationTime_lte?: string;
  seriesId_nin?: Array<string | null>;
  askCreator_in?: Array<string | null>;
  finalBidValue_in?: Array<string | null>;
  id?: string;
  stepBid_gte?: string;
  startBid_lt?: string;
  bidCreator_ne?: string;
  finalBidValue_gte?: string;
  stepBid_ne?: string;
  tokenAddress_in?: Array<string | null>;
  seriesId_in?: Array<string | null>;
  askValue_gt?: string;
}

export interface GQLEndorsement {
  _id?: GQLObjectId;
  createdAt?: number;
  deployed?: GQLEndorsementDeployed;
  endorsementID?: string;
  raw?: GQLEndorsementRaw;
  updatedAt?: number;
}

export interface GQLBlockchainNetworkMain {
  browser?: string;
  endpoint?: string;
}

export interface GQLAuctionDeployedBidQueryInput {
  bidCreator_ne?: string;
  bidCreator_exists?: boolean;
  bidValue_lte?: string;
  bidCreator?: string;
  AND?: Array<GQLAuctionDeployedBidQueryInput>;
  bidStatus_in?: Array<string | null>;
  bidValue_in?: Array<string | null>;
  bidStatus_exists?: boolean;
  OR?: Array<GQLAuctionDeployedBidQueryInput>;
  bidValue_ne?: string;
  bidCreator_in?: Array<string | null>;
  bidStatus_lte?: string;
  bidValue_gt?: string;
  bidValue_nin?: Array<string | null>;
  bidValue_exists?: boolean;
  bidCreator_nin?: Array<string | null>;
  bidCreator_gte?: string;
  bidCreator_lt?: string;
  bidValue?: string;
  bidCreator_lte?: string;
  bidStatus_nin?: Array<string | null>;
  bidStatus_lt?: string;
  bidStatus_ne?: string;
  bidStatus_gte?: string;
  bidStatus_gt?: string;
  bidStatus?: string;
  bidValue_gte?: string;
  bidValue_lt?: string;
  bidCreator_gt?: string;
}

export enum GQLIpfSortByInput {
  MEDIAHASH_ASC = 'MEDIAHASH_ASC',
  MEDIAHASH_DESC = 'MEDIAHASH_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  IPFSHASH_ASC = 'IPFSHASH_ASC',
  IPFSHASH_DESC = 'IPFSHASH_DESC'
}

export interface GQLBidDeployed {
  bidAddress?: string;
  bidCreator?: string;
  bidValue?: string;
  endTime?: number;
  status?: string;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
}

export enum GQLTokenColSortByInput {
  MERGED_DESC = 'MERGED_DESC',
  ADDRESS_DESC = 'ADDRESS_DESC',
  TOKENID_ASC = 'TOKENID_ASC',
  OWNER_ASC = 'OWNER_ASC',
  SERIESID_ASC = 'SERIESID_ASC',
  MERGED_ASC = 'MERGED_ASC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  ADDRESS_ASC = 'ADDRESS_ASC',
  SERIESID_DESC = 'SERIESID_DESC',
  TOKENID_DESC = 'TOKENID_DESC',
  OWNER_DESC = 'OWNER_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLUserSettingUpdateInput {
  language_unset?: boolean;
  notifiedOfCookies?: boolean;
  notifiedOfCookies_unset?: boolean;
  defaultWallet?: string;
  defaultWallet_unset?: boolean;
  language?: string;
}

export interface GQLSubscriptionUpdateInput {
  abiFileUrl?: string;
  blockchain?: string;
  status_unset?: boolean;
  _id_unset?: boolean;
  abiFileUrl_unset?: boolean;
  address?: string;
  superType_unset?: boolean;
  _id?: GQLObjectId;
  blockchain_unset?: boolean;
  address_unset?: boolean;
  status?: string;
  lastBlockRead?: GQLLong;
  superType?: string;
  lastBlockRead_unset?: boolean;
}

export interface GQLEndorsementUpdateInput {
  endorsementID_unset?: boolean;
  updatedAt_unset?: boolean;
  createdAt_unset?: boolean;
  endorsementID?: string;
  _id_unset?: boolean;
  deployed_unset?: boolean;
  updatedAt_inc?: number;
  raw_unset?: boolean;
  createdAt_inc?: number;
  raw?: GQLEndorsementRawUpdateInput;
  updatedAt?: number;
  createdAt?: number;
  _id?: GQLObjectId;
  deployed?: GQLEndorsementDeployedUpdateInput;
}

export interface GQLEventParameterUpdateInput {
  tokenNftId_unset?: boolean;
  price_inc?: number;
  sealNftId_unset?: boolean;
  price?: number;
  expiresAt_unset?: boolean;
  tokenAddress?: string;
  tokenAddress_unset?: boolean;
  sealPossibleCorners?: number;
  sealPossibleCorners_inc?: number;
  tokenNftId_inc?: number;
  sealPossibleCorners_unset?: boolean;
  sealAddress?: string;
  sealNftId_inc?: number;
  masterNftId_inc?: number;
  tokenNftId?: number;
  masterAddress_unset?: boolean;
  expiresAt?: number;
  expiresAt_inc?: number;
  masterNftId_unset?: boolean;
  price_unset?: boolean;
  sealAddress_unset?: boolean;
  masterAddress?: string;
  sealNftId?: number;
  masterNftId?: number;
}

export enum GQLEventSortByInput {
  BLOCKNUMBER_ASC = 'BLOCKNUMBER_ASC',
  BLOCKNUMBER_DESC = 'BLOCKNUMBER_DESC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  _ID_ASC = '_ID_ASC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  STATUS_ASC = 'STATUS_ASC',
  STATUS_DESC = 'STATUS_DESC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLEventMessageQueryInput {
  time_lte?: number;
  parsingTime_lte?: number;
  senderAddress_lt?: string;
  time_exists?: boolean;
  txHash_lte?: string;
  time_gt?: number;
  txHash?: string;
  superType?: string;
  eventName?: string;
  superType_in?: Array<string | null>;
  txHash_nin?: Array<string | null>;
  eventName_lt?: string;
  eventName_exists?: boolean;
  superType_gt?: string;
  senderAddress_lte?: string;
  eventName_lte?: string;
  senderAddress_gt?: string;
  superType_gte?: string;
  parsingTime_lt?: number;
  parsingTime?: number;
  senderAddress_exists?: boolean;
  parsingTime_in?: Array<number | null>;
  superType_exists?: boolean;
  eventName_in?: Array<string | null>;
  parsingTime_gte?: number;
  time_ne?: number;
  parsingTime_ne?: number;
  time_nin?: Array<number | null>;
  time_lt?: number;
  time_in?: Array<number | null>;
  superType_lte?: string;
  AND?: Array<GQLEventMessageQueryInput>;
  superType_nin?: Array<string | null>;
  senderAddress_ne?: string;
  txHash_gt?: string;
  eventName_gte?: string;
  txHash_in?: Array<string | null>;
  eventName_nin?: Array<string | null>;
  parsingTime_nin?: Array<number | null>;
  senderAddress_in?: Array<string | null>;
  txHash_lt?: string;
  eventName_gt?: string;
  senderAddress_gte?: string;
  txHash_ne?: string;
  superType_lt?: string;
  senderAddress?: string;
  superType_ne?: string;
  time_gte?: number;
  eventName_ne?: string;
  txHash_exists?: boolean;
  parsingTime_exists?: boolean;
  txHash_gte?: string;
  OR?: Array<GQLEventMessageQueryInput>;
  parsingTime_gt?: number;
  senderAddress_nin?: Array<string | null>;
  time?: number;
}

export interface GQLUi_asset {
  _id?: GQLObjectId;
  airtableId?: string;
  assetID?: string;
  assetSubtitle?: string;
  assetTitle?: string;
  createdAt?: number;
  image?: string;
  imageLanding?: string;
  managementIDs?: string;
  textLanding?: string;
  updatedAt?: number;
}

export interface GQLTokenDeployedUpdateInput {
  foreverID?: string;
  seal_unset?: boolean;
  ownerObject_unset?: boolean;
  lastSaleTime?: number;
  creatorFees?: string;
  manager_unset?: boolean;
  creator?: string;
  manager?: string;
  lastSalePrice_inc?: number;
  address_unset?: boolean;
  type_unset?: boolean;
  creator_unset?: boolean;
  lastSaleTime_unset?: boolean;
  sealPosition?: string;
  foreverStatus?: string;
  type?: string;
  seriesObject?: GQLTokenDeployedSeriesObjectRelationInput;
  foreverStatus_unset?: boolean;
  superType_unset?: boolean;
  frontStatus_unset?: boolean;
  frontStatus?: string;
  isEndorsed?: boolean;
  blockchain_unset?: boolean;
  seriesID?: GQLTokenDeployedSeriesIDRelationInput;
  foreverID_unset?: boolean;
  hash?: string;
  managerExpirationTime?: number;
  address?: string;
  seriesObject_unset?: boolean;
  owner?: string;
  sealPosition_unset?: boolean;
  creatorObject_unset?: boolean;
  owner_unset?: boolean;
  creatorFees_unset?: boolean;
  managerExpirationTime_unset?: boolean;
  seriesID_unset?: boolean;
  index_unset?: boolean;
  stamps?: Array<GQLTokenDeployedStampUpdateInput | null>;
  blockchain?: string;
  lastSaleTime_inc?: number;
  isEndorsed_unset?: boolean;
  superType?: string;
  collectionID?: string;
  index?: number;
  index_inc?: number;
  creatorObject?: GQLTokenDeployedCreatorObjectRelationInput;
  managerExpirationTime_inc?: number;
  stamps_unset?: boolean;
  ownerObject?: GQLTokenDeployedOwnerObjectRelationInput;
  seal?: string;
  lastSalePrice?: number;
  hash_unset?: boolean;
  collectionID_unset?: boolean;
  lastSalePrice_unset?: boolean;
}

export interface GQLTokenColQueryInput {
  images_in?: Array<GQLTokenColImageQueryInput | null>;
  merged_gte?: string;
  _id?: GQLObjectId;
  address_gt?: string;
  merged_ne?: string;
  _id_in?: Array<GQLObjectId | null>;
  owner_gte?: string;
  owner_lte?: string;
  seriesId_exists?: boolean;
  owner_lt?: string;
  tokenId_ne?: string;
  tokenId_nin?: Array<string | null>;
  createdAt_nin?: Array<number | null>;
  address_in?: Array<string | null>;
  updatedAt_nin?: Array<number | null>;
  seriesId_gte?: string;
  updatedAt_lte?: number;
  address_nin?: Array<string | null>;
  seriesId_ne?: string;
  seriesId_gt?: string;
  OR?: Array<GQLTokenColQueryInput>;
  _id_gte?: GQLObjectId;
  createdAt_lt?: number;
  _id_ne?: GQLObjectId;
  tokenId_exists?: boolean;
  tokenId_lt?: string;
  _id_exists?: boolean;
  createdAt_in?: Array<number | null>;
  tokenId_gte?: string;
  merged_in?: Array<string | null>;
  updatedAt_gt?: number;
  tokenId_lte?: string;
  owner_nin?: Array<string | null>;
  merged_nin?: Array<string | null>;
  address_exists?: boolean;
  _id_nin?: Array<GQLObjectId | null>;
  createdAt_ne?: number;
  merged_exists?: boolean;
  createdAt_gte?: number;
  seriesId_lte?: string;
  _id_lte?: GQLObjectId;
  seriesId_lt?: string;
  updatedAt_ne?: number;
  seriesId_in?: Array<string | null>;
  updatedAt_exists?: boolean;
  images_nin?: Array<GQLTokenColImageQueryInput | null>;
  images?: Array<GQLTokenColImageQueryInput | null>;
  _id_lt?: GQLObjectId;
  address?: string;
  seriesId?: string;
  createdAt?: number;
  createdAt_lte?: number;
  address_ne?: string;
  owner?: string;
  owner_exists?: boolean;
  updatedAt_in?: Array<number | null>;
  updatedAt_lt?: number;
  images_exists?: boolean;
  merged_lte?: string;
  _id_gt?: GQLObjectId;
  owner_gt?: string;
  merged?: string;
  address_lt?: string;
  tokenId_in?: Array<string | null>;
  merged_gt?: string;
  owner_in?: Array<string | null>;
  merged_lt?: string;
  createdAt_gt?: number;
  updatedAt?: number;
  owner_ne?: string;
  seriesId_nin?: Array<string | null>;
  tokenId_gt?: string;
  tokenId?: string;
  address_lte?: string;
  AND?: Array<GQLTokenColQueryInput>;
  createdAt_exists?: boolean;
  address_gte?: string;
  updatedAt_gte?: number;
}

export interface GQLAddress_abi {
  _id?: GQLObjectId;
  address?: string;
  level?: string;
  superType?: string;
}

export interface GQLPaginationLocale {
  skip?: number;
  limit?: number;
}

export interface GQLSessionQueryInput {
  swiftMessageTime_nin?: Array<number | null>;
  swiftMessageTime_in?: Array<number | null>;
  updatedAt_exists?: boolean;
  address_exists?: boolean;
  confirmationHash_gt?: string;
  integrationCode_nin?: Array<string | null>;
  accountNumberObject?: GQLUserQueryInput;
  updatedAt_lt?: number;
  _id_lte?: GQLObjectId;
  address?: string;
  updatedAt?: number;
  address_ne?: string;
  confirmationHash_lt?: string;
  cookiesHash_nin?: Array<string | null>;
  cookiesHash_gte?: string;
  createdAt_nin?: Array<number | null>;
  address_lt?: string;
  cookiesHash_lte?: string;
  integrationCode_ne?: string;
  createdAt_exists?: boolean;
  cookiesHash_exists?: boolean;
  confirmationHash_nin?: Array<string | null>;
  accountNumberObject_exists?: boolean;
  _id_lt?: GQLObjectId;
  cookiesHash_lt?: string;
  _id_in?: Array<GQLObjectId | null>;
  confirmationHash_ne?: string;
  createdAt_gt?: number;
  confirmationHash?: string;
  address_in?: Array<string | null>;
  isExpired?: boolean;
  swiftMessageTime_ne?: number;
  createdAt?: number;
  _id_ne?: GQLObjectId;
  _id_gte?: GQLObjectId;
  confirmationHash_lte?: string;
  confirmationHash_gte?: string;
  createdAt_in?: Array<number | null>;
  swiftMessageTime_gte?: number;
  cookiesHash_gt?: string;
  swiftMessageTime_gt?: number;
  swiftMessageTime_lt?: number;
  address_gte?: string;
  cookiesHash?: string;
  isExpired_exists?: boolean;
  createdAt_ne?: number;
  createdAt_lt?: number;
  confirmationHash_in?: Array<string | null>;
  cookiesHash_ne?: string;
  updatedAt_gte?: number;
  AND?: Array<GQLSessionQueryInput>;
  swiftMessageTime_lte?: number;
  address_lte?: string;
  createdAt_lte?: number;
  isExpired_ne?: boolean;
  _id_exists?: boolean;
  updatedAt_nin?: Array<number | null>;
  swiftMessageTime_exists?: boolean;
  createdAt_gte?: number;
  integrationCode?: string;
  swiftMessageTime?: number;
  updatedAt_ne?: number;
  cookiesHash_in?: Array<string | null>;
  confirmationHash_exists?: boolean;
  integrationCode_gt?: string;
  updatedAt_gt?: number;
  updatedAt_lte?: number;
  address_gt?: string;
  integrationCode_lt?: string;
  _id_gt?: GQLObjectId;
  OR?: Array<GQLSessionQueryInput>;
  _id_nin?: Array<GQLObjectId | null>;
  integrationCode_gte?: string;
  address_nin?: Array<string | null>;
  _id?: GQLObjectId;
  integrationCode_in?: Array<string | null>;
  integrationCode_exists?: boolean;
  integrationCode_lte?: string;
  updatedAt_in?: Array<number | null>;
}

export interface GQLSwift_code {
  _id?: GQLObjectId;
  actionCapture?: string;
  actorField?: string;
  additionalInfo?: string;
  applicableBlockchains?: Array<string | null>;
  applicableContractType?: Array<string | null>;
  code?: string;
  description?: string;
}

export interface GQLContract_typeInsertInput {
  collectionDeployAvailable?: boolean;
  frontendName?: string;
  longType?: string;
  objectType?: string;
  abi?: GQLContract_typeAbiInsertInput;
  applicableBlockchains?: Array<string | null>;
  parameters?: GQLContract_typeParameterInsertInput;
  _id?: GQLObjectId;
  numberOfLevels?: string;
  status?: string;
  hashFields?: GQLContract_typeHashFieldInsertInput;
}

export interface GQLPaginationUiModule {
  skip?: number;
  limit?: number;
}

export interface GQLUserIntegrationUpdateInput {
  priority?: number;
  priority_unset?: boolean;
  priority_inc?: number;
  shadowAddresses?: Array<string | null>;
  shadowAddresses_unset?: boolean;
  name?: string;
  name_unset?: boolean;
}

export interface GQLLikeUpdateInput {
  tokenID?: string;
  tokenID_unset?: boolean;
  userAccountNumber_inc?: number;
  status?: boolean;
  status_unset?: boolean;
  seriesID_unset?: boolean;
  userAccountNumber_unset?: boolean;
  _id?: GQLObjectId;
  _id_unset?: boolean;
  userAccountNumber?: number;
  seriesID?: string;
}

export interface GQLContract_typeHashFieldMediumInsertInput {
  hash?: string;
  height?: string;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: string;
  width?: string;
}

export interface GQLSwift_messageParameter {
  askCreator?: string;
  askValue?: string;
  auctionCreator?: string;
  bidCreator?: string;
  bidValue?: string;
  buyer?: string;
  endTime?: string;
  expirationTime?: string;
  finalBidValue?: string;
  id?: string;
  newManager?: string;
  newOwner?: string;
  seriesId?: string;
  showcaseFees?: string;
  startBid?: string;
  startTime?: string;
  stepBid?: string;
  tokenAddress?: string;
}

export interface GQLSessionInsertInput {
  accountNumberObject?: GQLSessionAccountNumberObjectRelationInput;
  _id?: GQLObjectId;
  address?: string;
  confirmationHash?: string;
  cookiesHash?: string;
  swiftMessageTime?: number;
  updatedAt?: number;
  createdAt?: number;
  integrationCode?: string;
  isExpired?: boolean;
}

export interface GQLBlockchainInsertInput {
  _id?: GQLObjectId;
  contractsRepo?: string;
  name?: string;
  network?: GQLBlockchainNetworkInsertInput;
}

export interface GQLContract_typeParameterUpdateInput {
  hashLevel?: string;
  hashLevel_unset?: boolean;
  likesLevel?: string;
  likesLevel_unset?: boolean;
  sharesLevel?: string;
  sharesLevel_unset?: boolean;
}

export interface GQLPaginationUiAsset {
  skip?: number;
  limit?: number;
}

export interface GQLTokenQueryInput {
  updatedAt_in?: Array<number | null>;
  createdAt?: number;
  tokenID_exists?: boolean;
  updatedAt_gt?: number;
  deployed_exists?: boolean;
  updatedAt_ne?: number;
  _id_lte?: GQLObjectId;
  tokenID?: string;
  createdAt_gte?: number;
  updatedAt_nin?: Array<number | null>;
  _id_gt?: GQLObjectId;
  _id_gte?: GQLObjectId;
  createdAt_exists?: boolean;
  createdAt_lt?: number;
  tokenID_ne?: string;
  tokenID_gt?: string;
  _id?: GQLObjectId;
  raw_exists?: boolean;
  deployed?: GQLTokenDeployedQueryInput;
  _id_nin?: Array<GQLObjectId | null>;
  AND?: Array<GQLTokenQueryInput>;
  tokenID_lt?: string;
  updatedAt_lte?: number;
  createdAt_nin?: Array<number | null>;
  updatedAt?: number;
  updatedAt_gte?: number;
  _id_exists?: boolean;
  _id_ne?: GQLObjectId;
  tokenID_gte?: string;
  createdAt_lte?: number;
  createdAt_ne?: number;
  createdAt_gt?: number;
  updatedAt_lt?: number;
  tokenID_nin?: Array<string | null>;
  updatedAt_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  tokenID_in?: Array<string | null>;
  tokenID_lte?: string;
  raw?: GQLTokenRawQueryInput;
  OR?: Array<GQLTokenQueryInput>;
  createdAt_in?: Array<number | null>;
  _id_lt?: GQLObjectId;
}

export interface GQLTriggerInsertInput {
  _id?: GQLObjectId;
  name?: string;
  lastDate?: number;
}

export interface GQLEventMessageUpdateInput {
  txHash?: string;
  senderAddress?: string;
  txHash_unset?: boolean;
  senderAddress_unset?: boolean;
  superType_unset?: boolean;
  eventName?: string;
  parsingTime_inc?: number;
  superType?: string;
  time?: number;
  parsingTime_unset?: boolean;
  eventName_unset?: boolean;
  time_inc?: number;
  time_unset?: boolean;
  parsingTime?: number;
}

export interface GQLCol1LayerPointQueryInput {
  hash_nin?: Array<string | null>;
  point_nin?: Array<number | null>;
  hash_gte?: string;
  point_lte?: number;
  hash_ne?: string;
  point_gte?: number;
  AND?: Array<GQLCol1LayerPointQueryInput>;
  point_exists?: boolean;
  point_ne?: number;
  hash_lt?: string;
  hash?: string;
  point_gt?: number;
  hash_lte?: string;
  hash_gt?: string;
  point_lt?: number;
  point_in?: Array<number | null>;
  OR?: Array<GQLCol1LayerPointQueryInput>;
  hash_in?: Array<string | null>;
  hash_exists?: boolean;
  point?: number;
}

export interface GQLNetwork {
  _id?: GQLObjectId;
  integration?: string;
  name?: string;
  type?: string;
}

export interface GQLActionMessage {
  actionCode?: GQLSwift_code;
  hash?: string;
  resolution?: string;
  senderAddress?: string;
  senderID?: string;
  superType?: string;
  time?: number;
}

export interface GQLTrigger {
  _id?: GQLObjectId;
  lastDate?: number;
  name?: string;
}

export interface GQLActionMessageActionCodeRelationInput {
  create?: GQLSwift_codeInsertInput;
  link?: string;
}

export interface GQLQuery {
  action?: GQLAction;
  actionCol?: GQLActionCol;
  actionCols: Array<GQLActionCol | null>;
  actionCount?: number;
  actions: Array<GQLAction | null>;
  address_abi?: GQLAddress_abi;
  address_abis: Array<GQLAddress_abi | null>;
  ask?: GQLAsk;
  asks: Array<GQLAsk | null>;
  auction?: GQLAuction;
  auctions: Array<GQLAuction | null>;
  bid?: GQLBid;
  bids: Array<GQLBid | null>;
  blockchain?: GQLBlockchain;
  blockchains: Array<GQLBlockchain | null>;
  col1?: GQLCol1;
  col1s: Array<GQLCol1 | null>;
  collection?: GQLCollection;
  collectionCount?: number;
  collections: Array<GQLCollection | null>;
  commission?: GQLCommission;
  commissions: Array<GQLCommission | null>;
  contract?: GQLContract;
  contract_type?: GQLContract_type;
  contract_types: Array<GQLContract_type | null>;
  contracts: Array<GQLContract | null>;
  dailies: Array<GQLDaily | null>;
  daily?: GQLDaily;
  distinctTokensProps?: Array<string | null>;
  endorsement?: GQLEndorsement;
  endorsements: Array<GQLEndorsement | null>;
  event?: GQLEvent;
  events: Array<GQLEvent | null>;
  format?: GQLFormat;
  formats: Array<GQLFormat | null>;
  getSession?: GQLSession;
  getSessions?: Array<GQLSession | null>;
  hourlies: Array<GQLHourly | null>;
  hourly?: GQLHourly;
  integration?: GQLIntegration;
  integrations: Array<GQLIntegration | null>;
  ipf?: GQLIpf;
  ipfs: Array<GQLIpf | null>;
  like?: GQLLike;
  likes: Array<GQLLike | null>;
  locale?: GQLLocale;
  locales: Array<GQLLocale | null>;
  module?: GQLModule;
  modules: Array<GQLModule | null>;
  network?: GQLNetwork;
  networks: Array<GQLNetwork | null>;
  new_session?: GQLNew_session;
  new_sessions: Array<GQLNew_session | null>;
  opendata: Array<GQLOpendatum | null>;
  opendatum?: GQLOpendatum;
  paginationAction?: Array<GQLAction | null>;
  paginationCollection?: Array<GQLCollection | null>;
  paginationLocale?: Array<GQLLocale | null>;
  paginationModule?: Array<GQLModule | null>;
  paginationUiAsset?: Array<GQLUi_asset | null>;
  paginationUiChart?: Array<GQLUi_chart | null>;
  paginationUiManagement?: Array<GQLUi_management | null>;
  paginationUiModule?: Array<GQLUi_module | null>;
  paginationUser?: Array<GQLUser | null>;
  primary_json?: GQLPrimary_json;
  primary_jsons: Array<GQLPrimary_json | null>;
  royalties: Array<GQLRoyalty | null>;
  royalty?: GQLRoyalty;
  series?: GQLSeries;
  seriesCount?: number;
  seriesPagination?: Array<GQLSeries | null>;
  seriess: Array<GQLSeries | null>;
  session?: GQLSession;
  sessions: Array<GQLSession | null>;
  subscription?: GQLSubscription;
  subscriptions: Array<GQLSubscription | null>;
  swift_code?: GQLSwift_code;
  swift_codes: Array<GQLSwift_code | null>;
  swift_message?: GQLSwift_message;
  swift_messages: Array<GQLSwift_message | null>;
  test?: GQLTest;
  tests: Array<GQLTest | null>;
  token?: GQLToken;
  tokenCol?: GQLTokenCol;
  tokenCols: Array<GQLTokenCol | null>;
  tokenCount?: number;
  tokenPagination?: Array<GQLToken | null>;
  tokens: Array<GQLToken | null>;
  trigger?: GQLTrigger;
  triggers: Array<GQLTrigger | null>;
  ui_asset?: GQLUi_asset;
  ui_assets: Array<GQLUi_asset | null>;
  ui_chart?: GQLUi_chart;
  ui_charts: Array<GQLUi_chart | null>;
  ui_management?: GQLUi_management;
  ui_managements: Array<GQLUi_management | null>;
  ui_module?: GQLUi_module;
  ui_modules: Array<GQLUi_module | null>;
  user?: GQLUser;
  users: Array<GQLUser | null>;
}

export enum GQLModuleSortByInput {
  PAGE_DESC = 'PAGE_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  PAGE_ASC = 'PAGE_ASC',
  NAMETYPE_ASC = 'NAMETYPE_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  MODULE_ASC = 'MODULE_ASC',
  MODULE_DESC = 'MODULE_DESC',
  NAMETYPE_DESC = 'NAMETYPE_DESC',
  TYPE_ASC = 'TYPE_ASC',
  _ID_ASC = '_ID_ASC',
  TYPE_DESC = 'TYPE_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_DESC = '_ID_DESC'
}

export interface GQLUserSettingQueryInput {
  language?: string;
  language_gt?: string;
  language_lte?: string;
  notifiedOfCookies_exists?: boolean;
  notifiedOfCookies_ne?: boolean;
  defaultWallet_lt?: string;
  defaultWallet?: string;
  language_exists?: boolean;
  defaultWallet_exists?: boolean;
  notifiedOfCookies?: boolean;
  defaultWallet_nin?: Array<string | null>;
  OR?: Array<GQLUserSettingQueryInput>;
  AND?: Array<GQLUserSettingQueryInput>;
  language_ne?: string;
  language_nin?: Array<string | null>;
  language_in?: Array<string | null>;
  defaultWallet_gt?: string;
  defaultWallet_in?: Array<string | null>;
  language_gte?: string;
  language_lt?: string;
  defaultWallet_ne?: string;
  defaultWallet_gte?: string;
  defaultWallet_lte?: string;
}

export interface GQLPrimary_jsonUpdateInput {
  createdAt_inc?: number;
  createdAt_unset?: boolean;
  hash_unset?: boolean;
  _id?: GQLObjectId;
  hash?: string;
  _id_unset?: boolean;
  createdAt?: number;
  jsonString?: string;
  jsonString_unset?: boolean;
}

export interface GQLUserMergedAccountInsertInput {
  status?: string;
  accountNumber?: number;
}

export interface GQLSeriesInsertInput {
  updatedAt?: number;
  _id?: GQLObjectId;
  createdAt?: number;
  deployed?: GQLSeriesDeployedInsertInput;
  raw?: GQLSeriesRawInsertInput;
  seriesID?: string;
}

export interface GQLEndorsementDeployedQueryInput {
  blockchain?: string;
  corner_in?: Array<string | null>;
  masterMediaType?: string;
  masterMediaType_gt?: string;
  corner_gt?: string;
  type_in?: Array<string | null>;
  superType_in?: Array<string | null>;
  masterID_gt?: string;
  masterID_gte?: string;
  type_lte?: string;
  creator_exists?: boolean;
  requestedCorners_nin?: Array<number | null>;
  value_nin?: Array<string | null>;
  tokenID_exists?: boolean;
  superType_gte?: string;
  tokenID_gt?: string;
  sealID_exists?: boolean;
  tokenID_in?: Array<string | null>;
  superType_exists?: boolean;
  expiresAt_exists?: boolean;
  expiresAt?: number;
  creator?: string;
  requestedCorners_lte?: number;
  status_gte?: string;
  sealID_ne?: string;
  value_in?: Array<string | null>;
  creator_in?: Array<string | null>;
  value?: string;
  masterID_exists?: boolean;
  masterMediaType_in?: Array<string | null>;
  blockchain_lte?: string;
  corner_exists?: boolean;
  superType_lte?: string;
  superType_nin?: Array<string | null>;
  superType?: string;
  masterID_ne?: string;
  type?: string;
  tokenID?: string;
  tokenID_lte?: string;
  corner_nin?: Array<string | null>;
  tokenID_lt?: string;
  AND?: Array<GQLEndorsementDeployedQueryInput>;
  sealID_gt?: string;
  value_lt?: string;
  status_nin?: Array<string | null>;
  creator_lte?: string;
  masterMediaType_lte?: string;
  superType_ne?: string;
  corner_lte?: string;
  masterID_lt?: string;
  requestedCorners?: number;
  tokenID_ne?: string;
  sealID_gte?: string;
  blockchain_ne?: string;
  blockchain_in?: Array<string | null>;
  sealID_lte?: string;
  OR?: Array<GQLEndorsementDeployedQueryInput>;
  expiresAt_in?: Array<number | null>;
  requestedCorners_ne?: number;
  requestedCorners_in?: Array<number | null>;
  creator_nin?: Array<string | null>;
  sealID?: string;
  corner?: string;
  masterID_in?: Array<string | null>;
  type_gte?: string;
  requestedCorners_gte?: number;
  value_gte?: string;
  masterMediaType_ne?: string;
  status?: string;
  status_gt?: string;
  type_ne?: string;
  blockchain_lt?: string;
  corner_lt?: string;
  expiresAt_ne?: number;
  blockchain_gt?: string;
  sealID_nin?: Array<string | null>;
  type_nin?: Array<string | null>;
  tokenID_gte?: string;
  corner_ne?: string;
  type_exists?: boolean;
  corner_gte?: string;
  creator_lt?: string;
  masterID_nin?: Array<string | null>;
  masterID?: string;
  creator_gte?: string;
  expiresAt_gt?: number;
  status_lt?: string;
  sealID_lt?: string;
  value_gt?: string;
  blockchain_nin?: Array<string | null>;
  blockchain_exists?: boolean;
  requestedCorners_gt?: number;
  type_gt?: string;
  creator_gt?: string;
  value_exists?: boolean;
  masterMediaType_gte?: string;
  creator_ne?: string;
  masterMediaType_exists?: boolean;
  expiresAt_lt?: number;
  superType_gt?: string;
  sealID_in?: Array<string | null>;
  masterID_lte?: string;
  status_in?: Array<string | null>;
  tokenID_nin?: Array<string | null>;
  requestedCorners_lt?: number;
  value_ne?: string;
  expiresAt_gte?: number;
  value_lte?: string;
  superType_lt?: string;
  status_exists?: boolean;
  status_ne?: string;
  expiresAt_lte?: number;
  blockchain_gte?: string;
  type_lt?: string;
  masterMediaType_nin?: Array<string | null>;
  status_lte?: string;
  masterMediaType_lt?: string;
  requestedCorners_exists?: boolean;
  expiresAt_nin?: Array<number | null>;
}

export interface GQLGetSessionsIn {
  confirmationHash?: string;
  cookiesHash?: Array<string | null>;
  swiftMessageTime?: number;
}

export interface GQLContract_type {
  _id?: GQLObjectId;
  abi?: GQLContract_typeAbi;
  applicableBlockchains?: Array<string | null>;
  collectionDeployAvailable?: boolean;
  frontendName?: string;
  hashFields?: GQLContract_typeHashField;
  longType?: string;
  numberOfLevels?: string;
  objectType?: string;
  parameters?: GQLContract_typeParameter;
  status?: string;
}

export interface GQLBlockchainNetwork {
  main?: GQLBlockchainNetworkMain;
  test?: GQLBlockchainNetworkTest;
}

export interface GQLBlockchainNetworkTest {
  browser?: string;
  endpoint?: string;
}

export interface GQLSeriesCount {
  creator?: string;
  created_lt?: number;
}

export interface GQLTokenDeployedStampInsertInput {
  tokenID?: string;
}

export type GQLObjectId = any;

export interface GQLContractQueryInput {
  status_in?: Array<string | null>;
  abiFile_nin?: Array<string | null>;
  longType_lt?: string;
  longType_in?: Array<string | null>;
  superType_gte?: string;
  abiPath_in?: Array<string | null>;
  address?: string;
  _id_lt?: GQLObjectId;
  AND?: Array<GQLContractQueryInput>;
  status_lt?: string;
  network_lte?: string;
  network_exists?: boolean;
  privacy_lt?: string;
  privacy_lte?: string;
  longType?: string;
  environment_lte?: string;
  _id_in?: Array<GQLObjectId | null>;
  _id_nin?: Array<GQLObjectId | null>;
  abiFile_ne?: string;
  privacy_ne?: string;
  longType_exists?: boolean;
  abiFile_lt?: string;
  _id?: GQLObjectId;
  longType_gt?: string;
  _id_gte?: GQLObjectId;
  status_gte?: string;
  environment_nin?: Array<string | null>;
  abiFile_exists?: boolean;
  status_gt?: string;
  status_nin?: Array<string | null>;
  privacy_in?: Array<string | null>;
  privacy_gte?: string;
  blockchain_nin?: Array<string | null>;
  abiFile?: string;
  network_gt?: string;
  superType?: string;
  abiPath_lt?: string;
  address_nin?: Array<string | null>;
  address_lt?: string;
  _id_gt?: GQLObjectId;
  privacy?: string;
  longType_lte?: string;
  privacy_exists?: boolean;
  environment_gt?: string;
  abiFile_gte?: string;
  status?: string;
  abiPath_lte?: string;
  longType_nin?: Array<string | null>;
  network?: string;
  network_nin?: Array<string | null>;
  address_ne?: string;
  superType_ne?: string;
  blockchain_gte?: string;
  abiFile_in?: Array<string | null>;
  superType_lt?: string;
  address_lte?: string;
  status_exists?: boolean;
  superType_nin?: Array<string | null>;
  abiPath_gt?: string;
  blockchain_gt?: string;
  privacy_gt?: string;
  abiFile_lte?: string;
  abiPath_ne?: string;
  address_gte?: string;
  network_in?: Array<string | null>;
  network_lt?: string;
  superType_in?: Array<string | null>;
  network_ne?: string;
  abiPath?: string;
  _id_exists?: boolean;
  blockchain?: string;
  longType_ne?: string;
  abiFile_gt?: string;
  abiPath_gte?: string;
  address_exists?: boolean;
  status_ne?: string;
  blockchain_in?: Array<string | null>;
  privacy_nin?: Array<string | null>;
  superType_gt?: string;
  abiPath_nin?: Array<string | null>;
  address_in?: Array<string | null>;
  environment_in?: Array<string | null>;
  abiPath_exists?: boolean;
  network_gte?: string;
  environment_exists?: boolean;
  OR?: Array<GQLContractQueryInput>;
  superType_exists?: boolean;
  environment_ne?: string;
  superType_lte?: string;
  address_gt?: string;
  environment_gte?: string;
  blockchain_lt?: string;
  blockchain_lte?: string;
  _id_ne?: GQLObjectId;
  status_lte?: string;
  blockchain_ne?: string;
  blockchain_exists?: boolean;
  environment_lt?: string;
  longType_gte?: string;
  _id_lte?: GQLObjectId;
  environment?: string;
}

export interface GQLEventQueryInput {
  blockNumber_in?: Array<GQLLong | null>;
  message_exists?: boolean;
  status_ne?: string;
  blockchain_gte?: string;
  updatedAt?: number;
  updatedAt_in?: Array<number | null>;
  blockchain_lte?: string;
  blockchain_ne?: string;
  _id_in?: Array<GQLObjectId | null>;
  status_lt?: string;
  AND?: Array<GQLEventQueryInput>;
  blockNumber_lte?: GQLLong;
  blockchain_gt?: string;
  blockchain?: string;
  status_gt?: string;
  updatedAt_lte?: number;
  createdAt_nin?: Array<number | null>;
  message?: GQLEventMessageQueryInput;
  _id_ne?: GQLObjectId;
  blockchain_in?: Array<string | null>;
  blockNumber_nin?: Array<GQLLong | null>;
  _id_gte?: GQLObjectId;
  blockchain_exists?: boolean;
  blockNumber_lt?: GQLLong;
  _id_lt?: GQLObjectId;
  parameters?: GQLEventParameterQueryInput;
  status_in?: Array<string | null>;
  _id_lte?: GQLObjectId;
  _id_gt?: GQLObjectId;
  blockNumber_ne?: GQLLong;
  _id_nin?: Array<GQLObjectId | null>;
  updatedAt_nin?: Array<number | null>;
  OR?: Array<GQLEventQueryInput>;
  createdAt_lte?: number;
  createdAt_in?: Array<number | null>;
  status_nin?: Array<string | null>;
  topics?: Array<string | null>;
  updatedAt_ne?: number;
  updatedAt_exists?: boolean;
  createdAt_gte?: number;
  topics_in?: Array<string | null>;
  blockchain_lt?: string;
  blockchain_nin?: Array<string | null>;
  topics_nin?: Array<string | null>;
  createdAt_ne?: number;
  parameters_exists?: boolean;
  status_gte?: string;
  updatedAt_gt?: number;
  createdAt?: number;
  topics_exists?: boolean;
  status_lte?: string;
  blockNumber_exists?: boolean;
  status_exists?: boolean;
  blockNumber_gt?: GQLLong;
  createdAt_exists?: boolean;
  createdAt_gt?: number;
  updatedAt_lt?: number;
  _id_exists?: boolean;
  blockNumber?: GQLLong;
  status?: string;
  createdAt_lt?: number;
  blockNumber_gte?: GQLLong;
  updatedAt_gte?: number;
  _id?: GQLObjectId;
}

export interface GQLEndorsementDeployedInsertInput {
  creator?: string;
  masterID?: string;
  blockchain?: string;
  requestedCorners?: number;
  expiresAt?: number;
  sealID?: string;
  superType?: string;
  corner?: string;
  status?: string;
  tokenID?: string;
  masterMediaType?: string;
  type?: string;
  value?: string;
}

export interface GQLActionTokenAttributeQueryInput {
  hash_in?: Array<string | null>;
  maximum_lt?: number;
  owner_gte?: string;
  tokenCreator_nin?: Array<string | null>;
  seriesCreator_exists?: boolean;
  collectionCreator_nin?: Array<string | null>;
  newOwner_gt?: string;
  collectionCreator_in?: Array<string | null>;
  newOwner_in?: Array<string | null>;
  ownerPublicKey_lt?: string;
  tokenCreator_ne?: string;
  supply_gt?: number;
  supply_gte?: number;
  newOwner_ne?: string;
  oldOwner_exists?: boolean;
  manager_nin?: Array<string | null>;
  ownerPublicKey_ne?: string;
  collectionID_gt?: string;
  collectionID_exists?: boolean;
  collectionCreator_gte?: string;
  supply_in?: Array<number | null>;
  collectionCreator?: string;
  creatorFees?: string;
  creatorFees_gt?: string;
  oldOwner_lte?: string;
  supply_lt?: number;
  newOwner_exists?: boolean;
  supply_ne?: number;
  tokenID_exists?: boolean;
  collectionCreator_gt?: string;
  collectionID_lt?: string;
  seriesCreator_nin?: Array<string | null>;
  oldOwner_lt?: string;
  ownerPublicKey_lte?: string;
  tokenCreator_lt?: string;
  hash?: string;
  hash_nin?: Array<string | null>;
  tokenCreator?: string;
  owner_in?: Array<string | null>;
  newOwner_gte?: string;
  maximum_exists?: boolean;
  creatorFees_gte?: string;
  manager_exists?: boolean;
  owner_gt?: string;
  hash_ne?: string;
  supply_exists?: boolean;
  manager?: string;
  OR?: Array<GQLActionTokenAttributeQueryInput>;
  seriesCreator_gt?: string;
  newOwner_lt?: string;
  ownerPublicKey_nin?: Array<string | null>;
  collectionCreator_lte?: string;
  maximum?: number;
  owner_lte?: string;
  maximum_ne?: number;
  tokenID_lt?: string;
  tokenCreator_gte?: string;
  supply?: number;
  manager_in?: Array<string | null>;
  newOwner_lte?: string;
  AND?: Array<GQLActionTokenAttributeQueryInput>;
  seriesCreator_in?: Array<string | null>;
  ownerPublicKey_gt?: string;
  seriesCreator?: string;
  ownerPublicKey_in?: Array<string | null>;
  seriesCreator_ne?: string;
  creatorFees_lt?: string;
  supply_lte?: number;
  manager_ne?: string;
  collectionID?: string;
  hash_gt?: string;
  owner_ne?: string;
  seriesID?: GQLSeriesQueryInput;
  tokenID_nin?: Array<string | null>;
  owner?: string;
  tokenID_gte?: string;
  creatorFees_ne?: string;
  oldOwner_ne?: string;
  tokenCreator_in?: Array<string | null>;
  owner_exists?: boolean;
  supply_nin?: Array<number | null>;
  creatorFees_lte?: string;
  oldOwner_in?: Array<string | null>;
  collectionID_lte?: string;
  owner_lt?: string;
  ownerPublicKey_exists?: boolean;
  maximum_in?: Array<number | null>;
  collectionID_ne?: string;
  seriesID_exists?: boolean;
  oldOwner_gt?: string;
  collectionCreator_lt?: string;
  tokenCreator_exists?: boolean;
  tokenCreator_gt?: string;
  creatorFees_in?: Array<string | null>;
  newOwner?: string;
  tokenID_lte?: string;
  hash_lt?: string;
  manager_gt?: string;
  collectionID_in?: Array<string | null>;
  manager_gte?: string;
  creatorFees_exists?: boolean;
  maximum_gt?: number;
  maximum_nin?: Array<number | null>;
  tokenID_gt?: string;
  seriesCreator_lt?: string;
  creatorFees_nin?: Array<string | null>;
  oldOwner?: string;
  tokenID_ne?: string;
  collectionCreator_ne?: string;
  collectionID_nin?: Array<string | null>;
  tokenCreator_lte?: string;
  ownerPublicKey?: string;
  collectionCreator_exists?: boolean;
  collectionID_gte?: string;
  seriesCreator_gte?: string;
  oldOwner_gte?: string;
  manager_lt?: string;
  newOwner_nin?: Array<string | null>;
  hash_lte?: string;
  owner_nin?: Array<string | null>;
  tokenID?: string;
  hash_exists?: boolean;
  tokenID_in?: Array<string | null>;
  maximum_lte?: number;
  hash_gte?: string;
  seriesCreator_lte?: string;
  ownerPublicKey_gte?: string;
  oldOwner_nin?: Array<string | null>;
  maximum_gte?: number;
  manager_lte?: string;
}

export interface GQLOpendatumPermissionUpdateInput {
  root?: string;
  root_unset?: boolean;
  functions?: Array<string | null>;
  functions_unset?: boolean;
}

export interface GQLRoyaltyUpdateInput {
  _id?: GQLObjectId;
  upperValue?: number;
  count?: number;
  lowerValue_inc?: number;
  percentage?: number;
  lowerValue_unset?: boolean;
  count_inc?: number;
  count_unset?: boolean;
  lowerValue?: number;
  _id_unset?: boolean;
  upperValue_inc?: number;
  percentage_inc?: number;
  upperValue_unset?: boolean;
  percentage_unset?: boolean;
}

export interface GQLActionMessageInsertInput {
  hash?: string;
  superType?: string;
  time?: number;
  actionCode?: GQLActionMessageActionCodeRelationInput;
  resolution?: string;
  senderAddress?: string;
  senderID?: string;
}

export interface GQLEndorsementInsertInput {
  updatedAt?: number;
  _id?: GQLObjectId;
  createdAt?: number;
  deployed?: GQLEndorsementDeployedInsertInput;
  endorsementID?: string;
  raw?: GQLEndorsementRawInsertInput;
}

export interface GQLTokenColImage {
  hash?: string;
  height?: number;
  mimetype?: string;
  rarity?: number;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLUserIntegration {
  name?: string;
  priority?: number;
  shadowAddresses?: Array<string | null>;
}

export interface GQLUserSetting {
  defaultWallet?: string;
  language?: string;
  notifiedOfCookies?: boolean;
}

export interface GQLIpfInsertInput {
  _id?: GQLObjectId;
  createdAt?: number;
  ipfsHash?: string;
  mediaHash?: string;
}

export interface GQLBidRawUpdateInput {
  endTime_unset?: boolean;
  superType_unset?: boolean;
  bidCreator?: string;
  superType?: string;
  tokenAddress_unset?: boolean;
  bidValue_unset?: boolean;
  endTime_inc?: number;
  bidValue?: string;
  endTime?: number;
  tokenAddress?: string;
  tokenID_unset?: boolean;
  tokenID?: string;
  bidCreator_unset?: boolean;
}

export enum GQLCommissionSortByInput {
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  COMMISSIONID_ASC = 'COMMISSIONID_ASC',
  COMMISSIONID_DESC = 'COMMISSIONID_DESC',
  VALUE_DESC = 'VALUE_DESC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  TYPE_DESC = 'TYPE_DESC',
  VALUEBNB_DESC = 'VALUEBNB_DESC',
  VALUEBNB_ASC = 'VALUEBNB_ASC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  DESCRIPTION_ASC = 'DESCRIPTION_ASC',
  DESCRIPTION_DESC = 'DESCRIPTION_DESC',
  TYPE_ASC = 'TYPE_ASC',
  VALUE_ASC = 'VALUE_ASC'
}

export interface GQLActionActionAttribute {
  actionCapture?: string;
  actionStatus?: string;
  askCreator?: string;
  askEndTime?: number;
  askValue?: string;
  auctionCreator?: string;
  auctionEndTime?: number;
  auctionStartTime?: number;
  bidCreator?: string;
  bidEndTime?: number;
  bidStep?: string;
  bidValue?: string;
  endorsementCreator?: string;
  finalBidValue?: string;
  managerExpirationTime?: number;
  managerSuperType?: string;
  minimalBid?: string;
  releasedBidOwner?: string;
  releasedBidValue?: string;
  sealCreator?: string;
  showcaseFee?: string;
  submittedBidOwner?: string;
  submittedBidValue?: string;
  usdValue?: number;
}

export interface GQLFormatInsertInput {
  _id?: GQLObjectId;
  formatName?: string;
  height?: number;
  width?: number;
}

export interface GQLTokenRaw {
  blockchain?: string;
  collectionID?: string;
  creator?: string;
  creatorFees?: string;
  description?: string;
  hash?: string;
  height?: string;
  media?: Array<GQLTokenRawMedium | null>;
  numberOfEditions?: number;
  owner?: string;
  qualification?: number;
  seriesID?: string;
  superType?: string;
  title?: string;
  type?: string;
  usersWhoShared?: Array<number | null>;
  width?: string;
}

export interface GQLBlockchainUpdateInput {
  _id_unset?: boolean;
  contractsRepo?: string;
  contractsRepo_unset?: boolean;
  name?: string;
  name_unset?: boolean;
  network?: GQLBlockchainNetworkUpdateInput;
  network_unset?: boolean;
  _id?: GQLObjectId;
}

export interface GQLAuctionRaw {
  auctionCreator?: string;
  bidStep?: string;
  bids?: Array<GQLAuctionRawBid | null>;
  endTime?: number;
  showcaseFee?: string;
  startBid?: string;
  startTime?: number;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
}

export interface GQLActionActionAttributeQueryInput {
  bidStep_exists?: boolean;
  auctionCreator_gte?: string;
  askValue_gte?: string;
  bidStep?: string;
  askEndTime_gte?: number;
  showcaseFee_in?: Array<string | null>;
  auctionEndTime_ne?: number;
  submittedBidValue_in?: Array<string | null>;
  releasedBidOwner_exists?: boolean;
  bidEndTime_nin?: Array<number | null>;
  askEndTime_ne?: number;
  releasedBidValue_nin?: Array<string | null>;
  auctionCreator_lte?: string;
  submittedBidOwner_ne?: string;
  auctionStartTime_gte?: number;
  askEndTime_gt?: number;
  sealCreator_exists?: boolean;
  submittedBidOwner_gte?: string;
  actionCapture_in?: Array<string | null>;
  auctionCreator?: string;
  auctionStartTime_nin?: Array<number | null>;
  finalBidValue_ne?: string;
  bidValue?: string;
  showcaseFee_exists?: boolean;
  askEndTime?: number;
  auctionEndTime_nin?: Array<number | null>;
  bidEndTime_exists?: boolean;
  releasedBidValue_in?: Array<string | null>;
  managerExpirationTime_lt?: number;
  submittedBidOwner?: string;
  releasedBidOwner_in?: Array<string | null>;
  submittedBidValue_lt?: string;
  askValue_ne?: string;
  actionCapture_lte?: string;
  showcaseFee_gte?: string;
  managerExpirationTime_gte?: number;
  usdValue_exists?: boolean;
  actionStatus_nin?: Array<string | null>;
  releasedBidValue_exists?: boolean;
  bidEndTime_gt?: number;
  sealCreator_lt?: string;
  endorsementCreator_lt?: string;
  releasedBidOwner_nin?: Array<string | null>;
  finalBidValue?: string;
  askEndTime_in?: Array<number | null>;
  auctionEndTime_exists?: boolean;
  actionStatus_ne?: string;
  askEndTime_lte?: number;
  askCreator_gte?: string;
  submittedBidOwner_gt?: string;
  askCreator_exists?: boolean;
  actionStatus_lte?: string;
  releasedBidOwner_lt?: string;
  managerExpirationTime_exists?: boolean;
  submittedBidValue_exists?: boolean;
  auctionCreator_nin?: Array<string | null>;
  askEndTime_exists?: boolean;
  bidCreator_nin?: Array<string | null>;
  showcaseFee_lt?: string;
  auctionEndTime_gt?: number;
  releasedBidOwner_ne?: string;
  actionCapture_gte?: string;
  bidCreator_lte?: string;
  auctionStartTime_lte?: number;
  bidValue_lt?: string;
  bidCreator_gte?: string;
  endorsementCreator_nin?: Array<string | null>;
  auctionCreator_gt?: string;
  bidEndTime_gte?: number;
  showcaseFee_lte?: string;
  finalBidValue_gte?: string;
  askCreator?: string;
  askValue_gt?: string;
  releasedBidValue_gte?: string;
  askValue_lt?: string;
  bidEndTime_in?: Array<number | null>;
  managerSuperType?: string;
  managerExpirationTime_in?: Array<number | null>;
  submittedBidOwner_exists?: boolean;
  minimalBid?: string;
  finalBidValue_nin?: Array<string | null>;
  bidValue_gt?: string;
  auctionCreator_ne?: string;
  bidValue_exists?: boolean;
  auctionEndTime_lte?: number;
  actionCapture?: string;
  finalBidValue_in?: Array<string | null>;
  endorsementCreator?: string;
  bidCreator_gt?: string;
  releasedBidValue_lte?: string;
  sealCreator_nin?: Array<string | null>;
  auctionEndTime_in?: Array<number | null>;
  managerSuperType_ne?: string;
  usdValue_gt?: number;
  actionCapture_nin?: Array<string | null>;
  releasedBidValue_lt?: string;
  finalBidValue_gt?: string;
  endorsementCreator_lte?: string;
  bidValue_lte?: string;
  showcaseFee?: string;
  finalBidValue_lte?: string;
  actionStatus_gte?: string;
  bidValue_nin?: Array<string | null>;
  usdValue_lte?: number;
  askCreator_lt?: string;
  finalBidValue_exists?: boolean;
  releasedBidOwner_lte?: string;
  minimalBid_lte?: string;
  managerSuperType_exists?: boolean;
  sealCreator_gt?: string;
  sealCreator?: string;
  sealCreator_in?: Array<string | null>;
  auctionStartTime_ne?: number;
  auctionStartTime_exists?: boolean;
  managerSuperType_gt?: string;
  minimalBid_ne?: string;
  finalBidValue_lt?: string;
  bidEndTime_lt?: number;
  bidStep_ne?: string;
  bidStep_nin?: Array<string | null>;
  bidCreator_in?: Array<string | null>;
  usdValue_gte?: number;
  bidStep_lt?: string;
  bidStep_gte?: string;
  releasedBidValue_gt?: string;
  submittedBidValue_nin?: Array<string | null>;
  managerSuperType_lte?: string;
  managerExpirationTime?: number;
  managerExpirationTime_nin?: Array<number | null>;
  actionCapture_gt?: string;
  endorsementCreator_exists?: boolean;
  auctionEndTime_gte?: number;
  bidCreator?: string;
  releasedBidOwner?: string;
  endorsementCreator_in?: Array<string | null>;
  submittedBidOwner_in?: Array<string | null>;
  managerExpirationTime_ne?: number;
  askValue_in?: Array<string | null>;
  bidEndTime?: number;
  sealCreator_ne?: string;
  auctionCreator_in?: Array<string | null>;
  usdValue_ne?: number;
  showcaseFee_nin?: Array<string | null>;
  askValue_lte?: string;
  minimalBid_exists?: boolean;
  releasedBidValue?: string;
  actionCapture_lt?: string;
  askCreator_nin?: Array<string | null>;
  usdValue_in?: Array<number | null>;
  actionCapture_ne?: string;
  bidCreator_ne?: string;
  bidStep_in?: Array<string | null>;
  bidCreator_exists?: boolean;
  askEndTime_lt?: number;
  sealCreator_gte?: string;
  minimalBid_in?: Array<string | null>;
  releasedBidValue_ne?: string;
  usdValue?: number;
  submittedBidValue_lte?: string;
  AND?: Array<GQLActionActionAttributeQueryInput>;
  bidCreator_lt?: string;
  auctionStartTime_in?: Array<number | null>;
  endorsementCreator_gte?: string;
  OR?: Array<GQLActionActionAttributeQueryInput>;
  submittedBidValue_gte?: string;
  bidEndTime_ne?: number;
  minimalBid_lt?: string;
  managerExpirationTime_lte?: number;
  actionCapture_exists?: boolean;
  managerSuperType_gte?: string;
  bidStep_gt?: string;
  releasedBidOwner_gte?: string;
  askValue_exists?: boolean;
  showcaseFee_ne?: string;
  auctionCreator_exists?: boolean;
  auctionCreator_lt?: string;
  minimalBid_nin?: Array<string | null>;
  askValue?: string;
  bidValue_gte?: string;
  askCreator_lte?: string;
  endorsementCreator_gt?: string;
  managerSuperType_nin?: Array<string | null>;
  bidValue_in?: Array<string | null>;
  usdValue_lt?: number;
  askCreator_ne?: string;
  managerSuperType_lt?: string;
  sealCreator_lte?: string;
  actionStatus_in?: Array<string | null>;
  actionStatus?: string;
  usdValue_nin?: Array<number | null>;
  auctionEndTime_lt?: number;
  auctionStartTime_gt?: number;
  auctionEndTime?: number;
  askValue_nin?: Array<string | null>;
  submittedBidValue?: string;
  actionStatus_lt?: string;
  bidStep_lte?: string;
  askCreator_in?: Array<string | null>;
  managerExpirationTime_gt?: number;
  askEndTime_nin?: Array<number | null>;
  submittedBidOwner_lt?: string;
  bidEndTime_lte?: number;
  releasedBidOwner_gt?: string;
  auctionStartTime_lt?: number;
  showcaseFee_gt?: string;
  minimalBid_gte?: string;
  submittedBidOwner_nin?: Array<string | null>;
  minimalBid_gt?: string;
  bidValue_ne?: string;
  submittedBidValue_gt?: string;
  endorsementCreator_ne?: string;
  askCreator_gt?: string;
  submittedBidValue_ne?: string;
  actionStatus_exists?: boolean;
  managerSuperType_in?: Array<string | null>;
  auctionStartTime?: number;
  actionStatus_gt?: string;
  submittedBidOwner_lte?: string;
}

export interface GQLSwift_messageInsertInput {
  parameters?: GQLSwift_messageParameterInsertInput;
  status?: string;
  _id?: GQLObjectId;
  createdAt?: number;
  updatedAt?: number;
  hash?: string;
  message?: GQLSwift_messageMessageInsertInput;
}

export interface GQLContract_typeHashFieldInsertInput {
  title?: string;
  type?: string;
  collectionID?: string;
  creatorFee?: string;
  height?: string;
  description?: string;
  layers?: GQLContract_typeHashFieldLayerInsertInput;
  minimalMintFee?: string;
  media?: GQLContract_typeHashFieldMediumInsertInput;
  numberOfEditions?: string;
  creator?: string;
  width?: string;
}

export interface GQLTokenColImageInsertInput {
  hash?: string;
  height?: number;
  mimetype?: string;
  rarity?: number;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLCol1LayerImage {
  hash?: string;
  height?: number;
  mimetype?: string;
  rarity?: number;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLContract_typeAbiQueryInput {
  trx_gte?: string;
  token_ne?: string;
  root_exists?: boolean;
  root_lte?: string;
  series_lt?: string;
  root_nin?: Array<string | null>;
  token_nin?: Array<string | null>;
  series_lte?: string;
  series_in?: Array<string | null>;
  trx_nin?: Array<string | null>;
  token?: string;
  root?: string;
  token_exists?: boolean;
  trx_lte?: string;
  trx_ne?: string;
  series_gte?: string;
  token_lte?: string;
  root_ne?: string;
  token_gte?: string;
  token_lt?: string;
  OR?: Array<GQLContract_typeAbiQueryInput>;
  trx_exists?: boolean;
  series?: string;
  token_gt?: string;
  trx_lt?: string;
  trx?: string;
  series_exists?: boolean;
  root_gt?: string;
  AND?: Array<GQLContract_typeAbiQueryInput>;
  series_gt?: string;
  trx_in?: Array<string | null>;
  root_gte?: string;
  series_ne?: string;
  series_nin?: Array<string | null>;
  trx_gt?: string;
  root_lt?: string;
  root_in?: Array<string | null>;
  token_in?: Array<string | null>;
}

export interface GQLAuctionDeployedBid {
  bidCreator?: string;
  bidStatus?: string;
  bidValue?: string;
}

export interface GQLSubscriptionQueryInput {
  abiFileUrl_lt?: string;
  lastBlockRead_gte?: GQLLong;
  status_in?: Array<string | null>;
  _id_ne?: GQLObjectId;
  lastBlockRead_lt?: GQLLong;
  lastBlockRead_in?: Array<GQLLong | null>;
  address_lt?: string;
  superType_nin?: Array<string | null>;
  status_nin?: Array<string | null>;
  lastBlockRead_ne?: GQLLong;
  status_gte?: string;
  abiFileUrl_ne?: string;
  abiFileUrl_in?: Array<string | null>;
  AND?: Array<GQLSubscriptionQueryInput>;
  lastBlockRead?: GQLLong;
  lastBlockRead_nin?: Array<GQLLong | null>;
  superType_lt?: string;
  status_exists?: boolean;
  address?: string;
  address_nin?: Array<string | null>;
  blockchain_lt?: string;
  _id_lt?: GQLObjectId;
  superType_in?: Array<string | null>;
  abiFileUrl_nin?: Array<string | null>;
  _id_in?: Array<GQLObjectId | null>;
  status_lte?: string;
  superType_lte?: string;
  _id_lte?: GQLObjectId;
  status_lt?: string;
  address_gt?: string;
  abiFileUrl?: string;
  address_ne?: string;
  lastBlockRead_exists?: boolean;
  blockchain_nin?: Array<string | null>;
  blockchain?: string;
  _id_exists?: boolean;
  _id_gte?: GQLObjectId;
  superType_gt?: string;
  blockchain_gte?: string;
  abiFileUrl_exists?: boolean;
  address_lte?: string;
  superType_exists?: boolean;
  blockchain_in?: Array<string | null>;
  _id?: GQLObjectId;
  OR?: Array<GQLSubscriptionQueryInput>;
  status_gt?: string;
  _id_nin?: Array<GQLObjectId | null>;
  _id_gt?: GQLObjectId;
  address_gte?: string;
  abiFileUrl_gte?: string;
  blockchain_gt?: string;
  blockchain_exists?: boolean;
  address_in?: Array<string | null>;
  status?: string;
  abiFileUrl_gt?: string;
  status_ne?: string;
  abiFileUrl_lte?: string;
  blockchain_lte?: string;
  superType_gte?: string;
  superType_ne?: string;
  superType?: string;
  blockchain_ne?: string;
  lastBlockRead_gt?: GQLLong;
  lastBlockRead_lte?: GQLLong;
  address_exists?: boolean;
}

export enum GQLHourlySortByInput {
  USD_DESC = 'USD_DESC',
  EVERTOUSD_ASC = 'EVERTOUSD_ASC',
  BNBTOUSD_ASC = 'BNBTOUSD_ASC',
  BNBTOUSD_DESC = 'BNBTOUSD_DESC',
  _ID_ASC = '_ID_ASC',
  TIME_ASC = 'TIME_ASC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  USD_ASC = 'USD_ASC',
  TIME_DESC = 'TIME_DESC',
  _ID_DESC = '_ID_DESC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  EVERTOUSD_DESC = 'EVERTOUSD_DESC'
}

export interface GQLActionColMessageUpdateInput {
  time_inc?: number;
  time?: number;
  actionCode_unset?: boolean;
  senderAddress?: string;
  superType_unset?: boolean;
  senderAddress_unset?: boolean;
  senderID_unset?: boolean;
  hash?: string;
  hash_unset?: boolean;
  senderID?: string;
  superType?: string;
  actionCode?: string;
  time_unset?: boolean;
}

export interface GQLTestTemporaryEndorsementQueryInput {
  sealID?: string;
  sealID_exists?: boolean;
  expiresAt_in?: Array<number | null>;
  sealID_in?: Array<string | null>;
  expiresAt_nin?: Array<number | null>;
  expiresAt_lt?: number;
  expiresAt_ne?: number;
  AND?: Array<GQLTestTemporaryEndorsementQueryInput>;
  sealID_nin?: Array<string | null>;
  sealID_lte?: string;
  sealID_gte?: string;
  expiresAt_exists?: boolean;
  OR?: Array<GQLTestTemporaryEndorsementQueryInput>;
  sealID_ne?: string;
  expiresAt_gte?: number;
  sealID_lt?: string;
  expiresAt_gt?: number;
  expiresAt_lte?: number;
  expiresAt?: number;
  sealID_gt?: string;
}

export interface GQLTestCrossEndorsement {
  masterID?: string;
  mediaType?: string;
}

export interface GQLEventParameter {
  expiresAt?: number;
  masterAddress?: string;
  masterNftId?: number;
  price?: number;
  sealAddress?: string;
  sealNftId?: number;
  sealPossibleCorners?: number;
  tokenAddress?: string;
  tokenNftId?: number;
}

export interface GQLBidRaw {
  bidCreator?: string;
  bidValue?: string;
  endTime?: number;
  superType?: string;
  tokenAddress?: string;
  tokenID?: string;
}

export interface GQLSeriesDeployedQueryInput {
  owner_nin?: Array<string | null>;
  owner?: string;
  type_lte?: string;
  address_in?: Array<string | null>;
  maximum_exists?: boolean;
  hash_exists?: boolean;
  address_lte?: string;
  superType_exists?: boolean;
  hash_gte?: string;
  superType_nin?: Array<string | null>;
  owner_in?: Array<string | null>;
  creator_lte?: string;
  address?: string;
  supply_in?: Array<number | null>;
  creator_exists?: boolean;
  hash_lt?: string;
  maximum_ne?: number;
  hash_lte?: string;
  superType_ne?: string;
  owner_lt?: string;
  OR?: Array<GQLSeriesDeployedQueryInput>;
  address_gt?: string;
  maximum?: number;
  maximum_lte?: number;
  owner_ne?: string;
  supply_ne?: number;
  blockchain_ne?: string;
  creator_lt?: string;
  blockchain_lt?: string;
  address_lt?: string;
  creatorFees_ne?: string;
  address_ne?: string;
  superType_lt?: string;
  blockchain_exists?: boolean;
  type_in?: Array<string | null>;
  supply_lt?: number;
  maximum_nin?: Array<number | null>;
  maximum_lt?: number;
  blockchain_lte?: string;
  owner_gt?: string;
  address_exists?: boolean;
  supply?: number;
  blockchain_gt?: string;
  type_lt?: string;
  hash_gt?: string;
  creatorFees_gt?: string;
  supply_exists?: boolean;
  type_gte?: string;
  type?: string;
  creator_gte?: string;
  creatorFees?: string;
  creatorFees_gte?: string;
  superType_gte?: string;
  superType?: string;
  type_nin?: Array<string | null>;
  creator?: string;
  creatorFees_in?: Array<string | null>;
  owner_gte?: string;
  supply_gt?: number;
  supply_gte?: number;
  creatorFees_lt?: string;
  hash_ne?: string;
  blockchain_nin?: Array<string | null>;
  creatorFees_nin?: Array<string | null>;
  maximum_gte?: number;
  owner_exists?: boolean;
  blockchain_in?: Array<string | null>;
  superType_gt?: string;
  creator_ne?: string;
  blockchain?: string;
  supply_nin?: Array<number | null>;
  address_gte?: string;
  superType_in?: Array<string | null>;
  creator_gt?: string;
  hash_nin?: Array<string | null>;
  type_ne?: string;
  owner_lte?: string;
  superType_lte?: string;
  maximum_gt?: number;
  hash?: string;
  blockchain_gte?: string;
  creator_nin?: Array<string | null>;
  creator_in?: Array<string | null>;
  supply_lte?: number;
  creatorFees_exists?: boolean;
  type_gt?: string;
  maximum_in?: Array<number | null>;
  AND?: Array<GQLSeriesDeployedQueryInput>;
  creatorFees_lte?: string;
  address_nin?: Array<string | null>;
  hash_in?: Array<string | null>;
  type_exists?: boolean;
}

export interface GQLAuctionRawBidQueryInput {
  bidValue_gt?: string;
  bidCreator_exists?: boolean;
  bidValue_nin?: Array<string | null>;
  bidCreator_nin?: Array<string | null>;
  bidValue_gte?: string;
  bidValue_in?: Array<string | null>;
  bidCreator_ne?: string;
  bidCreator_gt?: string;
  bidCreator_lt?: string;
  bidValue_ne?: string;
  AND?: Array<GQLAuctionRawBidQueryInput>;
  bidValue?: string;
  bidValue_lte?: string;
  bidCreator_in?: Array<string | null>;
  bidValue_exists?: boolean;
  bidCreator_lte?: string;
  bidCreator_gte?: string;
  bidCreator?: string;
  OR?: Array<GQLAuctionRawBidQueryInput>;
  bidValue_lt?: string;
}

export interface GQLEventParameterInsertInput {
  sealAddress?: string;
  masterAddress?: string;
  sealNftId?: number;
  tokenNftId?: number;
  sealPossibleCorners?: number;
  price?: number;
  masterNftId?: number;
  expiresAt?: number;
  tokenAddress?: string;
}

export interface GQLDeleteManyPayload {
  deletedCount: number;
}

export interface GQLSwift_messageMessageInsertInput {
  resolution?: string;
  senderAddress?: string;
  superType?: string;
  time?: number;
  discoveryTime?: number;
  parsingTime?: number;
  actionCode?: string;
}

export interface GQLCollectionUpdateInput {
  creatorAccountNumber?: number;
  updatedAt?: number;
  creator_unset?: boolean;
  creator?: string;
  qualification_inc?: number;
  collectionID?: string;
  deployed_unset?: boolean;
  updatedAt_inc?: number;
  title_unset?: boolean;
  deployed?: GQLCollectionDeployedUpdateInput;
  qualification?: number;
  about?: string;
  collectionID_unset?: boolean;
  createdAt_unset?: boolean;
  raw?: GQLCollectionRawUpdateInput;
  _id_unset?: boolean;
  creatorAccountNumber_unset?: boolean;
  createdAt?: number;
  media_unset?: boolean;
  tokensInCollection_inc?: number;
  updatedAt_unset?: boolean;
  title?: string;
  tokensInCollection?: number;
  createdAt_inc?: number;
  tokensInCollection_unset?: boolean;
  creatorAccountNumber_inc?: number;
  about_unset?: boolean;
  _id?: GQLObjectId;
  media?: Array<GQLCollectionMediumUpdateInput | null>;
  qualification_unset?: boolean;
  raw_unset?: boolean;
}

export interface GQLUi_managementQueryInput {
  visibilityStatus_lt?: string;
  updatedAt_nin?: Array<number | null>;
  moduleScope_in?: Array<string | null>;
  moduleScope?: string;
  moduleScope_ne?: string;
  createdAt?: number;
  moduleName_lt?: string;
  airtableId_nin?: Array<string | null>;
  moduleName?: string;
  moduleScope_gt?: string;
  visibilityStatus?: string;
  moduleName_gt?: string;
  image_gte?: string;
  moduleID_exists?: boolean;
  recordID_exists?: boolean;
  airtableId_exists?: boolean;
  image_lt?: string;
  moduleScope_exists?: boolean;
  tag_in?: Array<string | null>;
  image?: string;
  image_nin?: Array<string | null>;
  createdAt_lte?: number;
  airtableId?: string;
  _id?: GQLObjectId;
  updatedAt_gt?: number;
  tag?: Array<string | null>;
  createdAt_exists?: boolean;
  moduleID?: GQLUi_moduleQueryInput;
  itemLink_ne?: string;
  airtableId_lt?: string;
  assetTitle_exists?: boolean;
  moduleItemType_lte?: string;
  createdAt_in?: Array<number | null>;
  updatedAt_lte?: number;
  tag_exists?: boolean;
  updatedAt_in?: Array<number | null>;
  itemLink?: string;
  recordID_nin?: Array<string | null>;
  _id_in?: Array<GQLObjectId | null>;
  createdAt_ne?: number;
  recordID_gte?: string;
  updatedAt_ne?: number;
  moduleScope_lt?: string;
  moduleItemType_lt?: string;
  itemID_ne?: string;
  itemID_lte?: string;
  createdAt_gt?: number;
  assetTitle_lte?: string;
  assetID?: GQLUi_assetQueryInput;
  itemID_gt?: string;
  OR?: Array<GQLUi_managementQueryInput>;
  visibilityStatus_exists?: boolean;
  itemLink_lt?: string;
  recordID_gt?: string;
  _id_lt?: GQLObjectId;
  _id_gt?: GQLObjectId;
  createdAt_nin?: Array<number | null>;
  createdAt_gte?: number;
  moduleItemType?: string;
  airtableId_gte?: string;
  recordID_in?: Array<string | null>;
  airtableId_lte?: string;
  itemID_lt?: string;
  recordID_lte?: string;
  visibilityStatus_in?: Array<string | null>;
  moduleItemType_in?: Array<string | null>;
  itemLink_in?: Array<string | null>;
  AND?: Array<GQLUi_managementQueryInput>;
  updatedAt_lt?: number;
  visibilityStatus_nin?: Array<string | null>;
  tag_nin?: Array<string | null>;
  visibilityStatus_ne?: string;
  visibilityStatus_gte?: string;
  updatedAt?: number;
  airtableId_gt?: string;
  itemID_gte?: string;
  moduleItemType_gte?: string;
  itemLink_exists?: boolean;
  visibilityStatus_lte?: string;
  image_lte?: string;
  recordID_lt?: string;
  assetTitle_ne?: string;
  moduleName_ne?: string;
  createdAt_lt?: number;
  image_in?: Array<string | null>;
  image_ne?: string;
  moduleItemType_gt?: string;
  _id_nin?: Array<GQLObjectId | null>;
  moduleName_exists?: boolean;
  itemID_nin?: Array<string | null>;
  updatedAt_gte?: number;
  assetTitle_in?: Array<string | null>;
  _id_gte?: GQLObjectId;
  moduleItemType_exists?: boolean;
  itemLink_gte?: string;
  _id_ne?: GQLObjectId;
  moduleName_nin?: Array<string | null>;
  moduleName_gte?: string;
  recordID?: string;
  updatedAt_exists?: boolean;
  assetTitle?: string;
  assetTitle_lt?: string;
  _id_lte?: GQLObjectId;
  moduleItemType_nin?: Array<string | null>;
  itemID?: string;
  moduleScope_lte?: string;
  assetTitle_gt?: string;
  moduleScope_nin?: Array<string | null>;
  itemLink_nin?: Array<string | null>;
  itemLink_gt?: string;
  airtableId_in?: Array<string | null>;
  image_exists?: boolean;
  moduleName_lte?: string;
  moduleItemType_ne?: string;
  itemID_in?: Array<string | null>;
  assetID_exists?: boolean;
  itemID_exists?: boolean;
  image_gt?: string;
  itemLink_lte?: string;
  assetTitle_nin?: Array<string | null>;
  _id_exists?: boolean;
  airtableId_ne?: string;
  moduleScope_gte?: string;
  assetTitle_gte?: string;
  moduleName_in?: Array<string | null>;
  visibilityStatus_gt?: string;
  recordID_ne?: string;
}

export interface GQLUi_managementUpdateInput {
  createdAt?: number;
  visibilityStatus?: string;
  itemLink_unset?: boolean;
  itemLink?: string;
  image?: string;
  tag?: Array<string | null>;
  moduleName?: string;
  image_unset?: boolean;
  moduleID_unset?: boolean;
  moduleItemType?: string;
  itemID?: string;
  moduleName_unset?: boolean;
  assetID?: GQLUi_managementAssetIDRelationInput;
  recordID_unset?: boolean;
  _id?: GQLObjectId;
  moduleID?: GQLUi_managementModuleIDRelationInput;
  updatedAt_inc?: number;
  airtableId_unset?: boolean;
  assetTitle?: string;
  tag_unset?: boolean;
  recordID?: string;
  updatedAt_unset?: boolean;
  moduleItemType_unset?: boolean;
  _id_unset?: boolean;
  visibilityStatus_unset?: boolean;
  createdAt_unset?: boolean;
  airtableId?: string;
  moduleScope_unset?: boolean;
  assetID_unset?: boolean;
  itemID_unset?: boolean;
  createdAt_inc?: number;
  moduleScope?: string;
  assetTitle_unset?: boolean;
  updatedAt?: number;
}

export interface GQLContract_typeHashFieldLayerInsertInput {
  layerIndex?: string;
  images?: GQLContract_typeHashFieldLayerImageInsertInput;
}

export interface GQLTokenRawMediumUpdateInput {
  weight_inc?: number;
  width?: number;
  hash?: string;
  height_inc?: number;
  height_unset?: boolean;
  width_unset?: boolean;
  subtitle_unset?: boolean;
  width_inc?: number;
  mimetype_unset?: boolean;
  subtitle?: string;
  height?: number;
  ipfsHash?: string;
  role?: string;
  role_unset?: boolean;
  weight_unset?: boolean;
  weight?: number;
  hash_unset?: boolean;
  ipfsHash_unset?: boolean;
  mimetype?: string;
}

export interface GQLFormat {
  _id?: GQLObjectId;
  formatName?: string;
  height?: number;
  width?: number;
}

export interface GQLEndorsementDeployed {
  blockchain?: string;
  corner?: string;
  creator?: string;
  expiresAt?: number;
  masterID?: string;
  masterMediaType?: string;
  requestedCorners?: number;
  sealID?: string;
  status?: string;
  superType?: string;
  tokenID?: string;
  type?: string;
  value?: string;
}

export interface GQLContract_typeHashFieldQueryInput {
  minimalMintFee_gt?: string;
  creatorFee_in?: Array<string | null>;
  creator?: string;
  width_lte?: string;
  width_exists?: boolean;
  type_lt?: string;
  height_ne?: string;
  creatorFee_lt?: string;
  width_in?: Array<string | null>;
  width_ne?: string;
  height_exists?: boolean;
  title_in?: Array<string | null>;
  numberOfEditions_ne?: string;
  description_ne?: string;
  media?: GQLContract_typeHashFieldMediumQueryInput;
  creator_nin?: Array<string | null>;
  collectionID_gt?: string;
  collectionID_nin?: Array<string | null>;
  title?: string;
  height_nin?: Array<string | null>;
  numberOfEditions_gt?: string;
  collectionID_gte?: string;
  description_lte?: string;
  minimalMintFee_gte?: string;
  width_gte?: string;
  title_nin?: Array<string | null>;
  width_nin?: Array<string | null>;
  description_gt?: string;
  creator_gt?: string;
  creatorFee?: string;
  height_lte?: string;
  height_lt?: string;
  creatorFee_exists?: boolean;
  layers_exists?: boolean;
  width_lt?: string;
  type_gte?: string;
  collectionID?: string;
  minimalMintFee_lte?: string;
  width_gt?: string;
  minimalMintFee_ne?: string;
  creatorFee_lte?: string;
  collectionID_exists?: boolean;
  title_exists?: boolean;
  type?: string;
  description_lt?: string;
  height_in?: Array<string | null>;
  collectionID_lte?: string;
  numberOfEditions_lte?: string;
  minimalMintFee_lt?: string;
  collectionID_lt?: string;
  type_gt?: string;
  height_gt?: string;
  type_lte?: string;
  description_gte?: string;
  creatorFee_gt?: string;
  collectionID_in?: Array<string | null>;
  description_exists?: boolean;
  creator_in?: Array<string | null>;
  OR?: Array<GQLContract_typeHashFieldQueryInput>;
  title_ne?: string;
  minimalMintFee?: string;
  creator_exists?: boolean;
  numberOfEditions?: string;
  creator_lt?: string;
  minimalMintFee_in?: Array<string | null>;
  creator_ne?: string;
  collectionID_ne?: string;
  layers?: GQLContract_typeHashFieldLayerQueryInput;
  description?: string;
  height?: string;
  type_nin?: Array<string | null>;
  numberOfEditions_exists?: boolean;
  type_ne?: string;
  title_gte?: string;
  media_exists?: boolean;
  creatorFee_ne?: string;
  numberOfEditions_in?: Array<string | null>;
  title_lte?: string;
  numberOfEditions_nin?: Array<string | null>;
  numberOfEditions_lt?: string;
  creatorFee_nin?: Array<string | null>;
  height_gte?: string;
  AND?: Array<GQLContract_typeHashFieldQueryInput>;
  creator_gte?: string;
  minimalMintFee_nin?: Array<string | null>;
  description_in?: Array<string | null>;
  numberOfEditions_gte?: string;
  title_gt?: string;
  type_in?: Array<string | null>;
  title_lt?: string;
  creatorFee_gte?: string;
  creator_lte?: string;
  minimalMintFee_exists?: boolean;
  description_nin?: Array<string | null>;
  type_exists?: boolean;
  width?: string;
}

export interface GQLBlockchainNetworkInsertInput {
  main?: GQLBlockchainNetworkMainInsertInput;
  test?: GQLBlockchainNetworkTestInsertInput;
}

export interface GQLEventMessageInsertInput {
  superType?: string;
  time?: number;
  txHash?: string;
  parsingTime?: number;
  eventName?: string;
  senderAddress?: string;
}

export type GQLLong = any;

export enum GQLNetworkSortByInput {
  NAME_ASC = 'NAME_ASC',
  NAME_DESC = 'NAME_DESC',
  TYPE_ASC = 'TYPE_ASC',
  TYPE_DESC = 'TYPE_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  INTEGRATION_ASC = 'INTEGRATION_ASC',
  INTEGRATION_DESC = 'INTEGRATION_DESC'
}

export interface GQLAskDeployedQueryInput {
  status_exists?: boolean;
  currentAskValue?: string;
  askAddress_lte?: string;
  askAddress_exists?: boolean;
  askAddress_in?: Array<string | null>;
  blockchain_lte?: string;
  values_exists?: boolean;
  endTime_lte?: number;
  blockchain_lt?: string;
  status_gt?: string;
  status?: string;
  tokenAddress_in?: Array<string | null>;
  status_lte?: string;
  tokenAddress_lt?: string;
  tokenID_gt?: string;
  askCreator_ne?: string;
  askCreator_lt?: string;
  askAddress_ne?: string;
  superType_in?: Array<string | null>;
  tokenAddress_ne?: string;
  currentAskValue_ne?: string;
  superType_exists?: boolean;
  endTime?: number;
  tokenAddress_gte?: string;
  tokenAddress_gt?: string;
  endTime_ne?: number;
  askAddress_lt?: string;
  askCreator_nin?: Array<string | null>;
  tokenID_exists?: boolean;
  blockchain?: string;
  status_nin?: Array<string | null>;
  tokenID_ne?: string;
  showcaseFee_lt?: string;
  endTime_gte?: number;
  blockchain_ne?: string;
  currentAskValue_lt?: string;
  superType_lte?: string;
  endTime_lt?: number;
  blockchain_in?: Array<string | null>;
  AND?: Array<GQLAskDeployedQueryInput>;
  tokenID?: string;
  superType_gte?: string;
  endTime_exists?: boolean;
  tokenAddress?: string;
  values_in?: Array<GQLAskDeployedValueQueryInput | null>;
  showcaseFee_ne?: string;
  status_in?: Array<string | null>;
  tokenAddress_lte?: string;
  showcaseFee_exists?: boolean;
  superType?: string;
  currentAskValue_lte?: string;
  superType_ne?: string;
  showcaseFee_gte?: string;
  askAddress_gt?: string;
  blockchain_exists?: boolean;
  tokenAddress_exists?: boolean;
  endTime_in?: Array<number | null>;
  status_gte?: string;
  currentAskValue_in?: Array<string | null>;
  askCreator_lte?: string;
  tokenID_gte?: string;
  OR?: Array<GQLAskDeployedQueryInput>;
  askCreator_gt?: string;
  tokenAddress_nin?: Array<string | null>;
  currentAskValue_gt?: string;
  superType_gt?: string;
  tokenID_in?: Array<string | null>;
  askCreator?: string;
  tokenID_nin?: Array<string | null>;
  showcaseFee_lte?: string;
  values_nin?: Array<GQLAskDeployedValueQueryInput | null>;
  askAddress?: string;
  endTime_gt?: number;
  blockchain_nin?: Array<string | null>;
  blockchain_gt?: string;
  endTime_nin?: Array<number | null>;
  tokenID_lt?: string;
  tokenID_lte?: string;
  status_ne?: string;
  showcaseFee_gt?: string;
  askCreator_exists?: boolean;
  askAddress_nin?: Array<string | null>;
  showcaseFee_nin?: Array<string | null>;
  blockchain_gte?: string;
  showcaseFee_in?: Array<string | null>;
  askCreator_in?: Array<string | null>;
  superType_nin?: Array<string | null>;
  values?: Array<GQLAskDeployedValueQueryInput | null>;
  status_lt?: string;
  currentAskValue_gte?: string;
  currentAskValue_nin?: Array<string | null>;
  askCreator_gte?: string;
  showcaseFee?: string;
  askAddress_gte?: string;
  superType_lt?: string;
  currentAskValue_exists?: boolean;
}

export interface GQLAuctionDeployedBidUpdateInput {
  bidStatus_unset?: boolean;
  bidValue?: string;
  bidValue_unset?: boolean;
  bidCreator?: string;
  bidCreator_unset?: boolean;
  bidStatus?: string;
}

export interface GQLTokenDeployedCreatorObjectRelationInput {
  link?: string;
  create?: GQLUserInsertInput;
}

export interface GQLIpfUpdateInput {
  mediaHash_unset?: boolean;
  createdAt_inc?: number;
  ipfsHash?: string;
  _id_unset?: boolean;
  createdAt?: number;
  createdAt_unset?: boolean;
  ipfsHash_unset?: boolean;
  mediaHash?: string;
  _id?: GQLObjectId;
}

export interface GQLTestCrossEndorsementUpdateInput {
  masterID?: string;
  masterID_unset?: boolean;
  mediaType?: string;
  mediaType_unset?: boolean;
}

export enum GQLSeriesSortByInput {
  CREATEDAT_DESC = 'CREATEDAT_DESC',
  SERIESID_ASC = 'SERIESID_ASC',
  SERIESID_DESC = 'SERIESID_DESC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC'
}

export enum GQLContractSortByInput {
  ABIPATH_ASC = 'ABIPATH_ASC',
  ADDRESS_DESC = 'ADDRESS_DESC',
  BLOCKCHAIN_ASC = 'BLOCKCHAIN_ASC',
  LONGTYPE_DESC = 'LONGTYPE_DESC',
  PRIVACY_ASC = 'PRIVACY_ASC',
  PRIVACY_DESC = 'PRIVACY_DESC',
  ABIFILE_ASC = 'ABIFILE_ASC',
  ABIPATH_DESC = 'ABIPATH_DESC',
  LONGTYPE_ASC = 'LONGTYPE_ASC',
  NETWORK_DESC = 'NETWORK_DESC',
  _ID_ASC = '_ID_ASC',
  _ID_DESC = '_ID_DESC',
  ABIFILE_DESC = 'ABIFILE_DESC',
  BLOCKCHAIN_DESC = 'BLOCKCHAIN_DESC',
  ENVIRONMENT_ASC = 'ENVIRONMENT_ASC',
  ENVIRONMENT_DESC = 'ENVIRONMENT_DESC',
  NETWORK_ASC = 'NETWORK_ASC',
  STATUS_ASC = 'STATUS_ASC',
  ADDRESS_ASC = 'ADDRESS_ASC',
  STATUS_DESC = 'STATUS_DESC',
  SUPERTYPE_ASC = 'SUPERTYPE_ASC',
  SUPERTYPE_DESC = 'SUPERTYPE_DESC'
}

export interface GQLUi_assetUpdateInput {
  imageLanding?: string;
  managementIDs_unset?: boolean;
  managementIDs?: string;
  _id_unset?: boolean;
  assetID?: string;
  assetSubtitle_unset?: boolean;
  assetTitle?: string;
  textLanding_unset?: boolean;
  image?: string;
  updatedAt?: number;
  airtableId_unset?: boolean;
  updatedAt_inc?: number;
  assetID_unset?: boolean;
  assetSubtitle?: string;
  image_unset?: boolean;
  createdAt?: number;
  imageLanding_unset?: boolean;
  assetTitle_unset?: boolean;
  createdAt_inc?: number;
  _id?: GQLObjectId;
  createdAt_unset?: boolean;
  airtableId?: string;
  updatedAt_unset?: boolean;
  textLanding?: string;
}

export interface GQLFormatQueryInput {
  formatName?: string;
  formatName_lte?: string;
  formatName_lt?: string;
  OR?: Array<GQLFormatQueryInput>;
  width_gt?: number;
  width_lte?: number;
  formatName_ne?: string;
  _id_nin?: Array<GQLObjectId | null>;
  height_nin?: Array<number | null>;
  height_in?: Array<number | null>;
  _id_exists?: boolean;
  _id_gt?: GQLObjectId;
  formatName_gt?: string;
  _id_in?: Array<GQLObjectId | null>;
  formatName_exists?: boolean;
  height_gte?: number;
  height_lte?: number;
  _id_lt?: GQLObjectId;
  _id?: GQLObjectId;
  width_nin?: Array<number | null>;
  formatName_gte?: string;
  height_ne?: number;
  _id_ne?: GQLObjectId;
  width_gte?: number;
  AND?: Array<GQLFormatQueryInput>;
  width_ne?: number;
  _id_gte?: GQLObjectId;
  height_exists?: boolean;
  height?: number;
  height_gt?: number;
  _id_lte?: GQLObjectId;
  height_lt?: number;
  formatName_in?: Array<string | null>;
  width_lt?: number;
  width?: number;
  width_in?: Array<number | null>;
  formatName_nin?: Array<string | null>;
  width_exists?: boolean;
}

export interface GQLContract_typeHashFieldMediumQueryInput {
  mimetype_lte?: string;
  width_nin?: Array<string | null>;
  AND?: Array<GQLContract_typeHashFieldMediumQueryInput>;
  role_gte?: string;
  hash_gt?: string;
  height?: string;
  height_gt?: string;
  hash?: string;
  role_nin?: Array<string | null>;
  subtitle_ne?: string;
  OR?: Array<GQLContract_typeHashFieldMediumQueryInput>;
  mimetype_gt?: string;
  height_exists?: boolean;
  weight_lte?: string;
  weight_nin?: Array<string | null>;
  role_in?: Array<string | null>;
  width_lte?: string;
  weight_gte?: string;
  subtitle_lte?: string;
  weight_gt?: string;
  height_nin?: Array<string | null>;
  role_lt?: string;
  subtitle_lt?: string;
  weight_in?: Array<string | null>;
  hash_lte?: string;
  width_in?: Array<string | null>;
  mimetype_ne?: string;
  subtitle_gte?: string;
  height_in?: Array<string | null>;
  weight_ne?: string;
  role_ne?: string;
  hash_exists?: boolean;
  role_exists?: boolean;
  weight_exists?: boolean;
  hash_gte?: string;
  height_gte?: string;
  width_ne?: string;
  hash_lt?: string;
  role_gt?: string;
  width_gt?: string;
  mimetype_in?: Array<string | null>;
  mimetype_lt?: string;
  weight_lt?: string;
  subtitle_nin?: Array<string | null>;
  subtitle?: string;
  mimetype_gte?: string;
  subtitle_gt?: string;
  hash_ne?: string;
  height_lte?: string;
  hash_nin?: Array<string | null>;
  subtitle_in?: Array<string | null>;
  hash_in?: Array<string | null>;
  height_lt?: string;
  mimetype?: string;
  mimetype_exists?: boolean;
  width_lt?: string;
  role?: string;
  height_ne?: string;
  weight?: string;
  width?: string;
  mimetype_nin?: Array<string | null>;
  width_exists?: boolean;
  role_lte?: string;
  subtitle_exists?: boolean;
  width_gte?: string;
}

export interface GQLAskRawValue {
  askTime?: number;
  askValue?: string;
}

export enum GQLUi_managementSortByInput {
  ASSETID_DESC = 'ASSETID_DESC',
  ITEMID_ASC = 'ITEMID_ASC',
  MODULESCOPE_ASC = 'MODULESCOPE_ASC',
  AIRTABLEID_DESC = 'AIRTABLEID_DESC',
  ASSETTITLE_ASC = 'ASSETTITLE_ASC',
  ITEMLINK_DESC = 'ITEMLINK_DESC',
  MODULENAME_ASC = 'MODULENAME_ASC',
  VISIBILITYSTATUS_DESC = 'VISIBILITYSTATUS_DESC',
  ASSETID_ASC = 'ASSETID_ASC',
  MODULEID_ASC = 'MODULEID_ASC',
  MODULEID_DESC = 'MODULEID_DESC',
  _ID_DESC = '_ID_DESC',
  IMAGE_ASC = 'IMAGE_ASC',
  RECORDID_ASC = 'RECORDID_ASC',
  RECORDID_DESC = 'RECORDID_DESC',
  ASSETTITLE_DESC = 'ASSETTITLE_DESC',
  MODULEITEMTYPE_ASC = 'MODULEITEMTYPE_ASC',
  ITEMID_DESC = 'ITEMID_DESC',
  ITEMLINK_ASC = 'ITEMLINK_ASC',
  MODULEITEMTYPE_DESC = 'MODULEITEMTYPE_DESC',
  MODULESCOPE_DESC = 'MODULESCOPE_DESC',
  CREATEDAT_ASC = 'CREATEDAT_ASC',
  _ID_ASC = '_ID_ASC',
  IMAGE_DESC = 'IMAGE_DESC',
  MODULENAME_DESC = 'MODULENAME_DESC',
  AIRTABLEID_ASC = 'AIRTABLEID_ASC',
  UPDATEDAT_ASC = 'UPDATEDAT_ASC',
  UPDATEDAT_DESC = 'UPDATEDAT_DESC',
  VISIBILITYSTATUS_ASC = 'VISIBILITYSTATUS_ASC',
  CREATEDAT_DESC = 'CREATEDAT_DESC'
}

export interface GQLAuctionDeployedInsertInput {
  tokenAddress?: string;
  finalBid?: string;
  superType?: string;
  tokenID?: string;
  auctionAddress?: string;
  status?: string;
  bids?: Array<GQLAuctionDeployedBidInsertInput | null>;
  showcaseFee?: string;
  startBid?: string;
  bidStep?: string;
  endTime?: number;
  startTime?: number;
}

export interface GQLCommissionInsertInput {
  description?: string;
  type?: string;
  value?: string;
  valueBNB?: string;
  _id?: GQLObjectId;
  blockchain?: string;
  commissionId?: string;
}

export interface GQLTokenDeployedStampQueryInput {
  tokenID_in?: Array<string | null>;
  tokenID_ne?: string;
  AND?: Array<GQLTokenDeployedStampQueryInput>;
  tokenID_lte?: string;
  tokenID_nin?: Array<string | null>;
  tokenID_exists?: boolean;
  OR?: Array<GQLTokenDeployedStampQueryInput>;
  tokenID_gt?: string;
  tokenID_lt?: string;
  tokenID?: string;
  tokenID_gte?: string;
}

export interface GQLSwift_messageMessage {
  actionCode?: string;
  discoveryTime?: number;
  parsingTime?: number;
  resolution?: string;
  senderAddress?: string;
  superType?: string;
  time?: number;
}

export interface GQLLike {
  _id?: GQLObjectId;
  seriesID?: string;
  status?: boolean;
  tokenID?: string;
  userAccountNumber?: number;
}

export interface GQLSeriesUpdateInput {
  deployed?: GQLSeriesDeployedUpdateInput;
  _id_unset?: boolean;
  seriesID_unset?: boolean;
  createdAt_inc?: number;
  updatedAt?: number;
  seriesID?: string;
  _id?: GQLObjectId;
  raw?: GQLSeriesRawUpdateInput;
  updatedAt_unset?: boolean;
  createdAt_unset?: boolean;
  deployed_unset?: boolean;
  createdAt?: number;
  raw_unset?: boolean;
  updatedAt_inc?: number;
}

export interface GQLActionColQueryInput {
  _id_exists?: boolean;
  _id_lt?: GQLObjectId;
  _id_gt?: GQLObjectId;
  _id?: GQLObjectId;
  _id_nin?: Array<GQLObjectId | null>;
  _id_ne?: GQLObjectId;
  tokenAttributes_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  tokenAttributes?: GQLActionColTokenAttributeQueryInput;
  _id_lte?: GQLObjectId;
  OR?: Array<GQLActionColQueryInput>;
  AND?: Array<GQLActionColQueryInput>;
  actionAttributes_exists?: boolean;
  _id_gte?: GQLObjectId;
  message?: GQLActionColMessageQueryInput;
  actionAttributes?: GQLActionColActionAttributeQueryInput;
  message_exists?: boolean;
}

export interface GQLBlockchainQueryInput {
  contractsRepo_lt?: string;
  name_lt?: string;
  contractsRepo_in?: Array<string | null>;
  OR?: Array<GQLBlockchainQueryInput>;
  contractsRepo_exists?: boolean;
  _id_in?: Array<GQLObjectId | null>;
  name_exists?: boolean;
  _id?: GQLObjectId;
  network_exists?: boolean;
  name_lte?: string;
  contractsRepo_gt?: string;
  _id_ne?: GQLObjectId;
  _id_gt?: GQLObjectId;
  _id_gte?: GQLObjectId;
  _id_nin?: Array<GQLObjectId | null>;
  contractsRepo_nin?: Array<string | null>;
  name_in?: Array<string | null>;
  name_gte?: string;
  name_gt?: string;
  contractsRepo_lte?: string;
  _id_lte?: GQLObjectId;
  name_nin?: Array<string | null>;
  AND?: Array<GQLBlockchainQueryInput>;
  name_ne?: string;
  name?: string;
  network?: GQLBlockchainNetworkQueryInput;
  contractsRepo_ne?: string;
  contractsRepo_gte?: string;
  _id_lt?: GQLObjectId;
  contractsRepo?: string;
  _id_exists?: boolean;
}

export interface GQLEventInsertInput {
  blockNumber?: GQLLong;
  topics?: Array<string | null>;
  parameters?: GQLEventParameterInsertInput;
  status?: string;
  createdAt?: number;
  blockchain?: string;
  message?: GQLEventMessageInsertInput;
  _id?: GQLObjectId;
  updatedAt?: number;
}

export interface GQLSeriesRawMedium {
  hash?: string;
  height?: number;
  ipfsHash?: string;
  mimetype?: string;
  role?: string;
  subtitle?: string;
  weight?: number;
  width?: number;
}

export interface GQLContract_typeParameterQueryInput {
  likesLevel_gte?: string;
  hashLevel_gt?: string;
  likesLevel_lte?: string;
  sharesLevel_ne?: string;
  sharesLevel_nin?: Array<string | null>;
  likesLevel_lt?: string;
  hashLevel?: string;
  likesLevel_in?: Array<string | null>;
  hashLevel_lt?: string;
  hashLevel_nin?: Array<string | null>;
  hashLevel_in?: Array<string | null>;
  likesLevel?: string;
  hashLevel_exists?: boolean;
  hashLevel_gte?: string;
  likesLevel_exists?: boolean;
  likesLevel_ne?: string;
  OR?: Array<GQLContract_typeParameterQueryInput>;
  hashLevel_lte?: string;
  sharesLevel_lte?: string;
  sharesLevel_gt?: string;
  sharesLevel_in?: Array<string | null>;
  sharesLevel?: string;
  likesLevel_nin?: Array<string | null>;
  AND?: Array<GQLContract_typeParameterQueryInput>;
  hashLevel_ne?: string;
  sharesLevel_exists?: boolean;
  sharesLevel_lt?: string;
  sharesLevel_gte?: string;
  likesLevel_gt?: string;
}

export interface GQLSeriesDeployedUpdateInput {
  owner?: string;
  supply_inc?: number;
  maximum_unset?: boolean;
  type?: string;
  address_unset?: boolean;
  superType_unset?: boolean;
  supply?: number;
  type_unset?: boolean;
  creatorFees_unset?: boolean;
  address?: string;
  maximum?: number;
  maximum_inc?: number;
  creator_unset?: boolean;
  hash_unset?: boolean;
  superType?: string;
  supply_unset?: boolean;
  owner_unset?: boolean;
  creator?: string;
  creatorFees?: string;
  blockchain?: string;
  blockchain_unset?: boolean;
  hash?: string;
}

/*********************************
 *                               *
 *         TYPE RESOLVERS        *
 *                               *
 *********************************/
/**
 * This interface define the shape of your resolver
 * Note that this type is designed to be compatible with graphql-tools resolvers
 * However, you can still use other generated interfaces to make your resolver type-safed
 */
export interface GQLResolver {
  EventMessage?: GQLEventMessageTypeResolver;
  UserMergedAccount?: GQLUserMergedAccountTypeResolver;
  ActionCol?: GQLActionColTypeResolver;
  SeriesRaw?: GQLSeriesRawTypeResolver;
  Opendatum?: GQLOpendatumTypeResolver;
  TokenDeployed?: GQLTokenDeployedTypeResolver;
  New_session?: GQLNew_sessionTypeResolver;
  AuctionRawBid?: GQLAuctionRawBidTypeResolver;
  TokenCol?: GQLTokenColTypeResolver;
  SeriesDeployed?: GQLSeriesDeployedTypeResolver;
  Collection?: GQLCollectionTypeResolver;
  CollectionMedium?: GQLCollectionMediumTypeResolver;
  Auction?: GQLAuctionTypeResolver;
  Primary_json?: GQLPrimary_jsonTypeResolver;
  Contract_typeHashFieldLayer?: GQLContract_typeHashFieldLayerTypeResolver;
  AskDeployedValue?: GQLAskDeployedValueTypeResolver;
  Integration?: GQLIntegrationTypeResolver;
  Mutation?: GQLMutationTypeResolver;
  Ui_chart?: GQLUi_chartTypeResolver;
  Test?: GQLTestTypeResolver;
  Series?: GQLSeriesTypeResolver;
  Col1?: GQLCol1TypeResolver;
  Contract_typeAbi?: GQLContract_typeAbiTypeResolver;
  AuctionDeployed?: GQLAuctionDeployedTypeResolver;
  AskDeployed?: GQLAskDeployedTypeResolver;
  Subscription?: GQLSubscriptionTypeResolver;
  UpdateManyPayload?: GQLUpdateManyPayloadTypeResolver;
  Col1Layer?: GQLCol1LayerTypeResolver;
  Contract_typeHashField?: GQLContract_typeHashFieldTypeResolver;
  Contract?: GQLContractTypeResolver;
  Ui_management?: GQLUi_managementTypeResolver;
  ActionColActionAttribute?: GQLActionColActionAttributeTypeResolver;
  Contract_typeHashFieldMedium?: GQLContract_typeHashFieldMediumTypeResolver;
  Blockchain?: GQLBlockchainTypeResolver;
  User?: GQLUserTypeResolver;
  OpendatumPermission?: GQLOpendatumPermissionTypeResolver;
  Bid?: GQLBidTypeResolver;
  ActionColMessage?: GQLActionColMessageTypeResolver;
  Contract_typeParameter?: GQLContract_typeParameterTypeResolver;
  CollectionRaw?: GQLCollectionRawTypeResolver;
  ActionColTokenAttribute?: GQLActionColTokenAttributeTypeResolver;
  Hourly?: GQLHourlyTypeResolver;
  Action?: GQLActionTypeResolver;
  Contract_typeHashFieldLayerImage?: GQLContract_typeHashFieldLayerImageTypeResolver;
  Locale?: GQLLocaleTypeResolver;
  Event?: GQLEventTypeResolver;
  CollectionDeployed?: GQLCollectionDeployedTypeResolver;
  Session?: GQLSessionTypeResolver;
  Ask?: GQLAskTypeResolver;
  Ipf?: GQLIpfTypeResolver;
  CollectionRawMedium?: GQLCollectionRawMediumTypeResolver;
  InsertManyPayload?: GQLInsertManyPayloadTypeResolver;
  Swift_message?: GQLSwift_messageTypeResolver;
  AskRaw?: GQLAskRawTypeResolver;
  Token?: GQLTokenTypeResolver;
  Royalty?: GQLRoyaltyTypeResolver;
  Col1LayerPoint?: GQLCol1LayerPointTypeResolver;
  TokenRawMedium?: GQLTokenRawMediumTypeResolver;
  TestTemporaryEndorsement?: GQLTestTemporaryEndorsementTypeResolver;
  Daily?: GQLDailyTypeResolver;
  Module?: GQLModuleTypeResolver;
  EndorsementRaw?: GQLEndorsementRawTypeResolver;
  TokenDeployedStamp?: GQLTokenDeployedStampTypeResolver;
  Commission?: GQLCommissionTypeResolver;
  ActionTokenAttribute?: GQLActionTokenAttributeTypeResolver;
  Ui_module?: GQLUi_moduleTypeResolver;
  Endorsement?: GQLEndorsementTypeResolver;
  BlockchainNetworkMain?: GQLBlockchainNetworkMainTypeResolver;
  BidDeployed?: GQLBidDeployedTypeResolver;
  Ui_asset?: GQLUi_assetTypeResolver;
  Address_abi?: GQLAddress_abiTypeResolver;
  Swift_code?: GQLSwift_codeTypeResolver;
  Swift_messageParameter?: GQLSwift_messageParameterTypeResolver;
  Network?: GQLNetworkTypeResolver;
  ActionMessage?: GQLActionMessageTypeResolver;
  Trigger?: GQLTriggerTypeResolver;
  Query?: GQLQueryTypeResolver;
  Contract_type?: GQLContract_typeTypeResolver;
  BlockchainNetwork?: GQLBlockchainNetworkTypeResolver;
  BlockchainNetworkTest?: GQLBlockchainNetworkTestTypeResolver;
  ObjectId?: GraphQLScalarType;
  TokenColImage?: GQLTokenColImageTypeResolver;
  UserIntegration?: GQLUserIntegrationTypeResolver;
  UserSetting?: GQLUserSettingTypeResolver;
  ActionActionAttribute?: GQLActionActionAttributeTypeResolver;
  TokenRaw?: GQLTokenRawTypeResolver;
  AuctionRaw?: GQLAuctionRawTypeResolver;
  Col1LayerImage?: GQLCol1LayerImageTypeResolver;
  AuctionDeployedBid?: GQLAuctionDeployedBidTypeResolver;
  TestCrossEndorsement?: GQLTestCrossEndorsementTypeResolver;
  EventParameter?: GQLEventParameterTypeResolver;
  BidRaw?: GQLBidRawTypeResolver;
  DeleteManyPayload?: GQLDeleteManyPayloadTypeResolver;
  Format?: GQLFormatTypeResolver;
  EndorsementDeployed?: GQLEndorsementDeployedTypeResolver;
  Long?: GraphQLScalarType;
  AskRawValue?: GQLAskRawValueTypeResolver;
  Swift_messageMessage?: GQLSwift_messageMessageTypeResolver;
  Like?: GQLLikeTypeResolver;
  SeriesRawMedium?: GQLSeriesRawMediumTypeResolver;
}
export interface GQLEventMessageTypeResolver<TParent = any> {
  eventName?: EventMessageToEventNameResolver<TParent>;
  parsingTime?: EventMessageToParsingTimeResolver<TParent>;
  senderAddress?: EventMessageToSenderAddressResolver<TParent>;
  superType?: EventMessageToSuperTypeResolver<TParent>;
  time?: EventMessageToTimeResolver<TParent>;
  txHash?: EventMessageToTxHashResolver<TParent>;
}

export interface EventMessageToEventNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventMessageToParsingTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventMessageToSenderAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventMessageToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventMessageToTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventMessageToTxHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUserMergedAccountTypeResolver<TParent = any> {
  accountNumber?: UserMergedAccountToAccountNumberResolver<TParent>;
  status?: UserMergedAccountToStatusResolver<TParent>;
}

export interface UserMergedAccountToAccountNumberResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserMergedAccountToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionColTypeResolver<TParent = any> {
  _id?: ActionColTo_idResolver<TParent>;
  actionAttributes?: ActionColToActionAttributesResolver<TParent>;
  message?: ActionColToMessageResolver<TParent>;
  tokenAttributes?: ActionColToTokenAttributesResolver<TParent>;
}

export interface ActionColTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColToActionAttributesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColToMessageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColToTokenAttributesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSeriesRawTypeResolver<TParent = any> {
  blockchain?: SeriesRawToBlockchainResolver<TParent>;
  collectionID?: SeriesRawToCollectionIDResolver<TParent>;
  creator?: SeriesRawToCreatorResolver<TParent>;
  creatorFees?: SeriesRawToCreatorFeesResolver<TParent>;
  description?: SeriesRawToDescriptionResolver<TParent>;
  hash?: SeriesRawToHashResolver<TParent>;
  media?: SeriesRawToMediaResolver<TParent>;
  numberOfEditions?: SeriesRawToNumberOfEditionsResolver<TParent>;
  qualification?: SeriesRawToQualificationResolver<TParent>;
  superType?: SeriesRawToSuperTypeResolver<TParent>;
  title?: SeriesRawToTitleResolver<TParent>;
  type?: SeriesRawToTypeResolver<TParent>;
  usersWhoShared?: SeriesRawToUsersWhoSharedResolver<TParent>;
}

export interface SeriesRawToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToCollectionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToCreatorFeesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToMediaResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToNumberOfEditionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToQualificationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawToUsersWhoSharedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLOpendatumTypeResolver<TParent = any> {
  _id?: OpendatumTo_idResolver<TParent>;
  createdAt?: OpendatumToCreatedAtResolver<TParent>;
  key?: OpendatumToKeyResolver<TParent>;
  permissions?: OpendatumToPermissionsResolver<TParent>;
  updatedAt?: OpendatumToUpdatedAtResolver<TParent>;
}

export interface OpendatumTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface OpendatumToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface OpendatumToKeyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface OpendatumToPermissionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface OpendatumToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenDeployedTypeResolver<TParent = any> {
  address?: TokenDeployedToAddressResolver<TParent>;
  blockchain?: TokenDeployedToBlockchainResolver<TParent>;
  collectionID?: TokenDeployedToCollectionIDResolver<TParent>;
  creator?: TokenDeployedToCreatorResolver<TParent>;
  creatorFees?: TokenDeployedToCreatorFeesResolver<TParent>;
  creatorObject?: TokenDeployedToCreatorObjectResolver<TParent>;
  foreverID?: TokenDeployedToForeverIDResolver<TParent>;
  foreverStatus?: TokenDeployedToForeverStatusResolver<TParent>;
  frontStatus?: TokenDeployedToFrontStatusResolver<TParent>;
  hash?: TokenDeployedToHashResolver<TParent>;
  index?: TokenDeployedToIndexResolver<TParent>;
  isEndorsed?: TokenDeployedToIsEndorsedResolver<TParent>;
  lastSalePrice?: TokenDeployedToLastSalePriceResolver<TParent>;
  lastSaleTime?: TokenDeployedToLastSaleTimeResolver<TParent>;
  manager?: TokenDeployedToManagerResolver<TParent>;
  managerExpirationTime?: TokenDeployedToManagerExpirationTimeResolver<TParent>;
  owner?: TokenDeployedToOwnerResolver<TParent>;
  ownerObject?: TokenDeployedToOwnerObjectResolver<TParent>;
  seal?: TokenDeployedToSealResolver<TParent>;
  sealPosition?: TokenDeployedToSealPositionResolver<TParent>;
  seriesID?: TokenDeployedToSeriesIDResolver<TParent>;
  seriesObject?: TokenDeployedToSeriesObjectResolver<TParent>;
  stamps?: TokenDeployedToStampsResolver<TParent>;
  superType?: TokenDeployedToSuperTypeResolver<TParent>;
  type?: TokenDeployedToTypeResolver<TParent>;
}

export interface TokenDeployedToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToCollectionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToCreatorFeesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToCreatorObjectResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToForeverIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToForeverStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToFrontStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToIndexResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToIsEndorsedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToLastSalePriceResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToLastSaleTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToManagerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToManagerExpirationTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToOwnerObjectResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToSealResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToSealPositionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToSeriesIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToSeriesObjectResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToStampsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenDeployedToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLNew_sessionTypeResolver<TParent = any> {
  _id?: New_sessionTo_idResolver<TParent>;
  token?: New_sessionToTokenResolver<TParent>;
  walletAddress?: New_sessionToWalletAddressResolver<TParent>;
}

export interface New_sessionTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface New_sessionToTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface New_sessionToWalletAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAuctionRawBidTypeResolver<TParent = any> {
  bidCreator?: AuctionRawBidToBidCreatorResolver<TParent>;
  bidValue?: AuctionRawBidToBidValueResolver<TParent>;
}

export interface AuctionRawBidToBidCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawBidToBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenColTypeResolver<TParent = any> {
  _id?: TokenColTo_idResolver<TParent>;
  address?: TokenColToAddressResolver<TParent>;
  createdAt?: TokenColToCreatedAtResolver<TParent>;
  images?: TokenColToImagesResolver<TParent>;
  merged?: TokenColToMergedResolver<TParent>;
  owner?: TokenColToOwnerResolver<TParent>;
  seriesId?: TokenColToSeriesIdResolver<TParent>;
  tokenId?: TokenColToTokenIdResolver<TParent>;
  updatedAt?: TokenColToUpdatedAtResolver<TParent>;
}

export interface TokenColTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToImagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToMergedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToSeriesIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToTokenIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSeriesDeployedTypeResolver<TParent = any> {
  address?: SeriesDeployedToAddressResolver<TParent>;
  blockchain?: SeriesDeployedToBlockchainResolver<TParent>;
  creator?: SeriesDeployedToCreatorResolver<TParent>;
  creatorFees?: SeriesDeployedToCreatorFeesResolver<TParent>;
  hash?: SeriesDeployedToHashResolver<TParent>;
  maximum?: SeriesDeployedToMaximumResolver<TParent>;
  owner?: SeriesDeployedToOwnerResolver<TParent>;
  superType?: SeriesDeployedToSuperTypeResolver<TParent>;
  supply?: SeriesDeployedToSupplyResolver<TParent>;
  type?: SeriesDeployedToTypeResolver<TParent>;
}

export interface SeriesDeployedToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToCreatorFeesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToMaximumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToSupplyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesDeployedToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCollectionTypeResolver<TParent = any> {
  _id?: CollectionTo_idResolver<TParent>;
  about?: CollectionToAboutResolver<TParent>;
  collectionID?: CollectionToCollectionIDResolver<TParent>;
  createdAt?: CollectionToCreatedAtResolver<TParent>;
  creator?: CollectionToCreatorResolver<TParent>;
  creatorAccountNumber?: CollectionToCreatorAccountNumberResolver<TParent>;
  deployed?: CollectionToDeployedResolver<TParent>;
  media?: CollectionToMediaResolver<TParent>;
  qualification?: CollectionToQualificationResolver<TParent>;
  raw?: CollectionToRawResolver<TParent>;
  title?: CollectionToTitleResolver<TParent>;
  tokensInCollection?: CollectionToTokensInCollectionResolver<TParent>;
  updatedAt?: CollectionToUpdatedAtResolver<TParent>;
}

export interface CollectionTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToAboutResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToCollectionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToCreatorAccountNumberResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToMediaResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToQualificationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToTokensInCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCollectionMediumTypeResolver<TParent = any> {
  hash?: CollectionMediumToHashResolver<TParent>;
  height?: CollectionMediumToHeightResolver<TParent>;
  mimetype?: CollectionMediumToMimetypeResolver<TParent>;
  role?: CollectionMediumToRoleResolver<TParent>;
  subtitle?: CollectionMediumToSubtitleResolver<TParent>;
  weight?: CollectionMediumToWeightResolver<TParent>;
  width?: CollectionMediumToWidthResolver<TParent>;
}

export interface CollectionMediumToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionMediumToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionMediumToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionMediumToRoleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionMediumToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionMediumToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionMediumToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAuctionTypeResolver<TParent = any> {
  _id?: AuctionTo_idResolver<TParent>;
  auctionID?: AuctionToAuctionIDResolver<TParent>;
  createdAt?: AuctionToCreatedAtResolver<TParent>;
  deployed?: AuctionToDeployedResolver<TParent>;
  raw?: AuctionToRawResolver<TParent>;
  updatedAt?: AuctionToUpdatedAtResolver<TParent>;
}

export interface AuctionTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionToAuctionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLPrimary_jsonTypeResolver<TParent = any> {
  _id?: Primary_jsonTo_idResolver<TParent>;
  createdAt?: Primary_jsonToCreatedAtResolver<TParent>;
  hash?: Primary_jsonToHashResolver<TParent>;
  jsonString?: Primary_jsonToJsonStringResolver<TParent>;
}

export interface Primary_jsonTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Primary_jsonToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Primary_jsonToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Primary_jsonToJsonStringResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeHashFieldLayerTypeResolver<TParent = any> {
  images?: Contract_typeHashFieldLayerToImagesResolver<TParent>;
  layerIndex?: Contract_typeHashFieldLayerToLayerIndexResolver<TParent>;
}

export interface Contract_typeHashFieldLayerToImagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldLayerToLayerIndexResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAskDeployedValueTypeResolver<TParent = any> {
  askTime?: AskDeployedValueToAskTimeResolver<TParent>;
  askValue?: AskDeployedValueToAskValueResolver<TParent>;
}

export interface AskDeployedValueToAskTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedValueToAskValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLIntegrationTypeResolver<TParent = any> {
  _id?: IntegrationTo_idResolver<TParent>;
  blockchain?: IntegrationToBlockchainResolver<TParent>;
  code?: IntegrationToCodeResolver<TParent>;
  name?: IntegrationToNameResolver<TParent>;
  status?: IntegrationToStatusResolver<TParent>;
  subType?: IntegrationToSubTypeResolver<TParent>;
  type?: IntegrationToTypeResolver<TParent>;
}

export interface IntegrationTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IntegrationToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IntegrationToCodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IntegrationToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IntegrationToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IntegrationToSubTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IntegrationToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLMutationTypeResolver<TParent = any> {
  deleteManyActionCols?: MutationToDeleteManyActionColsResolver<TParent>;
  deleteManyActions?: MutationToDeleteManyActionsResolver<TParent>;
  deleteManyAddress_abis?: MutationToDeleteManyAddress_abisResolver<TParent>;
  deleteManyAsks?: MutationToDeleteManyAsksResolver<TParent>;
  deleteManyAuctions?: MutationToDeleteManyAuctionsResolver<TParent>;
  deleteManyBids?: MutationToDeleteManyBidsResolver<TParent>;
  deleteManyBlockchains?: MutationToDeleteManyBlockchainsResolver<TParent>;
  deleteManyCol1s?: MutationToDeleteManyCol1sResolver<TParent>;
  deleteManyCollections?: MutationToDeleteManyCollectionsResolver<TParent>;
  deleteManyCommissions?: MutationToDeleteManyCommissionsResolver<TParent>;
  deleteManyContract_types?: MutationToDeleteManyContract_typesResolver<TParent>;
  deleteManyContracts?: MutationToDeleteManyContractsResolver<TParent>;
  deleteManyDailies?: MutationToDeleteManyDailiesResolver<TParent>;
  deleteManyEndorsements?: MutationToDeleteManyEndorsementsResolver<TParent>;
  deleteManyEvents?: MutationToDeleteManyEventsResolver<TParent>;
  deleteManyFormats?: MutationToDeleteManyFormatsResolver<TParent>;
  deleteManyHourlies?: MutationToDeleteManyHourliesResolver<TParent>;
  deleteManyIntegrations?: MutationToDeleteManyIntegrationsResolver<TParent>;
  deleteManyIpfs?: MutationToDeleteManyIpfsResolver<TParent>;
  deleteManyLikes?: MutationToDeleteManyLikesResolver<TParent>;
  deleteManyLocales?: MutationToDeleteManyLocalesResolver<TParent>;
  deleteManyModules?: MutationToDeleteManyModulesResolver<TParent>;
  deleteManyNetworks?: MutationToDeleteManyNetworksResolver<TParent>;
  deleteManyNew_sessions?: MutationToDeleteManyNew_sessionsResolver<TParent>;
  deleteManyOpendata?: MutationToDeleteManyOpendataResolver<TParent>;
  deleteManyPrimary_jsons?: MutationToDeleteManyPrimary_jsonsResolver<TParent>;
  deleteManyRoyalties?: MutationToDeleteManyRoyaltiesResolver<TParent>;
  deleteManySeriess?: MutationToDeleteManySeriessResolver<TParent>;
  deleteManySessions?: MutationToDeleteManySessionsResolver<TParent>;
  deleteManySubscriptions?: MutationToDeleteManySubscriptionsResolver<TParent>;
  deleteManySwift_codes?: MutationToDeleteManySwift_codesResolver<TParent>;
  deleteManySwift_messages?: MutationToDeleteManySwift_messagesResolver<TParent>;
  deleteManyTests?: MutationToDeleteManyTestsResolver<TParent>;
  deleteManyTokenCols?: MutationToDeleteManyTokenColsResolver<TParent>;
  deleteManyTokens?: MutationToDeleteManyTokensResolver<TParent>;
  deleteManyTriggers?: MutationToDeleteManyTriggersResolver<TParent>;
  deleteManyUi_assets?: MutationToDeleteManyUi_assetsResolver<TParent>;
  deleteManyUi_charts?: MutationToDeleteManyUi_chartsResolver<TParent>;
  deleteManyUi_managements?: MutationToDeleteManyUi_managementsResolver<TParent>;
  deleteManyUi_modules?: MutationToDeleteManyUi_modulesResolver<TParent>;
  deleteManyUsers?: MutationToDeleteManyUsersResolver<TParent>;
  deleteOneAction?: MutationToDeleteOneActionResolver<TParent>;
  deleteOneActionCol?: MutationToDeleteOneActionColResolver<TParent>;
  deleteOneAddress_abi?: MutationToDeleteOneAddress_abiResolver<TParent>;
  deleteOneAsk?: MutationToDeleteOneAskResolver<TParent>;
  deleteOneAuction?: MutationToDeleteOneAuctionResolver<TParent>;
  deleteOneBid?: MutationToDeleteOneBidResolver<TParent>;
  deleteOneBlockchain?: MutationToDeleteOneBlockchainResolver<TParent>;
  deleteOneCol1?: MutationToDeleteOneCol1Resolver<TParent>;
  deleteOneCollection?: MutationToDeleteOneCollectionResolver<TParent>;
  deleteOneCommission?: MutationToDeleteOneCommissionResolver<TParent>;
  deleteOneContract?: MutationToDeleteOneContractResolver<TParent>;
  deleteOneContract_type?: MutationToDeleteOneContract_typeResolver<TParent>;
  deleteOneDaily?: MutationToDeleteOneDailyResolver<TParent>;
  deleteOneEndorsement?: MutationToDeleteOneEndorsementResolver<TParent>;
  deleteOneEvent?: MutationToDeleteOneEventResolver<TParent>;
  deleteOneFormat?: MutationToDeleteOneFormatResolver<TParent>;
  deleteOneHourly?: MutationToDeleteOneHourlyResolver<TParent>;
  deleteOneIntegration?: MutationToDeleteOneIntegrationResolver<TParent>;
  deleteOneIpf?: MutationToDeleteOneIpfResolver<TParent>;
  deleteOneLike?: MutationToDeleteOneLikeResolver<TParent>;
  deleteOneLocale?: MutationToDeleteOneLocaleResolver<TParent>;
  deleteOneModule?: MutationToDeleteOneModuleResolver<TParent>;
  deleteOneNetwork?: MutationToDeleteOneNetworkResolver<TParent>;
  deleteOneNew_session?: MutationToDeleteOneNew_sessionResolver<TParent>;
  deleteOneOpendatum?: MutationToDeleteOneOpendatumResolver<TParent>;
  deleteOnePrimary_json?: MutationToDeleteOnePrimary_jsonResolver<TParent>;
  deleteOneRoyalty?: MutationToDeleteOneRoyaltyResolver<TParent>;
  deleteOneSeries?: MutationToDeleteOneSeriesResolver<TParent>;
  deleteOneSession?: MutationToDeleteOneSessionResolver<TParent>;
  deleteOneSubscription?: MutationToDeleteOneSubscriptionResolver<TParent>;
  deleteOneSwift_code?: MutationToDeleteOneSwift_codeResolver<TParent>;
  deleteOneSwift_message?: MutationToDeleteOneSwift_messageResolver<TParent>;
  deleteOneTest?: MutationToDeleteOneTestResolver<TParent>;
  deleteOneToken?: MutationToDeleteOneTokenResolver<TParent>;
  deleteOneTokenCol?: MutationToDeleteOneTokenColResolver<TParent>;
  deleteOneTrigger?: MutationToDeleteOneTriggerResolver<TParent>;
  deleteOneUi_asset?: MutationToDeleteOneUi_assetResolver<TParent>;
  deleteOneUi_chart?: MutationToDeleteOneUi_chartResolver<TParent>;
  deleteOneUi_management?: MutationToDeleteOneUi_managementResolver<TParent>;
  deleteOneUi_module?: MutationToDeleteOneUi_moduleResolver<TParent>;
  deleteOneUser?: MutationToDeleteOneUserResolver<TParent>;
  insertManyActionCols?: MutationToInsertManyActionColsResolver<TParent>;
  insertManyActions?: MutationToInsertManyActionsResolver<TParent>;
  insertManyAddress_abis?: MutationToInsertManyAddress_abisResolver<TParent>;
  insertManyAsks?: MutationToInsertManyAsksResolver<TParent>;
  insertManyAuctions?: MutationToInsertManyAuctionsResolver<TParent>;
  insertManyBids?: MutationToInsertManyBidsResolver<TParent>;
  insertManyBlockchains?: MutationToInsertManyBlockchainsResolver<TParent>;
  insertManyCol1s?: MutationToInsertManyCol1sResolver<TParent>;
  insertManyCollections?: MutationToInsertManyCollectionsResolver<TParent>;
  insertManyCommissions?: MutationToInsertManyCommissionsResolver<TParent>;
  insertManyContract_types?: MutationToInsertManyContract_typesResolver<TParent>;
  insertManyContracts?: MutationToInsertManyContractsResolver<TParent>;
  insertManyDailies?: MutationToInsertManyDailiesResolver<TParent>;
  insertManyEndorsements?: MutationToInsertManyEndorsementsResolver<TParent>;
  insertManyEvents?: MutationToInsertManyEventsResolver<TParent>;
  insertManyFormats?: MutationToInsertManyFormatsResolver<TParent>;
  insertManyHourlies?: MutationToInsertManyHourliesResolver<TParent>;
  insertManyIntegrations?: MutationToInsertManyIntegrationsResolver<TParent>;
  insertManyIpfs?: MutationToInsertManyIpfsResolver<TParent>;
  insertManyLikes?: MutationToInsertManyLikesResolver<TParent>;
  insertManyLocales?: MutationToInsertManyLocalesResolver<TParent>;
  insertManyModules?: MutationToInsertManyModulesResolver<TParent>;
  insertManyNetworks?: MutationToInsertManyNetworksResolver<TParent>;
  insertManyNew_sessions?: MutationToInsertManyNew_sessionsResolver<TParent>;
  insertManyOpendata?: MutationToInsertManyOpendataResolver<TParent>;
  insertManyPrimary_jsons?: MutationToInsertManyPrimary_jsonsResolver<TParent>;
  insertManyRoyalties?: MutationToInsertManyRoyaltiesResolver<TParent>;
  insertManySeriess?: MutationToInsertManySeriessResolver<TParent>;
  insertManySessions?: MutationToInsertManySessionsResolver<TParent>;
  insertManySubscriptions?: MutationToInsertManySubscriptionsResolver<TParent>;
  insertManySwift_codes?: MutationToInsertManySwift_codesResolver<TParent>;
  insertManySwift_messages?: MutationToInsertManySwift_messagesResolver<TParent>;
  insertManyTests?: MutationToInsertManyTestsResolver<TParent>;
  insertManyTokenCols?: MutationToInsertManyTokenColsResolver<TParent>;
  insertManyTokens?: MutationToInsertManyTokensResolver<TParent>;
  insertManyTriggers?: MutationToInsertManyTriggersResolver<TParent>;
  insertManyUi_assets?: MutationToInsertManyUi_assetsResolver<TParent>;
  insertManyUi_charts?: MutationToInsertManyUi_chartsResolver<TParent>;
  insertManyUi_managements?: MutationToInsertManyUi_managementsResolver<TParent>;
  insertManyUi_modules?: MutationToInsertManyUi_modulesResolver<TParent>;
  insertManyUsers?: MutationToInsertManyUsersResolver<TParent>;
  insertOneAction?: MutationToInsertOneActionResolver<TParent>;
  insertOneActionCol?: MutationToInsertOneActionColResolver<TParent>;
  insertOneAddress_abi?: MutationToInsertOneAddress_abiResolver<TParent>;
  insertOneAsk?: MutationToInsertOneAskResolver<TParent>;
  insertOneAuction?: MutationToInsertOneAuctionResolver<TParent>;
  insertOneBid?: MutationToInsertOneBidResolver<TParent>;
  insertOneBlockchain?: MutationToInsertOneBlockchainResolver<TParent>;
  insertOneCol1?: MutationToInsertOneCol1Resolver<TParent>;
  insertOneCollection?: MutationToInsertOneCollectionResolver<TParent>;
  insertOneCommission?: MutationToInsertOneCommissionResolver<TParent>;
  insertOneContract?: MutationToInsertOneContractResolver<TParent>;
  insertOneContract_type?: MutationToInsertOneContract_typeResolver<TParent>;
  insertOneDaily?: MutationToInsertOneDailyResolver<TParent>;
  insertOneEndorsement?: MutationToInsertOneEndorsementResolver<TParent>;
  insertOneEvent?: MutationToInsertOneEventResolver<TParent>;
  insertOneFormat?: MutationToInsertOneFormatResolver<TParent>;
  insertOneHourly?: MutationToInsertOneHourlyResolver<TParent>;
  insertOneIntegration?: MutationToInsertOneIntegrationResolver<TParent>;
  insertOneIpf?: MutationToInsertOneIpfResolver<TParent>;
  insertOneLike?: MutationToInsertOneLikeResolver<TParent>;
  insertOneLocale?: MutationToInsertOneLocaleResolver<TParent>;
  insertOneModule?: MutationToInsertOneModuleResolver<TParent>;
  insertOneNetwork?: MutationToInsertOneNetworkResolver<TParent>;
  insertOneNew_session?: MutationToInsertOneNew_sessionResolver<TParent>;
  insertOneOpendatum?: MutationToInsertOneOpendatumResolver<TParent>;
  insertOnePrimary_json?: MutationToInsertOnePrimary_jsonResolver<TParent>;
  insertOneRoyalty?: MutationToInsertOneRoyaltyResolver<TParent>;
  insertOneSeries?: MutationToInsertOneSeriesResolver<TParent>;
  insertOneSession?: MutationToInsertOneSessionResolver<TParent>;
  insertOneSubscription?: MutationToInsertOneSubscriptionResolver<TParent>;
  insertOneSwift_code?: MutationToInsertOneSwift_codeResolver<TParent>;
  insertOneSwift_message?: MutationToInsertOneSwift_messageResolver<TParent>;
  insertOneTest?: MutationToInsertOneTestResolver<TParent>;
  insertOneToken?: MutationToInsertOneTokenResolver<TParent>;
  insertOneTokenCol?: MutationToInsertOneTokenColResolver<TParent>;
  insertOneTrigger?: MutationToInsertOneTriggerResolver<TParent>;
  insertOneUi_asset?: MutationToInsertOneUi_assetResolver<TParent>;
  insertOneUi_chart?: MutationToInsertOneUi_chartResolver<TParent>;
  insertOneUi_management?: MutationToInsertOneUi_managementResolver<TParent>;
  insertOneUi_module?: MutationToInsertOneUi_moduleResolver<TParent>;
  insertOneUser?: MutationToInsertOneUserResolver<TParent>;
  replaceOneAction?: MutationToReplaceOneActionResolver<TParent>;
  replaceOneActionCol?: MutationToReplaceOneActionColResolver<TParent>;
  replaceOneAddress_abi?: MutationToReplaceOneAddress_abiResolver<TParent>;
  replaceOneAsk?: MutationToReplaceOneAskResolver<TParent>;
  replaceOneAuction?: MutationToReplaceOneAuctionResolver<TParent>;
  replaceOneBid?: MutationToReplaceOneBidResolver<TParent>;
  replaceOneBlockchain?: MutationToReplaceOneBlockchainResolver<TParent>;
  replaceOneCol1?: MutationToReplaceOneCol1Resolver<TParent>;
  replaceOneCollection?: MutationToReplaceOneCollectionResolver<TParent>;
  replaceOneCommission?: MutationToReplaceOneCommissionResolver<TParent>;
  replaceOneContract?: MutationToReplaceOneContractResolver<TParent>;
  replaceOneContract_type?: MutationToReplaceOneContract_typeResolver<TParent>;
  replaceOneDaily?: MutationToReplaceOneDailyResolver<TParent>;
  replaceOneEndorsement?: MutationToReplaceOneEndorsementResolver<TParent>;
  replaceOneEvent?: MutationToReplaceOneEventResolver<TParent>;
  replaceOneFormat?: MutationToReplaceOneFormatResolver<TParent>;
  replaceOneHourly?: MutationToReplaceOneHourlyResolver<TParent>;
  replaceOneIntegration?: MutationToReplaceOneIntegrationResolver<TParent>;
  replaceOneIpf?: MutationToReplaceOneIpfResolver<TParent>;
  replaceOneLike?: MutationToReplaceOneLikeResolver<TParent>;
  replaceOneLocale?: MutationToReplaceOneLocaleResolver<TParent>;
  replaceOneModule?: MutationToReplaceOneModuleResolver<TParent>;
  replaceOneNetwork?: MutationToReplaceOneNetworkResolver<TParent>;
  replaceOneNew_session?: MutationToReplaceOneNew_sessionResolver<TParent>;
  replaceOneOpendatum?: MutationToReplaceOneOpendatumResolver<TParent>;
  replaceOnePrimary_json?: MutationToReplaceOnePrimary_jsonResolver<TParent>;
  replaceOneRoyalty?: MutationToReplaceOneRoyaltyResolver<TParent>;
  replaceOneSeries?: MutationToReplaceOneSeriesResolver<TParent>;
  replaceOneSession?: MutationToReplaceOneSessionResolver<TParent>;
  replaceOneSubscription?: MutationToReplaceOneSubscriptionResolver<TParent>;
  replaceOneSwift_code?: MutationToReplaceOneSwift_codeResolver<TParent>;
  replaceOneSwift_message?: MutationToReplaceOneSwift_messageResolver<TParent>;
  replaceOneTest?: MutationToReplaceOneTestResolver<TParent>;
  replaceOneToken?: MutationToReplaceOneTokenResolver<TParent>;
  replaceOneTokenCol?: MutationToReplaceOneTokenColResolver<TParent>;
  replaceOneTrigger?: MutationToReplaceOneTriggerResolver<TParent>;
  replaceOneUi_asset?: MutationToReplaceOneUi_assetResolver<TParent>;
  replaceOneUi_chart?: MutationToReplaceOneUi_chartResolver<TParent>;
  replaceOneUi_management?: MutationToReplaceOneUi_managementResolver<TParent>;
  replaceOneUi_module?: MutationToReplaceOneUi_moduleResolver<TParent>;
  replaceOneUser?: MutationToReplaceOneUserResolver<TParent>;
  updateManyActionCols?: MutationToUpdateManyActionColsResolver<TParent>;
  updateManyActions?: MutationToUpdateManyActionsResolver<TParent>;
  updateManyAddress_abis?: MutationToUpdateManyAddress_abisResolver<TParent>;
  updateManyAsks?: MutationToUpdateManyAsksResolver<TParent>;
  updateManyAuctions?: MutationToUpdateManyAuctionsResolver<TParent>;
  updateManyBids?: MutationToUpdateManyBidsResolver<TParent>;
  updateManyBlockchains?: MutationToUpdateManyBlockchainsResolver<TParent>;
  updateManyCol1s?: MutationToUpdateManyCol1sResolver<TParent>;
  updateManyCollections?: MutationToUpdateManyCollectionsResolver<TParent>;
  updateManyCommissions?: MutationToUpdateManyCommissionsResolver<TParent>;
  updateManyContract_types?: MutationToUpdateManyContract_typesResolver<TParent>;
  updateManyContracts?: MutationToUpdateManyContractsResolver<TParent>;
  updateManyDailies?: MutationToUpdateManyDailiesResolver<TParent>;
  updateManyEndorsements?: MutationToUpdateManyEndorsementsResolver<TParent>;
  updateManyEvents?: MutationToUpdateManyEventsResolver<TParent>;
  updateManyFormats?: MutationToUpdateManyFormatsResolver<TParent>;
  updateManyHourlies?: MutationToUpdateManyHourliesResolver<TParent>;
  updateManyIntegrations?: MutationToUpdateManyIntegrationsResolver<TParent>;
  updateManyIpfs?: MutationToUpdateManyIpfsResolver<TParent>;
  updateManyLikes?: MutationToUpdateManyLikesResolver<TParent>;
  updateManyLocales?: MutationToUpdateManyLocalesResolver<TParent>;
  updateManyModules?: MutationToUpdateManyModulesResolver<TParent>;
  updateManyNetworks?: MutationToUpdateManyNetworksResolver<TParent>;
  updateManyNew_sessions?: MutationToUpdateManyNew_sessionsResolver<TParent>;
  updateManyOpendata?: MutationToUpdateManyOpendataResolver<TParent>;
  updateManyPrimary_jsons?: MutationToUpdateManyPrimary_jsonsResolver<TParent>;
  updateManyRoyalties?: MutationToUpdateManyRoyaltiesResolver<TParent>;
  updateManySeriess?: MutationToUpdateManySeriessResolver<TParent>;
  updateManySessions?: MutationToUpdateManySessionsResolver<TParent>;
  updateManySubscriptions?: MutationToUpdateManySubscriptionsResolver<TParent>;
  updateManySwift_codes?: MutationToUpdateManySwift_codesResolver<TParent>;
  updateManySwift_messages?: MutationToUpdateManySwift_messagesResolver<TParent>;
  updateManyTests?: MutationToUpdateManyTestsResolver<TParent>;
  updateManyTokenCols?: MutationToUpdateManyTokenColsResolver<TParent>;
  updateManyTokens?: MutationToUpdateManyTokensResolver<TParent>;
  updateManyTriggers?: MutationToUpdateManyTriggersResolver<TParent>;
  updateManyUi_assets?: MutationToUpdateManyUi_assetsResolver<TParent>;
  updateManyUi_charts?: MutationToUpdateManyUi_chartsResolver<TParent>;
  updateManyUi_managements?: MutationToUpdateManyUi_managementsResolver<TParent>;
  updateManyUi_modules?: MutationToUpdateManyUi_modulesResolver<TParent>;
  updateManyUsers?: MutationToUpdateManyUsersResolver<TParent>;
  updateOneAction?: MutationToUpdateOneActionResolver<TParent>;
  updateOneActionCol?: MutationToUpdateOneActionColResolver<TParent>;
  updateOneAddress_abi?: MutationToUpdateOneAddress_abiResolver<TParent>;
  updateOneAsk?: MutationToUpdateOneAskResolver<TParent>;
  updateOneAuction?: MutationToUpdateOneAuctionResolver<TParent>;
  updateOneBid?: MutationToUpdateOneBidResolver<TParent>;
  updateOneBlockchain?: MutationToUpdateOneBlockchainResolver<TParent>;
  updateOneCol1?: MutationToUpdateOneCol1Resolver<TParent>;
  updateOneCollection?: MutationToUpdateOneCollectionResolver<TParent>;
  updateOneCommission?: MutationToUpdateOneCommissionResolver<TParent>;
  updateOneContract?: MutationToUpdateOneContractResolver<TParent>;
  updateOneContract_type?: MutationToUpdateOneContract_typeResolver<TParent>;
  updateOneDaily?: MutationToUpdateOneDailyResolver<TParent>;
  updateOneEndorsement?: MutationToUpdateOneEndorsementResolver<TParent>;
  updateOneEvent?: MutationToUpdateOneEventResolver<TParent>;
  updateOneFormat?: MutationToUpdateOneFormatResolver<TParent>;
  updateOneHourly?: MutationToUpdateOneHourlyResolver<TParent>;
  updateOneIntegration?: MutationToUpdateOneIntegrationResolver<TParent>;
  updateOneIpf?: MutationToUpdateOneIpfResolver<TParent>;
  updateOneLike?: MutationToUpdateOneLikeResolver<TParent>;
  updateOneLocale?: MutationToUpdateOneLocaleResolver<TParent>;
  updateOneModule?: MutationToUpdateOneModuleResolver<TParent>;
  updateOneNetwork?: MutationToUpdateOneNetworkResolver<TParent>;
  updateOneNew_session?: MutationToUpdateOneNew_sessionResolver<TParent>;
  updateOneOpendatum?: MutationToUpdateOneOpendatumResolver<TParent>;
  updateOnePrimary_json?: MutationToUpdateOnePrimary_jsonResolver<TParent>;
  updateOneRoyalty?: MutationToUpdateOneRoyaltyResolver<TParent>;
  updateOneSeries?: MutationToUpdateOneSeriesResolver<TParent>;
  updateOneSession?: MutationToUpdateOneSessionResolver<TParent>;
  updateOneSubscription?: MutationToUpdateOneSubscriptionResolver<TParent>;
  updateOneSwift_code?: MutationToUpdateOneSwift_codeResolver<TParent>;
  updateOneSwift_message?: MutationToUpdateOneSwift_messageResolver<TParent>;
  updateOneTest?: MutationToUpdateOneTestResolver<TParent>;
  updateOneToken?: MutationToUpdateOneTokenResolver<TParent>;
  updateOneTokenCol?: MutationToUpdateOneTokenColResolver<TParent>;
  updateOneTrigger?: MutationToUpdateOneTriggerResolver<TParent>;
  updateOneUi_asset?: MutationToUpdateOneUi_assetResolver<TParent>;
  updateOneUi_chart?: MutationToUpdateOneUi_chartResolver<TParent>;
  updateOneUi_management?: MutationToUpdateOneUi_managementResolver<TParent>;
  updateOneUi_module?: MutationToUpdateOneUi_moduleResolver<TParent>;
  updateOneUser?: MutationToUpdateOneUserResolver<TParent>;
  upsertOneAction?: MutationToUpsertOneActionResolver<TParent>;
  upsertOneActionCol?: MutationToUpsertOneActionColResolver<TParent>;
  upsertOneAddress_abi?: MutationToUpsertOneAddress_abiResolver<TParent>;
  upsertOneAsk?: MutationToUpsertOneAskResolver<TParent>;
  upsertOneAuction?: MutationToUpsertOneAuctionResolver<TParent>;
  upsertOneBid?: MutationToUpsertOneBidResolver<TParent>;
  upsertOneBlockchain?: MutationToUpsertOneBlockchainResolver<TParent>;
  upsertOneCol1?: MutationToUpsertOneCol1Resolver<TParent>;
  upsertOneCollection?: MutationToUpsertOneCollectionResolver<TParent>;
  upsertOneCommission?: MutationToUpsertOneCommissionResolver<TParent>;
  upsertOneContract?: MutationToUpsertOneContractResolver<TParent>;
  upsertOneContract_type?: MutationToUpsertOneContract_typeResolver<TParent>;
  upsertOneDaily?: MutationToUpsertOneDailyResolver<TParent>;
  upsertOneEndorsement?: MutationToUpsertOneEndorsementResolver<TParent>;
  upsertOneEvent?: MutationToUpsertOneEventResolver<TParent>;
  upsertOneFormat?: MutationToUpsertOneFormatResolver<TParent>;
  upsertOneHourly?: MutationToUpsertOneHourlyResolver<TParent>;
  upsertOneIntegration?: MutationToUpsertOneIntegrationResolver<TParent>;
  upsertOneIpf?: MutationToUpsertOneIpfResolver<TParent>;
  upsertOneLike?: MutationToUpsertOneLikeResolver<TParent>;
  upsertOneLocale?: MutationToUpsertOneLocaleResolver<TParent>;
  upsertOneModule?: MutationToUpsertOneModuleResolver<TParent>;
  upsertOneNetwork?: MutationToUpsertOneNetworkResolver<TParent>;
  upsertOneNew_session?: MutationToUpsertOneNew_sessionResolver<TParent>;
  upsertOneOpendatum?: MutationToUpsertOneOpendatumResolver<TParent>;
  upsertOnePrimary_json?: MutationToUpsertOnePrimary_jsonResolver<TParent>;
  upsertOneRoyalty?: MutationToUpsertOneRoyaltyResolver<TParent>;
  upsertOneSeries?: MutationToUpsertOneSeriesResolver<TParent>;
  upsertOneSession?: MutationToUpsertOneSessionResolver<TParent>;
  upsertOneSubscription?: MutationToUpsertOneSubscriptionResolver<TParent>;
  upsertOneSwift_code?: MutationToUpsertOneSwift_codeResolver<TParent>;
  upsertOneSwift_message?: MutationToUpsertOneSwift_messageResolver<TParent>;
  upsertOneTest?: MutationToUpsertOneTestResolver<TParent>;
  upsertOneToken?: MutationToUpsertOneTokenResolver<TParent>;
  upsertOneTokenCol?: MutationToUpsertOneTokenColResolver<TParent>;
  upsertOneTrigger?: MutationToUpsertOneTriggerResolver<TParent>;
  upsertOneUi_asset?: MutationToUpsertOneUi_assetResolver<TParent>;
  upsertOneUi_chart?: MutationToUpsertOneUi_chartResolver<TParent>;
  upsertOneUi_management?: MutationToUpsertOneUi_managementResolver<TParent>;
  upsertOneUi_module?: MutationToUpsertOneUi_moduleResolver<TParent>;
  upsertOneUser?: MutationToUpsertOneUserResolver<TParent>;
}

export interface MutationToDeleteManyActionColsArgs {
  query?: GQLActionColQueryInput;
}
export interface MutationToDeleteManyActionColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyActionColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyActionsArgs {
  query?: GQLActionQueryInput;
}
export interface MutationToDeleteManyActionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyActionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyAddress_abisArgs {
  query?: GQLAddress_abiQueryInput;
}
export interface MutationToDeleteManyAddress_abisResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyAddress_abisArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyAsksArgs {
  query?: GQLAskQueryInput;
}
export interface MutationToDeleteManyAsksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyAsksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyAuctionsArgs {
  query?: GQLAuctionQueryInput;
}
export interface MutationToDeleteManyAuctionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyAuctionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyBidsArgs {
  query?: GQLBidQueryInput;
}
export interface MutationToDeleteManyBidsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyBidsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyBlockchainsArgs {
  query?: GQLBlockchainQueryInput;
}
export interface MutationToDeleteManyBlockchainsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyBlockchainsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyCol1sArgs {
  query?: GQLCol1QueryInput;
}
export interface MutationToDeleteManyCol1sResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyCol1sArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyCollectionsArgs {
  query?: GQLCollectionQueryInput;
}
export interface MutationToDeleteManyCollectionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyCollectionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyCommissionsArgs {
  query?: GQLCommissionQueryInput;
}
export interface MutationToDeleteManyCommissionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyCommissionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyContract_typesArgs {
  query?: GQLContract_typeQueryInput;
}
export interface MutationToDeleteManyContract_typesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyContract_typesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyContractsArgs {
  query?: GQLContractQueryInput;
}
export interface MutationToDeleteManyContractsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyContractsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyDailiesArgs {
  query?: GQLDailyQueryInput;
}
export interface MutationToDeleteManyDailiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyDailiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyEndorsementsArgs {
  query?: GQLEndorsementQueryInput;
}
export interface MutationToDeleteManyEndorsementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyEndorsementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyEventsArgs {
  query?: GQLEventQueryInput;
}
export interface MutationToDeleteManyEventsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyEventsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyFormatsArgs {
  query?: GQLFormatQueryInput;
}
export interface MutationToDeleteManyFormatsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyFormatsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyHourliesArgs {
  query?: GQLHourlyQueryInput;
}
export interface MutationToDeleteManyHourliesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyHourliesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyIntegrationsArgs {
  query?: GQLIntegrationQueryInput;
}
export interface MutationToDeleteManyIntegrationsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyIntegrationsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyIpfsArgs {
  query?: GQLIpfQueryInput;
}
export interface MutationToDeleteManyIpfsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyIpfsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyLikesArgs {
  query?: GQLLikeQueryInput;
}
export interface MutationToDeleteManyLikesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyLikesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyLocalesArgs {
  query?: GQLLocaleQueryInput;
}
export interface MutationToDeleteManyLocalesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyLocalesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyModulesArgs {
  query?: GQLModuleQueryInput;
}
export interface MutationToDeleteManyModulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyModulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyNetworksArgs {
  query?: GQLNetworkQueryInput;
}
export interface MutationToDeleteManyNetworksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyNetworksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyNew_sessionsArgs {
  query?: GQLNew_sessionQueryInput;
}
export interface MutationToDeleteManyNew_sessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyNew_sessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyOpendataArgs {
  query?: GQLOpendatumQueryInput;
}
export interface MutationToDeleteManyOpendataResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyOpendataArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyPrimary_jsonsArgs {
  query?: GQLPrimary_jsonQueryInput;
}
export interface MutationToDeleteManyPrimary_jsonsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyPrimary_jsonsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyRoyaltiesArgs {
  query?: GQLRoyaltyQueryInput;
}
export interface MutationToDeleteManyRoyaltiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyRoyaltiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManySeriessArgs {
  query?: GQLSeriesQueryInput;
}
export interface MutationToDeleteManySeriessResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManySeriessArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManySessionsArgs {
  query?: GQLSessionQueryInput;
}
export interface MutationToDeleteManySessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManySessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManySubscriptionsArgs {
  query?: GQLSubscriptionQueryInput;
}
export interface MutationToDeleteManySubscriptionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManySubscriptionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManySwift_codesArgs {
  query?: GQLSwift_codeQueryInput;
}
export interface MutationToDeleteManySwift_codesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManySwift_codesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManySwift_messagesArgs {
  query?: GQLSwift_messageQueryInput;
}
export interface MutationToDeleteManySwift_messagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManySwift_messagesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyTestsArgs {
  query?: GQLTestQueryInput;
}
export interface MutationToDeleteManyTestsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyTestsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyTokenColsArgs {
  query?: GQLTokenColQueryInput;
}
export interface MutationToDeleteManyTokenColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyTokenColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyTokensArgs {
  query?: GQLTokenQueryInput;
}
export interface MutationToDeleteManyTokensResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyTokensArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyTriggersArgs {
  query?: GQLTriggerQueryInput;
}
export interface MutationToDeleteManyTriggersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyTriggersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyUi_assetsArgs {
  query?: GQLUi_assetQueryInput;
}
export interface MutationToDeleteManyUi_assetsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyUi_assetsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyUi_chartsArgs {
  query?: GQLUi_chartQueryInput;
}
export interface MutationToDeleteManyUi_chartsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyUi_chartsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyUi_managementsArgs {
  query?: GQLUi_managementQueryInput;
}
export interface MutationToDeleteManyUi_managementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyUi_managementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyUi_modulesArgs {
  query?: GQLUi_moduleQueryInput;
}
export interface MutationToDeleteManyUi_modulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyUi_modulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteManyUsersArgs {
  query?: GQLUserQueryInput;
}
export interface MutationToDeleteManyUsersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteManyUsersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneActionArgs {
  query: GQLActionQueryInput;
}
export interface MutationToDeleteOneActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneActionColArgs {
  query: GQLActionColQueryInput;
}
export interface MutationToDeleteOneActionColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneActionColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneAddress_abiArgs {
  query: GQLAddress_abiQueryInput;
}
export interface MutationToDeleteOneAddress_abiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneAddress_abiArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneAskArgs {
  query: GQLAskQueryInput;
}
export interface MutationToDeleteOneAskResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneAskArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneAuctionArgs {
  query: GQLAuctionQueryInput;
}
export interface MutationToDeleteOneAuctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneAuctionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneBidArgs {
  query: GQLBidQueryInput;
}
export interface MutationToDeleteOneBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneBidArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneBlockchainArgs {
  query: GQLBlockchainQueryInput;
}
export interface MutationToDeleteOneBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneBlockchainArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneCol1Args {
  query: GQLCol1QueryInput;
}
export interface MutationToDeleteOneCol1Resolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneCol1Args, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneCollectionArgs {
  query: GQLCollectionQueryInput;
}
export interface MutationToDeleteOneCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneCommissionArgs {
  query: GQLCommissionQueryInput;
}
export interface MutationToDeleteOneCommissionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneCommissionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneContractArgs {
  query: GQLContractQueryInput;
}
export interface MutationToDeleteOneContractResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneContractArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneContract_typeArgs {
  query: GQLContract_typeQueryInput;
}
export interface MutationToDeleteOneContract_typeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneContract_typeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneDailyArgs {
  query: GQLDailyQueryInput;
}
export interface MutationToDeleteOneDailyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneDailyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneEndorsementArgs {
  query: GQLEndorsementQueryInput;
}
export interface MutationToDeleteOneEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneEventArgs {
  query: GQLEventQueryInput;
}
export interface MutationToDeleteOneEventResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneEventArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneFormatArgs {
  query: GQLFormatQueryInput;
}
export interface MutationToDeleteOneFormatResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneFormatArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneHourlyArgs {
  query: GQLHourlyQueryInput;
}
export interface MutationToDeleteOneHourlyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneHourlyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneIntegrationArgs {
  query: GQLIntegrationQueryInput;
}
export interface MutationToDeleteOneIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneIntegrationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneIpfArgs {
  query: GQLIpfQueryInput;
}
export interface MutationToDeleteOneIpfResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneIpfArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneLikeArgs {
  query: GQLLikeQueryInput;
}
export interface MutationToDeleteOneLikeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneLikeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneLocaleArgs {
  query: GQLLocaleQueryInput;
}
export interface MutationToDeleteOneLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneModuleArgs {
  query: GQLModuleQueryInput;
}
export interface MutationToDeleteOneModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneNetworkArgs {
  query: GQLNetworkQueryInput;
}
export interface MutationToDeleteOneNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneNew_sessionArgs {
  query: GQLNew_sessionQueryInput;
}
export interface MutationToDeleteOneNew_sessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneNew_sessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneOpendatumArgs {
  query: GQLOpendatumQueryInput;
}
export interface MutationToDeleteOneOpendatumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneOpendatumArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOnePrimary_jsonArgs {
  query: GQLPrimary_jsonQueryInput;
}
export interface MutationToDeleteOnePrimary_jsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOnePrimary_jsonArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneRoyaltyArgs {
  query: GQLRoyaltyQueryInput;
}
export interface MutationToDeleteOneRoyaltyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneRoyaltyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneSeriesArgs {
  query: GQLSeriesQueryInput;
}
export interface MutationToDeleteOneSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneSeriesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneSessionArgs {
  query: GQLSessionQueryInput;
}
export interface MutationToDeleteOneSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneSubscriptionArgs {
  query: GQLSubscriptionQueryInput;
}
export interface MutationToDeleteOneSubscriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneSwift_codeArgs {
  query: GQLSwift_codeQueryInput;
}
export interface MutationToDeleteOneSwift_codeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneSwift_codeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneSwift_messageArgs {
  query: GQLSwift_messageQueryInput;
}
export interface MutationToDeleteOneSwift_messageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneSwift_messageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneTestArgs {
  query: GQLTestQueryInput;
}
export interface MutationToDeleteOneTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneTestArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneTokenArgs {
  query: GQLTokenQueryInput;
}
export interface MutationToDeleteOneTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneTokenArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneTokenColArgs {
  query: GQLTokenColQueryInput;
}
export interface MutationToDeleteOneTokenColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneTokenColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneTriggerArgs {
  query: GQLTriggerQueryInput;
}
export interface MutationToDeleteOneTriggerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneTriggerArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneUi_assetArgs {
  query: GQLUi_assetQueryInput;
}
export interface MutationToDeleteOneUi_assetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneUi_assetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneUi_chartArgs {
  query: GQLUi_chartQueryInput;
}
export interface MutationToDeleteOneUi_chartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneUi_chartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneUi_managementArgs {
  query: GQLUi_managementQueryInput;
}
export interface MutationToDeleteOneUi_managementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneUi_managementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneUi_moduleArgs {
  query: GQLUi_moduleQueryInput;
}
export interface MutationToDeleteOneUi_moduleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneUi_moduleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToDeleteOneUserArgs {
  query: GQLUserQueryInput;
}
export interface MutationToDeleteOneUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToDeleteOneUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyActionColsArgs {
  data: Array<GQLActionColInsertInput>;
}
export interface MutationToInsertManyActionColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyActionColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyActionsArgs {
  data: Array<GQLActionInsertInput>;
}
export interface MutationToInsertManyActionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyActionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyAddress_abisArgs {
  data: Array<GQLAddress_abiInsertInput>;
}
export interface MutationToInsertManyAddress_abisResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyAddress_abisArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyAsksArgs {
  data: Array<GQLAskInsertInput>;
}
export interface MutationToInsertManyAsksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyAsksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyAuctionsArgs {
  data: Array<GQLAuctionInsertInput>;
}
export interface MutationToInsertManyAuctionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyAuctionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyBidsArgs {
  data: Array<GQLBidInsertInput>;
}
export interface MutationToInsertManyBidsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyBidsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyBlockchainsArgs {
  data: Array<GQLBlockchainInsertInput>;
}
export interface MutationToInsertManyBlockchainsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyBlockchainsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyCol1sArgs {
  data: Array<GQLCol1InsertInput>;
}
export interface MutationToInsertManyCol1sResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyCol1sArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyCollectionsArgs {
  data: Array<GQLCollectionInsertInput>;
}
export interface MutationToInsertManyCollectionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyCollectionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyCommissionsArgs {
  data: Array<GQLCommissionInsertInput>;
}
export interface MutationToInsertManyCommissionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyCommissionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyContract_typesArgs {
  data: Array<GQLContract_typeInsertInput>;
}
export interface MutationToInsertManyContract_typesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyContract_typesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyContractsArgs {
  data: Array<GQLContractInsertInput>;
}
export interface MutationToInsertManyContractsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyContractsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyDailiesArgs {
  data: Array<GQLDailyInsertInput>;
}
export interface MutationToInsertManyDailiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyDailiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyEndorsementsArgs {
  data: Array<GQLEndorsementInsertInput>;
}
export interface MutationToInsertManyEndorsementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyEndorsementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyEventsArgs {
  data: Array<GQLEventInsertInput>;
}
export interface MutationToInsertManyEventsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyEventsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyFormatsArgs {
  data: Array<GQLFormatInsertInput>;
}
export interface MutationToInsertManyFormatsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyFormatsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyHourliesArgs {
  data: Array<GQLHourlyInsertInput>;
}
export interface MutationToInsertManyHourliesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyHourliesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyIntegrationsArgs {
  data: Array<GQLIntegrationInsertInput>;
}
export interface MutationToInsertManyIntegrationsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyIntegrationsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyIpfsArgs {
  data: Array<GQLIpfInsertInput>;
}
export interface MutationToInsertManyIpfsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyIpfsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyLikesArgs {
  data: Array<GQLLikeInsertInput>;
}
export interface MutationToInsertManyLikesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyLikesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyLocalesArgs {
  data: Array<GQLLocaleInsertInput>;
}
export interface MutationToInsertManyLocalesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyLocalesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyModulesArgs {
  data: Array<GQLModuleInsertInput>;
}
export interface MutationToInsertManyModulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyModulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyNetworksArgs {
  data: Array<GQLNetworkInsertInput>;
}
export interface MutationToInsertManyNetworksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyNetworksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyNew_sessionsArgs {
  data: Array<GQLNew_sessionInsertInput>;
}
export interface MutationToInsertManyNew_sessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyNew_sessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyOpendataArgs {
  data: Array<GQLOpendatumInsertInput>;
}
export interface MutationToInsertManyOpendataResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyOpendataArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyPrimary_jsonsArgs {
  data: Array<GQLPrimary_jsonInsertInput>;
}
export interface MutationToInsertManyPrimary_jsonsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyPrimary_jsonsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyRoyaltiesArgs {
  data: Array<GQLRoyaltyInsertInput>;
}
export interface MutationToInsertManyRoyaltiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyRoyaltiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManySeriessArgs {
  data: Array<GQLSeriesInsertInput>;
}
export interface MutationToInsertManySeriessResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManySeriessArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManySessionsArgs {
  data: Array<GQLSessionInsertInput>;
}
export interface MutationToInsertManySessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManySessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManySubscriptionsArgs {
  data: Array<GQLSubscriptionInsertInput>;
}
export interface MutationToInsertManySubscriptionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManySubscriptionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManySwift_codesArgs {
  data: Array<GQLSwift_codeInsertInput>;
}
export interface MutationToInsertManySwift_codesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManySwift_codesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManySwift_messagesArgs {
  data: Array<GQLSwift_messageInsertInput>;
}
export interface MutationToInsertManySwift_messagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManySwift_messagesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyTestsArgs {
  data: Array<GQLTestInsertInput>;
}
export interface MutationToInsertManyTestsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyTestsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyTokenColsArgs {
  data: Array<GQLTokenColInsertInput>;
}
export interface MutationToInsertManyTokenColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyTokenColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyTokensArgs {
  data: Array<GQLTokenInsertInput>;
}
export interface MutationToInsertManyTokensResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyTokensArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyTriggersArgs {
  data: Array<GQLTriggerInsertInput>;
}
export interface MutationToInsertManyTriggersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyTriggersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyUi_assetsArgs {
  data: Array<GQLUi_assetInsertInput>;
}
export interface MutationToInsertManyUi_assetsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyUi_assetsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyUi_chartsArgs {
  data: Array<GQLUi_chartInsertInput>;
}
export interface MutationToInsertManyUi_chartsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyUi_chartsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyUi_managementsArgs {
  data: Array<GQLUi_managementInsertInput>;
}
export interface MutationToInsertManyUi_managementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyUi_managementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyUi_modulesArgs {
  data: Array<GQLUi_moduleInsertInput>;
}
export interface MutationToInsertManyUi_modulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyUi_modulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertManyUsersArgs {
  data: Array<GQLUserInsertInput>;
}
export interface MutationToInsertManyUsersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertManyUsersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneActionArgs {
  data: GQLActionInsertInput;
}
export interface MutationToInsertOneActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneActionColArgs {
  data: GQLActionColInsertInput;
}
export interface MutationToInsertOneActionColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneActionColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneAddress_abiArgs {
  data: GQLAddress_abiInsertInput;
}
export interface MutationToInsertOneAddress_abiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneAddress_abiArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneAskArgs {
  data: GQLAskInsertInput;
}
export interface MutationToInsertOneAskResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneAskArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneAuctionArgs {
  data: GQLAuctionInsertInput;
}
export interface MutationToInsertOneAuctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneAuctionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneBidArgs {
  data: GQLBidInsertInput;
}
export interface MutationToInsertOneBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneBidArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneBlockchainArgs {
  data: GQLBlockchainInsertInput;
}
export interface MutationToInsertOneBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneBlockchainArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneCol1Args {
  data: GQLCol1InsertInput;
}
export interface MutationToInsertOneCol1Resolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneCol1Args, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneCollectionArgs {
  data: GQLCollectionInsertInput;
}
export interface MutationToInsertOneCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneCommissionArgs {
  data: GQLCommissionInsertInput;
}
export interface MutationToInsertOneCommissionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneCommissionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneContractArgs {
  data: GQLContractInsertInput;
}
export interface MutationToInsertOneContractResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneContractArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneContract_typeArgs {
  data: GQLContract_typeInsertInput;
}
export interface MutationToInsertOneContract_typeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneContract_typeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneDailyArgs {
  data: GQLDailyInsertInput;
}
export interface MutationToInsertOneDailyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneDailyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneEndorsementArgs {
  data: GQLEndorsementInsertInput;
}
export interface MutationToInsertOneEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneEventArgs {
  data: GQLEventInsertInput;
}
export interface MutationToInsertOneEventResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneEventArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneFormatArgs {
  data: GQLFormatInsertInput;
}
export interface MutationToInsertOneFormatResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneFormatArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneHourlyArgs {
  data: GQLHourlyInsertInput;
}
export interface MutationToInsertOneHourlyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneHourlyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneIntegrationArgs {
  data: GQLIntegrationInsertInput;
}
export interface MutationToInsertOneIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneIntegrationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneIpfArgs {
  data: GQLIpfInsertInput;
}
export interface MutationToInsertOneIpfResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneIpfArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneLikeArgs {
  data: GQLLikeInsertInput;
}
export interface MutationToInsertOneLikeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneLikeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneLocaleArgs {
  data: GQLLocaleInsertInput;
}
export interface MutationToInsertOneLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneModuleArgs {
  data: GQLModuleInsertInput;
}
export interface MutationToInsertOneModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneNetworkArgs {
  data: GQLNetworkInsertInput;
}
export interface MutationToInsertOneNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneNew_sessionArgs {
  data: GQLNew_sessionInsertInput;
}
export interface MutationToInsertOneNew_sessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneNew_sessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneOpendatumArgs {
  data: GQLOpendatumInsertInput;
}
export interface MutationToInsertOneOpendatumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneOpendatumArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOnePrimary_jsonArgs {
  data: GQLPrimary_jsonInsertInput;
}
export interface MutationToInsertOnePrimary_jsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOnePrimary_jsonArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneRoyaltyArgs {
  data: GQLRoyaltyInsertInput;
}
export interface MutationToInsertOneRoyaltyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneRoyaltyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneSeriesArgs {
  data: GQLSeriesInsertInput;
}
export interface MutationToInsertOneSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneSeriesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneSessionArgs {
  data: GQLSessionInsertInput;
}
export interface MutationToInsertOneSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneSubscriptionArgs {
  data: GQLSubscriptionInsertInput;
}
export interface MutationToInsertOneSubscriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneSwift_codeArgs {
  data: GQLSwift_codeInsertInput;
}
export interface MutationToInsertOneSwift_codeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneSwift_codeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneSwift_messageArgs {
  data: GQLSwift_messageInsertInput;
}
export interface MutationToInsertOneSwift_messageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneSwift_messageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneTestArgs {
  data: GQLTestInsertInput;
}
export interface MutationToInsertOneTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneTestArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneTokenArgs {
  data: GQLTokenInsertInput;
}
export interface MutationToInsertOneTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneTokenArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneTokenColArgs {
  data: GQLTokenColInsertInput;
}
export interface MutationToInsertOneTokenColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneTokenColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneTriggerArgs {
  data: GQLTriggerInsertInput;
}
export interface MutationToInsertOneTriggerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneTriggerArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneUi_assetArgs {
  data: GQLUi_assetInsertInput;
}
export interface MutationToInsertOneUi_assetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneUi_assetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneUi_chartArgs {
  data: GQLUi_chartInsertInput;
}
export interface MutationToInsertOneUi_chartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneUi_chartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneUi_managementArgs {
  data: GQLUi_managementInsertInput;
}
export interface MutationToInsertOneUi_managementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneUi_managementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneUi_moduleArgs {
  data: GQLUi_moduleInsertInput;
}
export interface MutationToInsertOneUi_moduleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneUi_moduleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToInsertOneUserArgs {
  data: GQLUserInsertInput;
}
export interface MutationToInsertOneUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToInsertOneUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneActionArgs {
  query?: GQLActionQueryInput;
  data: GQLActionInsertInput;
}
export interface MutationToReplaceOneActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneActionColArgs {
  query?: GQLActionColQueryInput;
  data: GQLActionColInsertInput;
}
export interface MutationToReplaceOneActionColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneActionColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneAddress_abiArgs {
  query?: GQLAddress_abiQueryInput;
  data: GQLAddress_abiInsertInput;
}
export interface MutationToReplaceOneAddress_abiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneAddress_abiArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneAskArgs {
  query?: GQLAskQueryInput;
  data: GQLAskInsertInput;
}
export interface MutationToReplaceOneAskResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneAskArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneAuctionArgs {
  query?: GQLAuctionQueryInput;
  data: GQLAuctionInsertInput;
}
export interface MutationToReplaceOneAuctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneAuctionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneBidArgs {
  query?: GQLBidQueryInput;
  data: GQLBidInsertInput;
}
export interface MutationToReplaceOneBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneBidArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneBlockchainArgs {
  query?: GQLBlockchainQueryInput;
  data: GQLBlockchainInsertInput;
}
export interface MutationToReplaceOneBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneBlockchainArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneCol1Args {
  query?: GQLCol1QueryInput;
  data: GQLCol1InsertInput;
}
export interface MutationToReplaceOneCol1Resolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneCol1Args, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneCollectionArgs {
  query?: GQLCollectionQueryInput;
  data: GQLCollectionInsertInput;
}
export interface MutationToReplaceOneCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneCommissionArgs {
  query?: GQLCommissionQueryInput;
  data: GQLCommissionInsertInput;
}
export interface MutationToReplaceOneCommissionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneCommissionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneContractArgs {
  query?: GQLContractQueryInput;
  data: GQLContractInsertInput;
}
export interface MutationToReplaceOneContractResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneContractArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneContract_typeArgs {
  query?: GQLContract_typeQueryInput;
  data: GQLContract_typeInsertInput;
}
export interface MutationToReplaceOneContract_typeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneContract_typeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneDailyArgs {
  query?: GQLDailyQueryInput;
  data: GQLDailyInsertInput;
}
export interface MutationToReplaceOneDailyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneDailyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneEndorsementArgs {
  query?: GQLEndorsementQueryInput;
  data: GQLEndorsementInsertInput;
}
export interface MutationToReplaceOneEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneEventArgs {
  query?: GQLEventQueryInput;
  data: GQLEventInsertInput;
}
export interface MutationToReplaceOneEventResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneEventArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneFormatArgs {
  query?: GQLFormatQueryInput;
  data: GQLFormatInsertInput;
}
export interface MutationToReplaceOneFormatResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneFormatArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneHourlyArgs {
  data: GQLHourlyInsertInput;
  query?: GQLHourlyQueryInput;
}
export interface MutationToReplaceOneHourlyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneHourlyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneIntegrationArgs {
  query?: GQLIntegrationQueryInput;
  data: GQLIntegrationInsertInput;
}
export interface MutationToReplaceOneIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneIntegrationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneIpfArgs {
  data: GQLIpfInsertInput;
  query?: GQLIpfQueryInput;
}
export interface MutationToReplaceOneIpfResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneIpfArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneLikeArgs {
  query?: GQLLikeQueryInput;
  data: GQLLikeInsertInput;
}
export interface MutationToReplaceOneLikeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneLikeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneLocaleArgs {
  query?: GQLLocaleQueryInput;
  data: GQLLocaleInsertInput;
}
export interface MutationToReplaceOneLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneModuleArgs {
  query?: GQLModuleQueryInput;
  data: GQLModuleInsertInput;
}
export interface MutationToReplaceOneModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneNetworkArgs {
  query?: GQLNetworkQueryInput;
  data: GQLNetworkInsertInput;
}
export interface MutationToReplaceOneNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneNew_sessionArgs {
  query?: GQLNew_sessionQueryInput;
  data: GQLNew_sessionInsertInput;
}
export interface MutationToReplaceOneNew_sessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneNew_sessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneOpendatumArgs {
  query?: GQLOpendatumQueryInput;
  data: GQLOpendatumInsertInput;
}
export interface MutationToReplaceOneOpendatumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneOpendatumArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOnePrimary_jsonArgs {
  query?: GQLPrimary_jsonQueryInput;
  data: GQLPrimary_jsonInsertInput;
}
export interface MutationToReplaceOnePrimary_jsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOnePrimary_jsonArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneRoyaltyArgs {
  query?: GQLRoyaltyQueryInput;
  data: GQLRoyaltyInsertInput;
}
export interface MutationToReplaceOneRoyaltyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneRoyaltyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneSeriesArgs {
  data: GQLSeriesInsertInput;
  query?: GQLSeriesQueryInput;
}
export interface MutationToReplaceOneSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneSeriesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneSessionArgs {
  query?: GQLSessionQueryInput;
  data: GQLSessionInsertInput;
}
export interface MutationToReplaceOneSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneSubscriptionArgs {
  query?: GQLSubscriptionQueryInput;
  data: GQLSubscriptionInsertInput;
}
export interface MutationToReplaceOneSubscriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneSwift_codeArgs {
  query?: GQLSwift_codeQueryInput;
  data: GQLSwift_codeInsertInput;
}
export interface MutationToReplaceOneSwift_codeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneSwift_codeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneSwift_messageArgs {
  query?: GQLSwift_messageQueryInput;
  data: GQLSwift_messageInsertInput;
}
export interface MutationToReplaceOneSwift_messageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneSwift_messageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneTestArgs {
  query?: GQLTestQueryInput;
  data: GQLTestInsertInput;
}
export interface MutationToReplaceOneTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneTestArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneTokenArgs {
  data: GQLTokenInsertInput;
  query?: GQLTokenQueryInput;
}
export interface MutationToReplaceOneTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneTokenArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneTokenColArgs {
  query?: GQLTokenColQueryInput;
  data: GQLTokenColInsertInput;
}
export interface MutationToReplaceOneTokenColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneTokenColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneTriggerArgs {
  query?: GQLTriggerQueryInput;
  data: GQLTriggerInsertInput;
}
export interface MutationToReplaceOneTriggerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneTriggerArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneUi_assetArgs {
  query?: GQLUi_assetQueryInput;
  data: GQLUi_assetInsertInput;
}
export interface MutationToReplaceOneUi_assetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneUi_assetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneUi_chartArgs {
  query?: GQLUi_chartQueryInput;
  data: GQLUi_chartInsertInput;
}
export interface MutationToReplaceOneUi_chartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneUi_chartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneUi_managementArgs {
  query?: GQLUi_managementQueryInput;
  data: GQLUi_managementInsertInput;
}
export interface MutationToReplaceOneUi_managementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneUi_managementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneUi_moduleArgs {
  query?: GQLUi_moduleQueryInput;
  data: GQLUi_moduleInsertInput;
}
export interface MutationToReplaceOneUi_moduleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneUi_moduleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToReplaceOneUserArgs {
  query?: GQLUserQueryInput;
  data: GQLUserInsertInput;
}
export interface MutationToReplaceOneUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToReplaceOneUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyActionColsArgs {
  query?: GQLActionColQueryInput;
  set: GQLActionColUpdateInput;
}
export interface MutationToUpdateManyActionColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyActionColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyActionsArgs {
  query?: GQLActionQueryInput;
  set: GQLActionUpdateInput;
}
export interface MutationToUpdateManyActionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyActionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyAddress_abisArgs {
  query?: GQLAddress_abiQueryInput;
  set: GQLAddress_abiUpdateInput;
}
export interface MutationToUpdateManyAddress_abisResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyAddress_abisArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyAsksArgs {
  query?: GQLAskQueryInput;
  set: GQLAskUpdateInput;
}
export interface MutationToUpdateManyAsksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyAsksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyAuctionsArgs {
  query?: GQLAuctionQueryInput;
  set: GQLAuctionUpdateInput;
}
export interface MutationToUpdateManyAuctionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyAuctionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyBidsArgs {
  query?: GQLBidQueryInput;
  set: GQLBidUpdateInput;
}
export interface MutationToUpdateManyBidsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyBidsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyBlockchainsArgs {
  query?: GQLBlockchainQueryInput;
  set: GQLBlockchainUpdateInput;
}
export interface MutationToUpdateManyBlockchainsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyBlockchainsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyCol1sArgs {
  query?: GQLCol1QueryInput;
  set: GQLCol1UpdateInput;
}
export interface MutationToUpdateManyCol1sResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyCol1sArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyCollectionsArgs {
  query?: GQLCollectionQueryInput;
  set: GQLCollectionUpdateInput;
}
export interface MutationToUpdateManyCollectionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyCollectionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyCommissionsArgs {
  query?: GQLCommissionQueryInput;
  set: GQLCommissionUpdateInput;
}
export interface MutationToUpdateManyCommissionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyCommissionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyContract_typesArgs {
  query?: GQLContract_typeQueryInput;
  set: GQLContract_typeUpdateInput;
}
export interface MutationToUpdateManyContract_typesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyContract_typesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyContractsArgs {
  query?: GQLContractQueryInput;
  set: GQLContractUpdateInput;
}
export interface MutationToUpdateManyContractsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyContractsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyDailiesArgs {
  query?: GQLDailyQueryInput;
  set: GQLDailyUpdateInput;
}
export interface MutationToUpdateManyDailiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyDailiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyEndorsementsArgs {
  query?: GQLEndorsementQueryInput;
  set: GQLEndorsementUpdateInput;
}
export interface MutationToUpdateManyEndorsementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyEndorsementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyEventsArgs {
  query?: GQLEventQueryInput;
  set: GQLEventUpdateInput;
}
export interface MutationToUpdateManyEventsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyEventsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyFormatsArgs {
  query?: GQLFormatQueryInput;
  set: GQLFormatUpdateInput;
}
export interface MutationToUpdateManyFormatsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyFormatsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyHourliesArgs {
  query?: GQLHourlyQueryInput;
  set: GQLHourlyUpdateInput;
}
export interface MutationToUpdateManyHourliesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyHourliesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyIntegrationsArgs {
  query?: GQLIntegrationQueryInput;
  set: GQLIntegrationUpdateInput;
}
export interface MutationToUpdateManyIntegrationsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyIntegrationsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyIpfsArgs {
  set: GQLIpfUpdateInput;
  query?: GQLIpfQueryInput;
}
export interface MutationToUpdateManyIpfsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyIpfsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyLikesArgs {
  query?: GQLLikeQueryInput;
  set: GQLLikeUpdateInput;
}
export interface MutationToUpdateManyLikesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyLikesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyLocalesArgs {
  query?: GQLLocaleQueryInput;
  set: GQLLocaleUpdateInput;
}
export interface MutationToUpdateManyLocalesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyLocalesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyModulesArgs {
  query?: GQLModuleQueryInput;
  set: GQLModuleUpdateInput;
}
export interface MutationToUpdateManyModulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyModulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyNetworksArgs {
  query?: GQLNetworkQueryInput;
  set: GQLNetworkUpdateInput;
}
export interface MutationToUpdateManyNetworksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyNetworksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyNew_sessionsArgs {
  query?: GQLNew_sessionQueryInput;
  set: GQLNew_sessionUpdateInput;
}
export interface MutationToUpdateManyNew_sessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyNew_sessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyOpendataArgs {
  query?: GQLOpendatumQueryInput;
  set: GQLOpendatumUpdateInput;
}
export interface MutationToUpdateManyOpendataResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyOpendataArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyPrimary_jsonsArgs {
  query?: GQLPrimary_jsonQueryInput;
  set: GQLPrimary_jsonUpdateInput;
}
export interface MutationToUpdateManyPrimary_jsonsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyPrimary_jsonsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyRoyaltiesArgs {
  set: GQLRoyaltyUpdateInput;
  query?: GQLRoyaltyQueryInput;
}
export interface MutationToUpdateManyRoyaltiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyRoyaltiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManySeriessArgs {
  query?: GQLSeriesQueryInput;
  set: GQLSeriesUpdateInput;
}
export interface MutationToUpdateManySeriessResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManySeriessArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManySessionsArgs {
  query?: GQLSessionQueryInput;
  set: GQLSessionUpdateInput;
}
export interface MutationToUpdateManySessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManySessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManySubscriptionsArgs {
  query?: GQLSubscriptionQueryInput;
  set: GQLSubscriptionUpdateInput;
}
export interface MutationToUpdateManySubscriptionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManySubscriptionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManySwift_codesArgs {
  set: GQLSwift_codeUpdateInput;
  query?: GQLSwift_codeQueryInput;
}
export interface MutationToUpdateManySwift_codesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManySwift_codesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManySwift_messagesArgs {
  set: GQLSwift_messageUpdateInput;
  query?: GQLSwift_messageQueryInput;
}
export interface MutationToUpdateManySwift_messagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManySwift_messagesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyTestsArgs {
  query?: GQLTestQueryInput;
  set: GQLTestUpdateInput;
}
export interface MutationToUpdateManyTestsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyTestsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyTokenColsArgs {
  query?: GQLTokenColQueryInput;
  set: GQLTokenColUpdateInput;
}
export interface MutationToUpdateManyTokenColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyTokenColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyTokensArgs {
  query?: GQLTokenQueryInput;
  set: GQLTokenUpdateInput;
}
export interface MutationToUpdateManyTokensResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyTokensArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyTriggersArgs {
  query?: GQLTriggerQueryInput;
  set: GQLTriggerUpdateInput;
}
export interface MutationToUpdateManyTriggersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyTriggersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyUi_assetsArgs {
  query?: GQLUi_assetQueryInput;
  set: GQLUi_assetUpdateInput;
}
export interface MutationToUpdateManyUi_assetsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyUi_assetsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyUi_chartsArgs {
  query?: GQLUi_chartQueryInput;
  set: GQLUi_chartUpdateInput;
}
export interface MutationToUpdateManyUi_chartsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyUi_chartsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyUi_managementsArgs {
  set: GQLUi_managementUpdateInput;
  query?: GQLUi_managementQueryInput;
}
export interface MutationToUpdateManyUi_managementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyUi_managementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyUi_modulesArgs {
  query?: GQLUi_moduleQueryInput;
  set: GQLUi_moduleUpdateInput;
}
export interface MutationToUpdateManyUi_modulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyUi_modulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateManyUsersArgs {
  query?: GQLUserQueryInput;
  set: GQLUserUpdateInput;
}
export interface MutationToUpdateManyUsersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateManyUsersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneActionArgs {
  set: GQLActionUpdateInput;
  query?: GQLActionQueryInput;
}
export interface MutationToUpdateOneActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneActionColArgs {
  query?: GQLActionColQueryInput;
  set: GQLActionColUpdateInput;
}
export interface MutationToUpdateOneActionColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneActionColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneAddress_abiArgs {
  query?: GQLAddress_abiQueryInput;
  set: GQLAddress_abiUpdateInput;
}
export interface MutationToUpdateOneAddress_abiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneAddress_abiArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneAskArgs {
  query?: GQLAskQueryInput;
  set: GQLAskUpdateInput;
}
export interface MutationToUpdateOneAskResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneAskArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneAuctionArgs {
  query?: GQLAuctionQueryInput;
  set: GQLAuctionUpdateInput;
}
export interface MutationToUpdateOneAuctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneAuctionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneBidArgs {
  query?: GQLBidQueryInput;
  set: GQLBidUpdateInput;
}
export interface MutationToUpdateOneBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneBidArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneBlockchainArgs {
  query?: GQLBlockchainQueryInput;
  set: GQLBlockchainUpdateInput;
}
export interface MutationToUpdateOneBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneBlockchainArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneCol1Args {
  set: GQLCol1UpdateInput;
  query?: GQLCol1QueryInput;
}
export interface MutationToUpdateOneCol1Resolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneCol1Args, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneCollectionArgs {
  query?: GQLCollectionQueryInput;
  set: GQLCollectionUpdateInput;
}
export interface MutationToUpdateOneCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneCommissionArgs {
  query?: GQLCommissionQueryInput;
  set: GQLCommissionUpdateInput;
}
export interface MutationToUpdateOneCommissionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneCommissionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneContractArgs {
  query?: GQLContractQueryInput;
  set: GQLContractUpdateInput;
}
export interface MutationToUpdateOneContractResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneContractArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneContract_typeArgs {
  set: GQLContract_typeUpdateInput;
  query?: GQLContract_typeQueryInput;
}
export interface MutationToUpdateOneContract_typeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneContract_typeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneDailyArgs {
  query?: GQLDailyQueryInput;
  set: GQLDailyUpdateInput;
}
export interface MutationToUpdateOneDailyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneDailyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneEndorsementArgs {
  query?: GQLEndorsementQueryInput;
  set: GQLEndorsementUpdateInput;
}
export interface MutationToUpdateOneEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneEventArgs {
  set: GQLEventUpdateInput;
  query?: GQLEventQueryInput;
}
export interface MutationToUpdateOneEventResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneEventArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneFormatArgs {
  set: GQLFormatUpdateInput;
  query?: GQLFormatQueryInput;
}
export interface MutationToUpdateOneFormatResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneFormatArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneHourlyArgs {
  query?: GQLHourlyQueryInput;
  set: GQLHourlyUpdateInput;
}
export interface MutationToUpdateOneHourlyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneHourlyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneIntegrationArgs {
  query?: GQLIntegrationQueryInput;
  set: GQLIntegrationUpdateInput;
}
export interface MutationToUpdateOneIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneIntegrationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneIpfArgs {
  set: GQLIpfUpdateInput;
  query?: GQLIpfQueryInput;
}
export interface MutationToUpdateOneIpfResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneIpfArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneLikeArgs {
  query?: GQLLikeQueryInput;
  set: GQLLikeUpdateInput;
}
export interface MutationToUpdateOneLikeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneLikeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneLocaleArgs {
  query?: GQLLocaleQueryInput;
  set: GQLLocaleUpdateInput;
}
export interface MutationToUpdateOneLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneModuleArgs {
  set: GQLModuleUpdateInput;
  query?: GQLModuleQueryInput;
}
export interface MutationToUpdateOneModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneNetworkArgs {
  query?: GQLNetworkQueryInput;
  set: GQLNetworkUpdateInput;
}
export interface MutationToUpdateOneNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneNew_sessionArgs {
  set: GQLNew_sessionUpdateInput;
  query?: GQLNew_sessionQueryInput;
}
export interface MutationToUpdateOneNew_sessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneNew_sessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneOpendatumArgs {
  query?: GQLOpendatumQueryInput;
  set: GQLOpendatumUpdateInput;
}
export interface MutationToUpdateOneOpendatumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneOpendatumArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOnePrimary_jsonArgs {
  query?: GQLPrimary_jsonQueryInput;
  set: GQLPrimary_jsonUpdateInput;
}
export interface MutationToUpdateOnePrimary_jsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOnePrimary_jsonArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneRoyaltyArgs {
  query?: GQLRoyaltyQueryInput;
  set: GQLRoyaltyUpdateInput;
}
export interface MutationToUpdateOneRoyaltyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneRoyaltyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneSeriesArgs {
  query?: GQLSeriesQueryInput;
  set: GQLSeriesUpdateInput;
}
export interface MutationToUpdateOneSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneSeriesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneSessionArgs {
  query?: GQLSessionQueryInput;
  set: GQLSessionUpdateInput;
}
export interface MutationToUpdateOneSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneSubscriptionArgs {
  query?: GQLSubscriptionQueryInput;
  set: GQLSubscriptionUpdateInput;
}
export interface MutationToUpdateOneSubscriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneSwift_codeArgs {
  query?: GQLSwift_codeQueryInput;
  set: GQLSwift_codeUpdateInput;
}
export interface MutationToUpdateOneSwift_codeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneSwift_codeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneSwift_messageArgs {
  query?: GQLSwift_messageQueryInput;
  set: GQLSwift_messageUpdateInput;
}
export interface MutationToUpdateOneSwift_messageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneSwift_messageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneTestArgs {
  query?: GQLTestQueryInput;
  set: GQLTestUpdateInput;
}
export interface MutationToUpdateOneTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneTestArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneTokenArgs {
  query?: GQLTokenQueryInput;
  set: GQLTokenUpdateInput;
}
export interface MutationToUpdateOneTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneTokenArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneTokenColArgs {
  query?: GQLTokenColQueryInput;
  set: GQLTokenColUpdateInput;
}
export interface MutationToUpdateOneTokenColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneTokenColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneTriggerArgs {
  query?: GQLTriggerQueryInput;
  set: GQLTriggerUpdateInput;
}
export interface MutationToUpdateOneTriggerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneTriggerArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneUi_assetArgs {
  query?: GQLUi_assetQueryInput;
  set: GQLUi_assetUpdateInput;
}
export interface MutationToUpdateOneUi_assetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneUi_assetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneUi_chartArgs {
  query?: GQLUi_chartQueryInput;
  set: GQLUi_chartUpdateInput;
}
export interface MutationToUpdateOneUi_chartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneUi_chartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneUi_managementArgs {
  query?: GQLUi_managementQueryInput;
  set: GQLUi_managementUpdateInput;
}
export interface MutationToUpdateOneUi_managementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneUi_managementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneUi_moduleArgs {
  query?: GQLUi_moduleQueryInput;
  set: GQLUi_moduleUpdateInput;
}
export interface MutationToUpdateOneUi_moduleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneUi_moduleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpdateOneUserArgs {
  query?: GQLUserQueryInput;
  set: GQLUserUpdateInput;
}
export interface MutationToUpdateOneUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpdateOneUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneActionArgs {
  query?: GQLActionQueryInput;
  data: GQLActionInsertInput;
}
export interface MutationToUpsertOneActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneActionColArgs {
  query?: GQLActionColQueryInput;
  data: GQLActionColInsertInput;
}
export interface MutationToUpsertOneActionColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneActionColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneAddress_abiArgs {
  query?: GQLAddress_abiQueryInput;
  data: GQLAddress_abiInsertInput;
}
export interface MutationToUpsertOneAddress_abiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneAddress_abiArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneAskArgs {
  data: GQLAskInsertInput;
  query?: GQLAskQueryInput;
}
export interface MutationToUpsertOneAskResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneAskArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneAuctionArgs {
  query?: GQLAuctionQueryInput;
  data: GQLAuctionInsertInput;
}
export interface MutationToUpsertOneAuctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneAuctionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneBidArgs {
  query?: GQLBidQueryInput;
  data: GQLBidInsertInput;
}
export interface MutationToUpsertOneBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneBidArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneBlockchainArgs {
  query?: GQLBlockchainQueryInput;
  data: GQLBlockchainInsertInput;
}
export interface MutationToUpsertOneBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneBlockchainArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneCol1Args {
  query?: GQLCol1QueryInput;
  data: GQLCol1InsertInput;
}
export interface MutationToUpsertOneCol1Resolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneCol1Args, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneCollectionArgs {
  query?: GQLCollectionQueryInput;
  data: GQLCollectionInsertInput;
}
export interface MutationToUpsertOneCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneCommissionArgs {
  query?: GQLCommissionQueryInput;
  data: GQLCommissionInsertInput;
}
export interface MutationToUpsertOneCommissionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneCommissionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneContractArgs {
  query?: GQLContractQueryInput;
  data: GQLContractInsertInput;
}
export interface MutationToUpsertOneContractResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneContractArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneContract_typeArgs {
  query?: GQLContract_typeQueryInput;
  data: GQLContract_typeInsertInput;
}
export interface MutationToUpsertOneContract_typeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneContract_typeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneDailyArgs {
  query?: GQLDailyQueryInput;
  data: GQLDailyInsertInput;
}
export interface MutationToUpsertOneDailyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneDailyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneEndorsementArgs {
  query?: GQLEndorsementQueryInput;
  data: GQLEndorsementInsertInput;
}
export interface MutationToUpsertOneEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneEventArgs {
  query?: GQLEventQueryInput;
  data: GQLEventInsertInput;
}
export interface MutationToUpsertOneEventResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneEventArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneFormatArgs {
  query?: GQLFormatQueryInput;
  data: GQLFormatInsertInput;
}
export interface MutationToUpsertOneFormatResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneFormatArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneHourlyArgs {
  query?: GQLHourlyQueryInput;
  data: GQLHourlyInsertInput;
}
export interface MutationToUpsertOneHourlyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneHourlyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneIntegrationArgs {
  query?: GQLIntegrationQueryInput;
  data: GQLIntegrationInsertInput;
}
export interface MutationToUpsertOneIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneIntegrationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneIpfArgs {
  data: GQLIpfInsertInput;
  query?: GQLIpfQueryInput;
}
export interface MutationToUpsertOneIpfResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneIpfArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneLikeArgs {
  query?: GQLLikeQueryInput;
  data: GQLLikeInsertInput;
}
export interface MutationToUpsertOneLikeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneLikeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneLocaleArgs {
  query?: GQLLocaleQueryInput;
  data: GQLLocaleInsertInput;
}
export interface MutationToUpsertOneLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneModuleArgs {
  query?: GQLModuleQueryInput;
  data: GQLModuleInsertInput;
}
export interface MutationToUpsertOneModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneNetworkArgs {
  query?: GQLNetworkQueryInput;
  data: GQLNetworkInsertInput;
}
export interface MutationToUpsertOneNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneNew_sessionArgs {
  query?: GQLNew_sessionQueryInput;
  data: GQLNew_sessionInsertInput;
}
export interface MutationToUpsertOneNew_sessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneNew_sessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneOpendatumArgs {
  query?: GQLOpendatumQueryInput;
  data: GQLOpendatumInsertInput;
}
export interface MutationToUpsertOneOpendatumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneOpendatumArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOnePrimary_jsonArgs {
  query?: GQLPrimary_jsonQueryInput;
  data: GQLPrimary_jsonInsertInput;
}
export interface MutationToUpsertOnePrimary_jsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOnePrimary_jsonArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneRoyaltyArgs {
  data: GQLRoyaltyInsertInput;
  query?: GQLRoyaltyQueryInput;
}
export interface MutationToUpsertOneRoyaltyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneRoyaltyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneSeriesArgs {
  query?: GQLSeriesQueryInput;
  data: GQLSeriesInsertInput;
}
export interface MutationToUpsertOneSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneSeriesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneSessionArgs {
  query?: GQLSessionQueryInput;
  data: GQLSessionInsertInput;
}
export interface MutationToUpsertOneSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneSubscriptionArgs {
  query?: GQLSubscriptionQueryInput;
  data: GQLSubscriptionInsertInput;
}
export interface MutationToUpsertOneSubscriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneSwift_codeArgs {
  query?: GQLSwift_codeQueryInput;
  data: GQLSwift_codeInsertInput;
}
export interface MutationToUpsertOneSwift_codeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneSwift_codeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneSwift_messageArgs {
  query?: GQLSwift_messageQueryInput;
  data: GQLSwift_messageInsertInput;
}
export interface MutationToUpsertOneSwift_messageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneSwift_messageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneTestArgs {
  query?: GQLTestQueryInput;
  data: GQLTestInsertInput;
}
export interface MutationToUpsertOneTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneTestArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneTokenArgs {
  data: GQLTokenInsertInput;
  query?: GQLTokenQueryInput;
}
export interface MutationToUpsertOneTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneTokenArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneTokenColArgs {
  query?: GQLTokenColQueryInput;
  data: GQLTokenColInsertInput;
}
export interface MutationToUpsertOneTokenColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneTokenColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneTriggerArgs {
  data: GQLTriggerInsertInput;
  query?: GQLTriggerQueryInput;
}
export interface MutationToUpsertOneTriggerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneTriggerArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneUi_assetArgs {
  query?: GQLUi_assetQueryInput;
  data: GQLUi_assetInsertInput;
}
export interface MutationToUpsertOneUi_assetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneUi_assetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneUi_chartArgs {
  query?: GQLUi_chartQueryInput;
  data: GQLUi_chartInsertInput;
}
export interface MutationToUpsertOneUi_chartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneUi_chartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneUi_managementArgs {
  data: GQLUi_managementInsertInput;
  query?: GQLUi_managementQueryInput;
}
export interface MutationToUpsertOneUi_managementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneUi_managementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneUi_moduleArgs {
  query?: GQLUi_moduleQueryInput;
  data: GQLUi_moduleInsertInput;
}
export interface MutationToUpsertOneUi_moduleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneUi_moduleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MutationToUpsertOneUserArgs {
  data: GQLUserInsertInput;
  query?: GQLUserQueryInput;
}
export interface MutationToUpsertOneUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MutationToUpsertOneUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUi_chartTypeResolver<TParent = any> {
  _id?: Ui_chartTo_idResolver<TParent>;
  aggregationField?: Ui_chartToAggregationFieldResolver<TParent>;
  airtableId?: Ui_chartToAirtableIdResolver<TParent>;
  createdAt?: Ui_chartToCreatedAtResolver<TParent>;
  dataObject?: Ui_chartToDataObjectResolver<TParent>;
  field?: Ui_chartToFieldResolver<TParent>;
  function?: Ui_chartToFunctionResolver<TParent>;
  limit?: Ui_chartToLimitResolver<TParent>;
  linkSuffix?: Ui_chartToLinkSuffixResolver<TParent>;
  moduleID?: Ui_chartToModuleIDResolver<TParent>;
  name?: Ui_chartToNameResolver<TParent>;
  outputObject?: Ui_chartToOutputObjectResolver<TParent>;
  sort?: Ui_chartToSortResolver<TParent>;
  updatedAt?: Ui_chartToUpdatedAtResolver<TParent>;
}

export interface Ui_chartTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToAggregationFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToAirtableIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToDataObjectResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToFunctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToLimitResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToLinkSuffixResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToModuleIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToOutputObjectResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToSortResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_chartToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTestTypeResolver<TParent = any> {
  _id?: TestTo_idResolver<TParent>;
  crossEndorsement?: TestToCrossEndorsementResolver<TParent>;
  temporaryEndorsements?: TestToTemporaryEndorsementsResolver<TParent>;
}

export interface TestTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TestToCrossEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TestToTemporaryEndorsementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSeriesTypeResolver<TParent = any> {
  _id?: SeriesTo_idResolver<TParent>;
  createdAt?: SeriesToCreatedAtResolver<TParent>;
  deployed?: SeriesToDeployedResolver<TParent>;
  raw?: SeriesToRawResolver<TParent>;
  seriesID?: SeriesToSeriesIDResolver<TParent>;
  updatedAt?: SeriesToUpdatedAtResolver<TParent>;
}

export interface SeriesTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesToSeriesIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCol1TypeResolver<TParent = any> {
  _id?: Col1To_idResolver<TParent>;
  address?: Col1ToAddressResolver<TParent>;
  createdAt?: Col1ToCreatedAtResolver<TParent>;
  creator?: Col1ToCreatorResolver<TParent>;
  description?: Col1ToDescriptionResolver<TParent>;
  hash?: Col1ToHashResolver<TParent>;
  layers?: Col1ToLayersResolver<TParent>;
  maximum?: Col1ToMaximumResolver<TParent>;
  mintCost?: Col1ToMintCostResolver<TParent>;
  name?: Col1ToNameResolver<TParent>;
  seriesId?: Col1ToSeriesIdResolver<TParent>;
  supply?: Col1ToSupplyResolver<TParent>;
  updatedAt?: Col1ToUpdatedAtResolver<TParent>;
}

export interface Col1To_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToLayersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToMaximumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToMintCostResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToSeriesIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToSupplyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1ToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeAbiTypeResolver<TParent = any> {
  root?: Contract_typeAbiToRootResolver<TParent>;
  series?: Contract_typeAbiToSeriesResolver<TParent>;
  token?: Contract_typeAbiToTokenResolver<TParent>;
  trx?: Contract_typeAbiToTrxResolver<TParent>;
}

export interface Contract_typeAbiToRootResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeAbiToSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeAbiToTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeAbiToTrxResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAuctionDeployedTypeResolver<TParent = any> {
  auctionAddress?: AuctionDeployedToAuctionAddressResolver<TParent>;
  bidStep?: AuctionDeployedToBidStepResolver<TParent>;
  bids?: AuctionDeployedToBidsResolver<TParent>;
  endTime?: AuctionDeployedToEndTimeResolver<TParent>;
  finalBid?: AuctionDeployedToFinalBidResolver<TParent>;
  showcaseFee?: AuctionDeployedToShowcaseFeeResolver<TParent>;
  startBid?: AuctionDeployedToStartBidResolver<TParent>;
  startTime?: AuctionDeployedToStartTimeResolver<TParent>;
  status?: AuctionDeployedToStatusResolver<TParent>;
  superType?: AuctionDeployedToSuperTypeResolver<TParent>;
  tokenAddress?: AuctionDeployedToTokenAddressResolver<TParent>;
  tokenID?: AuctionDeployedToTokenIDResolver<TParent>;
}

export interface AuctionDeployedToAuctionAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToBidStepResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToBidsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToFinalBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToShowcaseFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToStartBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToStartTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAskDeployedTypeResolver<TParent = any> {
  askAddress?: AskDeployedToAskAddressResolver<TParent>;
  askCreator?: AskDeployedToAskCreatorResolver<TParent>;
  blockchain?: AskDeployedToBlockchainResolver<TParent>;
  currentAskValue?: AskDeployedToCurrentAskValueResolver<TParent>;
  endTime?: AskDeployedToEndTimeResolver<TParent>;
  showcaseFee?: AskDeployedToShowcaseFeeResolver<TParent>;
  status?: AskDeployedToStatusResolver<TParent>;
  superType?: AskDeployedToSuperTypeResolver<TParent>;
  tokenAddress?: AskDeployedToTokenAddressResolver<TParent>;
  tokenID?: AskDeployedToTokenIDResolver<TParent>;
  values?: AskDeployedToValuesResolver<TParent>;
}

export interface AskDeployedToAskAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToAskCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToCurrentAskValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToShowcaseFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskDeployedToValuesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSubscriptionTypeResolver<TParent = any> {
  _id?: SubscriptionTo_idResolver<TParent>;
  abiFileUrl?: SubscriptionToAbiFileUrlResolver<TParent>;
  address?: SubscriptionToAddressResolver<TParent>;
  blockchain?: SubscriptionToBlockchainResolver<TParent>;
  lastBlockRead?: SubscriptionToLastBlockReadResolver<TParent>;
  status?: SubscriptionToStatusResolver<TParent>;
  superType?: SubscriptionToSuperTypeResolver<TParent>;
}

export interface SubscriptionTo_idResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface SubscriptionToAbiFileUrlResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface SubscriptionToAddressResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface SubscriptionToBlockchainResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface SubscriptionToLastBlockReadResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface SubscriptionToStatusResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface SubscriptionToSuperTypeResolver<TParent = any, TResult = any> {
  resolve?: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => TResult;
  subscribe: (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;
}

export interface GQLUpdateManyPayloadTypeResolver<TParent = any> {
  matchedCount?: UpdateManyPayloadToMatchedCountResolver<TParent>;
  modifiedCount?: UpdateManyPayloadToModifiedCountResolver<TParent>;
}

export interface UpdateManyPayloadToMatchedCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UpdateManyPayloadToModifiedCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCol1LayerTypeResolver<TParent = any> {
  images?: Col1LayerToImagesResolver<TParent>;
  layer?: Col1LayerToLayerResolver<TParent>;
  points?: Col1LayerToPointsResolver<TParent>;
}

export interface Col1LayerToImagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerToLayerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerToPointsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeHashFieldTypeResolver<TParent = any> {
  collectionID?: Contract_typeHashFieldToCollectionIDResolver<TParent>;
  creator?: Contract_typeHashFieldToCreatorResolver<TParent>;
  creatorFee?: Contract_typeHashFieldToCreatorFeeResolver<TParent>;
  description?: Contract_typeHashFieldToDescriptionResolver<TParent>;
  height?: Contract_typeHashFieldToHeightResolver<TParent>;
  layers?: Contract_typeHashFieldToLayersResolver<TParent>;
  media?: Contract_typeHashFieldToMediaResolver<TParent>;
  minimalMintFee?: Contract_typeHashFieldToMinimalMintFeeResolver<TParent>;
  numberOfEditions?: Contract_typeHashFieldToNumberOfEditionsResolver<TParent>;
  title?: Contract_typeHashFieldToTitleResolver<TParent>;
  type?: Contract_typeHashFieldToTypeResolver<TParent>;
  width?: Contract_typeHashFieldToWidthResolver<TParent>;
}

export interface Contract_typeHashFieldToCollectionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToCreatorFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToLayersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToMediaResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToMinimalMintFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToNumberOfEditionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContractTypeResolver<TParent = any> {
  _id?: ContractTo_idResolver<TParent>;
  abiFile?: ContractToAbiFileResolver<TParent>;
  abiPath?: ContractToAbiPathResolver<TParent>;
  address?: ContractToAddressResolver<TParent>;
  blockchain?: ContractToBlockchainResolver<TParent>;
  environment?: ContractToEnvironmentResolver<TParent>;
  longType?: ContractToLongTypeResolver<TParent>;
  network?: ContractToNetworkResolver<TParent>;
  privacy?: ContractToPrivacyResolver<TParent>;
  status?: ContractToStatusResolver<TParent>;
  superType?: ContractToSuperTypeResolver<TParent>;
}

export interface ContractTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToAbiFileResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToAbiPathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToEnvironmentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToLongTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToPrivacyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ContractToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUi_managementTypeResolver<TParent = any> {
  _id?: Ui_managementTo_idResolver<TParent>;
  airtableId?: Ui_managementToAirtableIdResolver<TParent>;
  assetID?: Ui_managementToAssetIDResolver<TParent>;
  assetTitle?: Ui_managementToAssetTitleResolver<TParent>;
  createdAt?: Ui_managementToCreatedAtResolver<TParent>;
  image?: Ui_managementToImageResolver<TParent>;
  itemID?: Ui_managementToItemIDResolver<TParent>;
  itemLink?: Ui_managementToItemLinkResolver<TParent>;
  moduleID?: Ui_managementToModuleIDResolver<TParent>;
  moduleItemType?: Ui_managementToModuleItemTypeResolver<TParent>;
  moduleName?: Ui_managementToModuleNameResolver<TParent>;
  moduleScope?: Ui_managementToModuleScopeResolver<TParent>;
  recordID?: Ui_managementToRecordIDResolver<TParent>;
  tag?: Ui_managementToTagResolver<TParent>;
  updatedAt?: Ui_managementToUpdatedAtResolver<TParent>;
  visibilityStatus?: Ui_managementToVisibilityStatusResolver<TParent>;
}

export interface Ui_managementTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToAirtableIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToAssetIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToAssetTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToImageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToItemIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToItemLinkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToModuleIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToModuleItemTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToModuleNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToModuleScopeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToRecordIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToTagResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_managementToVisibilityStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionColActionAttributeTypeResolver<TParent = any> {
  actionCapture?: ActionColActionAttributeToActionCaptureResolver<TParent>;
}

export interface ActionColActionAttributeToActionCaptureResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeHashFieldMediumTypeResolver<TParent = any> {
  hash?: Contract_typeHashFieldMediumToHashResolver<TParent>;
  height?: Contract_typeHashFieldMediumToHeightResolver<TParent>;
  mimetype?: Contract_typeHashFieldMediumToMimetypeResolver<TParent>;
  role?: Contract_typeHashFieldMediumToRoleResolver<TParent>;
  subtitle?: Contract_typeHashFieldMediumToSubtitleResolver<TParent>;
  weight?: Contract_typeHashFieldMediumToWeightResolver<TParent>;
  width?: Contract_typeHashFieldMediumToWidthResolver<TParent>;
}

export interface Contract_typeHashFieldMediumToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldMediumToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldMediumToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldMediumToRoleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldMediumToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldMediumToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldMediumToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBlockchainTypeResolver<TParent = any> {
  _id?: BlockchainTo_idResolver<TParent>;
  contractsRepo?: BlockchainToContractsRepoResolver<TParent>;
  name?: BlockchainToNameResolver<TParent>;
  network?: BlockchainToNetworkResolver<TParent>;
}

export interface BlockchainTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BlockchainToContractsRepoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BlockchainToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BlockchainToNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUserTypeResolver<TParent = any> {
  _id?: UserTo_idResolver<TParent>;
  about?: UserToAboutResolver<TParent>;
  accountNumber?: UserToAccountNumberResolver<TParent>;
  avatarHash?: UserToAvatarHashResolver<TParent>;
  blockchain?: UserToBlockchainResolver<TParent>;
  createdAt?: UserToCreatedAtResolver<TParent>;
  defaultWallet?: UserToDefaultWalletResolver<TParent>;
  integrations?: UserToIntegrationsResolver<TParent>;
  language?: UserToLanguageResolver<TParent>;
  managingAccount?: UserToManagingAccountResolver<TParent>;
  mergedAccounts?: UserToMergedAccountsResolver<TParent>;
  nickname?: UserToNicknameResolver<TParent>;
  photoHash?: UserToPhotoHashResolver<TParent>;
  qualification?: UserToQualificationResolver<TParent>;
  registeredWallet?: UserToRegisteredWalletResolver<TParent>;
  settings?: UserToSettingsResolver<TParent>;
  updatedAt?: UserToUpdatedAtResolver<TParent>;
  username?: UserToUsernameResolver<TParent>;
  walletAddress?: UserToWalletAddressResolver<TParent>;
  wallpaperHash?: UserToWallpaperHashResolver<TParent>;
}

export interface UserTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToAboutResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToAccountNumberResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToAvatarHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToDefaultWalletResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToIntegrationsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToLanguageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToManagingAccountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToMergedAccountsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToNicknameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToPhotoHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToQualificationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToRegisteredWalletResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToSettingsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToUsernameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToWalletAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserToWallpaperHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLOpendatumPermissionTypeResolver<TParent = any> {
  functions?: OpendatumPermissionToFunctionsResolver<TParent>;
  root?: OpendatumPermissionToRootResolver<TParent>;
}

export interface OpendatumPermissionToFunctionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface OpendatumPermissionToRootResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBidTypeResolver<TParent = any> {
  _id?: BidTo_idResolver<TParent>;
  bidID?: BidToBidIDResolver<TParent>;
  createdAt?: BidToCreatedAtResolver<TParent>;
  deployed?: BidToDeployedResolver<TParent>;
  raw?: BidToRawResolver<TParent>;
  updatedAt?: BidToUpdatedAtResolver<TParent>;
}

export interface BidTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidToBidIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionColMessageTypeResolver<TParent = any> {
  actionCode?: ActionColMessageToActionCodeResolver<TParent>;
  hash?: ActionColMessageToHashResolver<TParent>;
  senderAddress?: ActionColMessageToSenderAddressResolver<TParent>;
  senderID?: ActionColMessageToSenderIDResolver<TParent>;
  superType?: ActionColMessageToSuperTypeResolver<TParent>;
  time?: ActionColMessageToTimeResolver<TParent>;
}

export interface ActionColMessageToActionCodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColMessageToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColMessageToSenderAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColMessageToSenderIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColMessageToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColMessageToTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeParameterTypeResolver<TParent = any> {
  hashLevel?: Contract_typeParameterToHashLevelResolver<TParent>;
  likesLevel?: Contract_typeParameterToLikesLevelResolver<TParent>;
  sharesLevel?: Contract_typeParameterToSharesLevelResolver<TParent>;
}

export interface Contract_typeParameterToHashLevelResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeParameterToLikesLevelResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeParameterToSharesLevelResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCollectionRawTypeResolver<TParent = any> {
  about?: CollectionRawToAboutResolver<TParent>;
  blockchain?: CollectionRawToBlockchainResolver<TParent>;
  creator?: CollectionRawToCreatorResolver<TParent>;
  hash?: CollectionRawToHashResolver<TParent>;
  media?: CollectionRawToMediaResolver<TParent>;
  privacy?: CollectionRawToPrivacyResolver<TParent>;
  superType?: CollectionRawToSuperTypeResolver<TParent>;
  title?: CollectionRawToTitleResolver<TParent>;
  txHash?: CollectionRawToTxHashResolver<TParent>;
  type?: CollectionRawToTypeResolver<TParent>;
}

export interface CollectionRawToAboutResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToMediaResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToPrivacyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToTxHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionColTokenAttributeTypeResolver<TParent = any> {
  seriesCreator?: ActionColTokenAttributeToSeriesCreatorResolver<TParent>;
  seriesID?: ActionColTokenAttributeToSeriesIDResolver<TParent>;
  tokenID?: ActionColTokenAttributeToTokenIDResolver<TParent>;
}

export interface ActionColTokenAttributeToSeriesCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColTokenAttributeToSeriesIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionColTokenAttributeToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLHourlyTypeResolver<TParent = any> {
  BNBtoUSD?: HourlyToBNBtoUSDResolver<TParent>;
  EVERtoUSD?: HourlyToEVERtoUSDResolver<TParent>;
  USD?: HourlyToUSDResolver<TParent>;
  _id?: HourlyTo_idResolver<TParent>;
  blockchain?: HourlyToBlockchainResolver<TParent>;
  time?: HourlyToTimeResolver<TParent>;
}

export interface HourlyToBNBtoUSDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface HourlyToEVERtoUSDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface HourlyToUSDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface HourlyTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface HourlyToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface HourlyToTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionTypeResolver<TParent = any> {
  _id?: ActionTo_idResolver<TParent>;
  actionAttributes?: ActionToActionAttributesResolver<TParent>;
  blockchain?: ActionToBlockchainResolver<TParent>;
  createdAt?: ActionToCreatedAtResolver<TParent>;
  message?: ActionToMessageResolver<TParent>;
  tokenAttributes?: ActionToTokenAttributesResolver<TParent>;
  updatedAt?: ActionToUpdatedAtResolver<TParent>;
}

export interface ActionTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionToActionAttributesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionToMessageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionToTokenAttributesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeHashFieldLayerImageTypeResolver<TParent = any> {
  hash?: Contract_typeHashFieldLayerImageToHashResolver<TParent>;
  imageIndex?: Contract_typeHashFieldLayerImageToImageIndexResolver<TParent>;
  mimetype?: Contract_typeHashFieldLayerImageToMimetypeResolver<TParent>;
  rarityWeight?: Contract_typeHashFieldLayerImageToRarityWeightResolver<TParent>;
  weight?: Contract_typeHashFieldLayerImageToWeightResolver<TParent>;
}

export interface Contract_typeHashFieldLayerImageToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldLayerImageToImageIndexResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldLayerImageToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldLayerImageToRarityWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeHashFieldLayerImageToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLLocaleTypeResolver<TParent = any> {
  _id?: LocaleTo_idResolver<TParent>;
  createdAt?: LocaleToCreatedAtResolver<TParent>;
  lang?: LocaleToLangResolver<TParent>;
  module?: LocaleToModuleResolver<TParent>;
  moduleName?: LocaleToModuleNameResolver<TParent>;
  string?: LocaleToStringResolver<TParent>;
  stringName?: LocaleToStringNameResolver<TParent>;
  updatedAt?: LocaleToUpdatedAtResolver<TParent>;
}

export interface LocaleTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToLangResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToModuleNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToStringResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToStringNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LocaleToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLEventTypeResolver<TParent = any> {
  _id?: EventTo_idResolver<TParent>;
  blockNumber?: EventToBlockNumberResolver<TParent>;
  blockchain?: EventToBlockchainResolver<TParent>;
  createdAt?: EventToCreatedAtResolver<TParent>;
  message?: EventToMessageResolver<TParent>;
  parameters?: EventToParametersResolver<TParent>;
  status?: EventToStatusResolver<TParent>;
  topics?: EventToTopicsResolver<TParent>;
  updatedAt?: EventToUpdatedAtResolver<TParent>;
}

export interface EventTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToBlockNumberResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToMessageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToParametersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToTopicsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCollectionDeployedTypeResolver<TParent = any> {
  address?: CollectionDeployedToAddressResolver<TParent>;
  blockNumber?: CollectionDeployedToBlockNumberResolver<TParent>;
  blockchain?: CollectionDeployedToBlockchainResolver<TParent>;
  creator?: CollectionDeployedToCreatorResolver<TParent>;
  hash?: CollectionDeployedToHashResolver<TParent>;
  privacy?: CollectionDeployedToPrivacyResolver<TParent>;
  superType?: CollectionDeployedToSuperTypeResolver<TParent>;
  supply?: CollectionDeployedToSupplyResolver<TParent>;
  type?: CollectionDeployedToTypeResolver<TParent>;
}

export interface CollectionDeployedToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToBlockNumberResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToPrivacyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToSupplyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionDeployedToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSessionTypeResolver<TParent = any> {
  _id?: SessionTo_idResolver<TParent>;
  accountNumberObject?: SessionToAccountNumberObjectResolver<TParent>;
  address?: SessionToAddressResolver<TParent>;
  confirmationHash?: SessionToConfirmationHashResolver<TParent>;
  cookiesHash?: SessionToCookiesHashResolver<TParent>;
  createdAt?: SessionToCreatedAtResolver<TParent>;
  integrationCode?: SessionToIntegrationCodeResolver<TParent>;
  isExpired?: SessionToIsExpiredResolver<TParent>;
  swiftMessageTime?: SessionToSwiftMessageTimeResolver<TParent>;
  updatedAt?: SessionToUpdatedAtResolver<TParent>;
}

export interface SessionTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToAccountNumberObjectResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToConfirmationHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToCookiesHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToIntegrationCodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToIsExpiredResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToSwiftMessageTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SessionToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAskTypeResolver<TParent = any> {
  _id?: AskTo_idResolver<TParent>;
  askID?: AskToAskIDResolver<TParent>;
  createdAt?: AskToCreatedAtResolver<TParent>;
  deployed?: AskToDeployedResolver<TParent>;
  raw?: AskToRawResolver<TParent>;
  updatedAt?: AskToUpdatedAtResolver<TParent>;
}

export interface AskTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskToAskIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLIpfTypeResolver<TParent = any> {
  _id?: IpfTo_idResolver<TParent>;
  createdAt?: IpfToCreatedAtResolver<TParent>;
  ipfsHash?: IpfToIpfsHashResolver<TParent>;
  mediaHash?: IpfToMediaHashResolver<TParent>;
}

export interface IpfTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IpfToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IpfToIpfsHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface IpfToMediaHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCollectionRawMediumTypeResolver<TParent = any> {
  hash?: CollectionRawMediumToHashResolver<TParent>;
  height?: CollectionRawMediumToHeightResolver<TParent>;
  mimetype?: CollectionRawMediumToMimetypeResolver<TParent>;
  role?: CollectionRawMediumToRoleResolver<TParent>;
  subtitle?: CollectionRawMediumToSubtitleResolver<TParent>;
  weight?: CollectionRawMediumToWeightResolver<TParent>;
  width?: CollectionRawMediumToWidthResolver<TParent>;
}

export interface CollectionRawMediumToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawMediumToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawMediumToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawMediumToRoleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawMediumToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawMediumToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CollectionRawMediumToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLInsertManyPayloadTypeResolver<TParent = any> {
  insertedIds?: InsertManyPayloadToInsertedIdsResolver<TParent>;
}

export interface InsertManyPayloadToInsertedIdsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSwift_messageTypeResolver<TParent = any> {
  _id?: Swift_messageTo_idResolver<TParent>;
  createdAt?: Swift_messageToCreatedAtResolver<TParent>;
  hash?: Swift_messageToHashResolver<TParent>;
  message?: Swift_messageToMessageResolver<TParent>;
  parameters?: Swift_messageToParametersResolver<TParent>;
  status?: Swift_messageToStatusResolver<TParent>;
  updatedAt?: Swift_messageToUpdatedAtResolver<TParent>;
}

export interface Swift_messageTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageToMessageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageToParametersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAskRawTypeResolver<TParent = any> {
  askCreator?: AskRawToAskCreatorResolver<TParent>;
  blockchain?: AskRawToBlockchainResolver<TParent>;
  currentAskValue?: AskRawToCurrentAskValueResolver<TParent>;
  endTime?: AskRawToEndTimeResolver<TParent>;
  showcaseFee?: AskRawToShowcaseFeeResolver<TParent>;
  superType?: AskRawToSuperTypeResolver<TParent>;
  tokenAddress?: AskRawToTokenAddressResolver<TParent>;
  tokenID?: AskRawToTokenIDResolver<TParent>;
  values?: AskRawToValuesResolver<TParent>;
}

export interface AskRawToAskCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToCurrentAskValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToShowcaseFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawToValuesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenTypeResolver<TParent = any> {
  _id?: TokenTo_idResolver<TParent>;
  createdAt?: TokenToCreatedAtResolver<TParent>;
  deployed?: TokenToDeployedResolver<TParent>;
  raw?: TokenToRawResolver<TParent>;
  tokenID?: TokenToTokenIDResolver<TParent>;
  updatedAt?: TokenToUpdatedAtResolver<TParent>;
}

export interface TokenTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLRoyaltyTypeResolver<TParent = any> {
  _id?: RoyaltyTo_idResolver<TParent>;
  count?: RoyaltyToCountResolver<TParent>;
  lowerValue?: RoyaltyToLowerValueResolver<TParent>;
  percentage?: RoyaltyToPercentageResolver<TParent>;
  upperValue?: RoyaltyToUpperValueResolver<TParent>;
}

export interface RoyaltyTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface RoyaltyToCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface RoyaltyToLowerValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface RoyaltyToPercentageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface RoyaltyToUpperValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCol1LayerPointTypeResolver<TParent = any> {
  hash?: Col1LayerPointToHashResolver<TParent>;
  point?: Col1LayerPointToPointResolver<TParent>;
}

export interface Col1LayerPointToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerPointToPointResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenRawMediumTypeResolver<TParent = any> {
  hash?: TokenRawMediumToHashResolver<TParent>;
  height?: TokenRawMediumToHeightResolver<TParent>;
  ipfsHash?: TokenRawMediumToIpfsHashResolver<TParent>;
  mimetype?: TokenRawMediumToMimetypeResolver<TParent>;
  role?: TokenRawMediumToRoleResolver<TParent>;
  subtitle?: TokenRawMediumToSubtitleResolver<TParent>;
  weight?: TokenRawMediumToWeightResolver<TParent>;
  width?: TokenRawMediumToWidthResolver<TParent>;
}

export interface TokenRawMediumToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToIpfsHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToRoleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawMediumToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTestTemporaryEndorsementTypeResolver<TParent = any> {
  expiresAt?: TestTemporaryEndorsementToExpiresAtResolver<TParent>;
  sealID?: TestTemporaryEndorsementToSealIDResolver<TParent>;
}

export interface TestTemporaryEndorsementToExpiresAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TestTemporaryEndorsementToSealIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLDailyTypeResolver<TParent = any> {
  _id?: DailyTo_idResolver<TParent>;
  blockchain?: DailyToBlockchainResolver<TParent>;
  createdAt?: DailyToCreatedAtResolver<TParent>;
  date?: DailyToDateResolver<TParent>;
  endorsementAverage?: DailyToEndorsementAverageResolver<TParent>;
  endorsementMax?: DailyToEndorsementMaxResolver<TParent>;
  endorsementMin?: DailyToEndorsementMinResolver<TParent>;
  saleAverage?: DailyToSaleAverageResolver<TParent>;
  saleMax?: DailyToSaleMaxResolver<TParent>;
  saleMin?: DailyToSaleMinResolver<TParent>;
  tokensCreated?: DailyToTokensCreatedResolver<TParent>;
  tokensEndorsed?: DailyToTokensEndorsedResolver<TParent>;
  tokensSold?: DailyToTokensSoldResolver<TParent>;
  totalEndorsementsSum?: DailyToTotalEndorsementsSumResolver<TParent>;
  totalSalesSum?: DailyToTotalSalesSumResolver<TParent>;
  totalSum?: DailyToTotalSumResolver<TParent>;
  updatedAt?: DailyToUpdatedAtResolver<TParent>;
}

export interface DailyTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToDateResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToEndorsementAverageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToEndorsementMaxResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToEndorsementMinResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToSaleAverageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToSaleMaxResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToSaleMinResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToTokensCreatedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToTokensEndorsedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToTokensSoldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToTotalEndorsementsSumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToTotalSalesSumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToTotalSumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DailyToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLModuleTypeResolver<TParent = any> {
  _id?: ModuleTo_idResolver<TParent>;
  createdAt?: ModuleToCreatedAtResolver<TParent>;
  module?: ModuleToModuleResolver<TParent>;
  nameType?: ModuleToNameTypeResolver<TParent>;
  page?: ModuleToPageResolver<TParent>;
  type?: ModuleToTypeResolver<TParent>;
  updatedAt?: ModuleToUpdatedAtResolver<TParent>;
}

export interface ModuleTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ModuleToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ModuleToModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ModuleToNameTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ModuleToPageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ModuleToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ModuleToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLEndorsementRawTypeResolver<TParent = any> {
  blockchain?: EndorsementRawToBlockchainResolver<TParent>;
  cornerNE?: EndorsementRawToCornerNEResolver<TParent>;
  cornerNW?: EndorsementRawToCornerNWResolver<TParent>;
  cornerSE?: EndorsementRawToCornerSEResolver<TParent>;
  cornerSW?: EndorsementRawToCornerSWResolver<TParent>;
  creator?: EndorsementRawToCreatorResolver<TParent>;
  expiresAt?: EndorsementRawToExpiresAtResolver<TParent>;
  masterID?: EndorsementRawToMasterIDResolver<TParent>;
  masterMediaType?: EndorsementRawToMasterMediaTypeResolver<TParent>;
  sealID?: EndorsementRawToSealIDResolver<TParent>;
  superType?: EndorsementRawToSuperTypeResolver<TParent>;
  tokenID?: EndorsementRawToTokenIDResolver<TParent>;
  type?: EndorsementRawToTypeResolver<TParent>;
  value?: EndorsementRawToValueResolver<TParent>;
}

export interface EndorsementRawToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToCornerNEResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToCornerNWResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToCornerSEResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToCornerSWResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToExpiresAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToMasterIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToMasterMediaTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToSealIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementRawToValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenDeployedStampTypeResolver<TParent = any> {
  tokenID?: TokenDeployedStampToTokenIDResolver<TParent>;
}

export interface TokenDeployedStampToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCommissionTypeResolver<TParent = any> {
  _id?: CommissionTo_idResolver<TParent>;
  blockchain?: CommissionToBlockchainResolver<TParent>;
  commissionId?: CommissionToCommissionIdResolver<TParent>;
  description?: CommissionToDescriptionResolver<TParent>;
  type?: CommissionToTypeResolver<TParent>;
  value?: CommissionToValueResolver<TParent>;
  valueBNB?: CommissionToValueBNBResolver<TParent>;
}

export interface CommissionTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CommissionToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CommissionToCommissionIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CommissionToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CommissionToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CommissionToValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface CommissionToValueBNBResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionTokenAttributeTypeResolver<TParent = any> {
  collectionCreator?: ActionTokenAttributeToCollectionCreatorResolver<TParent>;
  collectionID?: ActionTokenAttributeToCollectionIDResolver<TParent>;
  creatorFees?: ActionTokenAttributeToCreatorFeesResolver<TParent>;
  hash?: ActionTokenAttributeToHashResolver<TParent>;
  manager?: ActionTokenAttributeToManagerResolver<TParent>;
  maximum?: ActionTokenAttributeToMaximumResolver<TParent>;
  newOwner?: ActionTokenAttributeToNewOwnerResolver<TParent>;
  oldOwner?: ActionTokenAttributeToOldOwnerResolver<TParent>;
  owner?: ActionTokenAttributeToOwnerResolver<TParent>;
  ownerPublicKey?: ActionTokenAttributeToOwnerPublicKeyResolver<TParent>;
  seriesCreator?: ActionTokenAttributeToSeriesCreatorResolver<TParent>;
  seriesID?: ActionTokenAttributeToSeriesIDResolver<TParent>;
  supply?: ActionTokenAttributeToSupplyResolver<TParent>;
  tokenCreator?: ActionTokenAttributeToTokenCreatorResolver<TParent>;
  tokenID?: ActionTokenAttributeToTokenIDResolver<TParent>;
}

export interface ActionTokenAttributeToCollectionCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToCollectionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToCreatorFeesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToManagerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToMaximumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToNewOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToOldOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToOwnerPublicKeyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToSeriesCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToSeriesIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToSupplyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToTokenCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionTokenAttributeToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUi_moduleTypeResolver<TParent = any> {
  _id?: Ui_moduleTo_idResolver<TParent>;
  airtableId?: Ui_moduleToAirtableIdResolver<TParent>;
  autoFinish?: Ui_moduleToAutoFinishResolver<TParent>;
  autoStart?: Ui_moduleToAutoStartResolver<TParent>;
  buttonAction?: Ui_moduleToButtonActionResolver<TParent>;
  buttonLink?: Ui_moduleToButtonLinkResolver<TParent>;
  buttonName?: Ui_moduleToButtonNameResolver<TParent>;
  buttonType?: Ui_moduleToButtonTypeResolver<TParent>;
  comment?: Ui_moduleToCommentResolver<TParent>;
  createdAt?: Ui_moduleToCreatedAtResolver<TParent>;
  itemType?: Ui_moduleToItemTypeResolver<TParent>;
  mainLink?: Ui_moduleToMainLinkResolver<TParent>;
  managementIDs?: Ui_moduleToManagementIDsResolver<TParent>;
  mode?: Ui_moduleToModeResolver<TParent>;
  moduleID?: Ui_moduleToModuleIDResolver<TParent>;
  name?: Ui_moduleToNameResolver<TParent>;
  page?: Ui_moduleToPageResolver<TParent>;
  scope?: Ui_moduleToScopeResolver<TParent>;
  specialFeature?: Ui_moduleToSpecialFeatureResolver<TParent>;
  status?: Ui_moduleToStatusResolver<TParent>;
  timerVisible?: Ui_moduleToTimerVisibleResolver<TParent>;
  updatedAt?: Ui_moduleToUpdatedAtResolver<TParent>;
}

export interface Ui_moduleTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToAirtableIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToAutoFinishResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToAutoStartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToButtonActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToButtonLinkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToButtonNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToButtonTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToCommentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToItemTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToMainLinkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToManagementIDsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToModeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToModuleIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToPageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToScopeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToSpecialFeatureResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToTimerVisibleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_moduleToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLEndorsementTypeResolver<TParent = any> {
  _id?: EndorsementTo_idResolver<TParent>;
  createdAt?: EndorsementToCreatedAtResolver<TParent>;
  deployed?: EndorsementToDeployedResolver<TParent>;
  endorsementID?: EndorsementToEndorsementIDResolver<TParent>;
  raw?: EndorsementToRawResolver<TParent>;
  updatedAt?: EndorsementToUpdatedAtResolver<TParent>;
}

export interface EndorsementTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementToDeployedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementToEndorsementIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementToRawResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBlockchainNetworkMainTypeResolver<TParent = any> {
  browser?: BlockchainNetworkMainToBrowserResolver<TParent>;
  endpoint?: BlockchainNetworkMainToEndpointResolver<TParent>;
}

export interface BlockchainNetworkMainToBrowserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BlockchainNetworkMainToEndpointResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBidDeployedTypeResolver<TParent = any> {
  bidAddress?: BidDeployedToBidAddressResolver<TParent>;
  bidCreator?: BidDeployedToBidCreatorResolver<TParent>;
  bidValue?: BidDeployedToBidValueResolver<TParent>;
  endTime?: BidDeployedToEndTimeResolver<TParent>;
  status?: BidDeployedToStatusResolver<TParent>;
  superType?: BidDeployedToSuperTypeResolver<TParent>;
  tokenAddress?: BidDeployedToTokenAddressResolver<TParent>;
  tokenID?: BidDeployedToTokenIDResolver<TParent>;
}

export interface BidDeployedToBidAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToBidCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidDeployedToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUi_assetTypeResolver<TParent = any> {
  _id?: Ui_assetTo_idResolver<TParent>;
  airtableId?: Ui_assetToAirtableIdResolver<TParent>;
  assetID?: Ui_assetToAssetIDResolver<TParent>;
  assetSubtitle?: Ui_assetToAssetSubtitleResolver<TParent>;
  assetTitle?: Ui_assetToAssetTitleResolver<TParent>;
  createdAt?: Ui_assetToCreatedAtResolver<TParent>;
  image?: Ui_assetToImageResolver<TParent>;
  imageLanding?: Ui_assetToImageLandingResolver<TParent>;
  managementIDs?: Ui_assetToManagementIDsResolver<TParent>;
  textLanding?: Ui_assetToTextLandingResolver<TParent>;
  updatedAt?: Ui_assetToUpdatedAtResolver<TParent>;
}

export interface Ui_assetTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToAirtableIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToAssetIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToAssetSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToAssetTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToCreatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToImageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToImageLandingResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToManagementIDsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToTextLandingResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Ui_assetToUpdatedAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAddress_abiTypeResolver<TParent = any> {
  _id?: Address_abiTo_idResolver<TParent>;
  address?: Address_abiToAddressResolver<TParent>;
  level?: Address_abiToLevelResolver<TParent>;
  superType?: Address_abiToSuperTypeResolver<TParent>;
}

export interface Address_abiTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Address_abiToAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Address_abiToLevelResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Address_abiToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSwift_codeTypeResolver<TParent = any> {
  _id?: Swift_codeTo_idResolver<TParent>;
  actionCapture?: Swift_codeToActionCaptureResolver<TParent>;
  actorField?: Swift_codeToActorFieldResolver<TParent>;
  additionalInfo?: Swift_codeToAdditionalInfoResolver<TParent>;
  applicableBlockchains?: Swift_codeToApplicableBlockchainsResolver<TParent>;
  applicableContractType?: Swift_codeToApplicableContractTypeResolver<TParent>;
  code?: Swift_codeToCodeResolver<TParent>;
  description?: Swift_codeToDescriptionResolver<TParent>;
}

export interface Swift_codeTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToActionCaptureResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToActorFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToAdditionalInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToApplicableBlockchainsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToApplicableContractTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToCodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_codeToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSwift_messageParameterTypeResolver<TParent = any> {
  askCreator?: Swift_messageParameterToAskCreatorResolver<TParent>;
  askValue?: Swift_messageParameterToAskValueResolver<TParent>;
  auctionCreator?: Swift_messageParameterToAuctionCreatorResolver<TParent>;
  bidCreator?: Swift_messageParameterToBidCreatorResolver<TParent>;
  bidValue?: Swift_messageParameterToBidValueResolver<TParent>;
  buyer?: Swift_messageParameterToBuyerResolver<TParent>;
  endTime?: Swift_messageParameterToEndTimeResolver<TParent>;
  expirationTime?: Swift_messageParameterToExpirationTimeResolver<TParent>;
  finalBidValue?: Swift_messageParameterToFinalBidValueResolver<TParent>;
  id?: Swift_messageParameterToIdResolver<TParent>;
  newManager?: Swift_messageParameterToNewManagerResolver<TParent>;
  newOwner?: Swift_messageParameterToNewOwnerResolver<TParent>;
  seriesId?: Swift_messageParameterToSeriesIdResolver<TParent>;
  showcaseFees?: Swift_messageParameterToShowcaseFeesResolver<TParent>;
  startBid?: Swift_messageParameterToStartBidResolver<TParent>;
  startTime?: Swift_messageParameterToStartTimeResolver<TParent>;
  stepBid?: Swift_messageParameterToStepBidResolver<TParent>;
  tokenAddress?: Swift_messageParameterToTokenAddressResolver<TParent>;
}

export interface Swift_messageParameterToAskCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToAskValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToAuctionCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToBidCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToBuyerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToExpirationTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToFinalBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToNewManagerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToNewOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToSeriesIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToShowcaseFeesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToStartBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToStartTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToStepBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageParameterToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLNetworkTypeResolver<TParent = any> {
  _id?: NetworkTo_idResolver<TParent>;
  integration?: NetworkToIntegrationResolver<TParent>;
  name?: NetworkToNameResolver<TParent>;
  type?: NetworkToTypeResolver<TParent>;
}

export interface NetworkTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface NetworkToIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface NetworkToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface NetworkToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionMessageTypeResolver<TParent = any> {
  actionCode?: ActionMessageToActionCodeResolver<TParent>;
  hash?: ActionMessageToHashResolver<TParent>;
  resolution?: ActionMessageToResolutionResolver<TParent>;
  senderAddress?: ActionMessageToSenderAddressResolver<TParent>;
  senderID?: ActionMessageToSenderIDResolver<TParent>;
  superType?: ActionMessageToSuperTypeResolver<TParent>;
  time?: ActionMessageToTimeResolver<TParent>;
}

export interface ActionMessageToActionCodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionMessageToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionMessageToResolutionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionMessageToSenderAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionMessageToSenderIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionMessageToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionMessageToTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTriggerTypeResolver<TParent = any> {
  _id?: TriggerTo_idResolver<TParent>;
  lastDate?: TriggerToLastDateResolver<TParent>;
  name?: TriggerToNameResolver<TParent>;
}

export interface TriggerTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TriggerToLastDateResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TriggerToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLQueryTypeResolver<TParent = any> {
  action?: QueryToActionResolver<TParent>;
  actionCol?: QueryToActionColResolver<TParent>;
  actionCols?: QueryToActionColsResolver<TParent>;
  actionCount?: QueryToActionCountResolver<TParent>;
  actions?: QueryToActionsResolver<TParent>;
  address_abi?: QueryToAddress_abiResolver<TParent>;
  address_abis?: QueryToAddress_abisResolver<TParent>;
  ask?: QueryToAskResolver<TParent>;
  asks?: QueryToAsksResolver<TParent>;
  auction?: QueryToAuctionResolver<TParent>;
  auctions?: QueryToAuctionsResolver<TParent>;
  bid?: QueryToBidResolver<TParent>;
  bids?: QueryToBidsResolver<TParent>;
  blockchain?: QueryToBlockchainResolver<TParent>;
  blockchains?: QueryToBlockchainsResolver<TParent>;
  col1?: QueryToCol1Resolver<TParent>;
  col1s?: QueryToCol1sResolver<TParent>;
  collection?: QueryToCollectionResolver<TParent>;
  collectionCount?: QueryToCollectionCountResolver<TParent>;
  collections?: QueryToCollectionsResolver<TParent>;
  commission?: QueryToCommissionResolver<TParent>;
  commissions?: QueryToCommissionsResolver<TParent>;
  contract?: QueryToContractResolver<TParent>;
  contract_type?: QueryToContract_typeResolver<TParent>;
  contract_types?: QueryToContract_typesResolver<TParent>;
  contracts?: QueryToContractsResolver<TParent>;
  dailies?: QueryToDailiesResolver<TParent>;
  daily?: QueryToDailyResolver<TParent>;
  distinctTokensProps?: QueryToDistinctTokensPropsResolver<TParent>;
  endorsement?: QueryToEndorsementResolver<TParent>;
  endorsements?: QueryToEndorsementsResolver<TParent>;
  event?: QueryToEventResolver<TParent>;
  events?: QueryToEventsResolver<TParent>;
  format?: QueryToFormatResolver<TParent>;
  formats?: QueryToFormatsResolver<TParent>;
  getSession?: QueryToGetSessionResolver<TParent>;
  getSessions?: QueryToGetSessionsResolver<TParent>;
  hourlies?: QueryToHourliesResolver<TParent>;
  hourly?: QueryToHourlyResolver<TParent>;
  integration?: QueryToIntegrationResolver<TParent>;
  integrations?: QueryToIntegrationsResolver<TParent>;
  ipf?: QueryToIpfResolver<TParent>;
  ipfs?: QueryToIpfsResolver<TParent>;
  like?: QueryToLikeResolver<TParent>;
  likes?: QueryToLikesResolver<TParent>;
  locale?: QueryToLocaleResolver<TParent>;
  locales?: QueryToLocalesResolver<TParent>;
  module?: QueryToModuleResolver<TParent>;
  modules?: QueryToModulesResolver<TParent>;
  network?: QueryToNetworkResolver<TParent>;
  networks?: QueryToNetworksResolver<TParent>;
  new_session?: QueryToNew_sessionResolver<TParent>;
  new_sessions?: QueryToNew_sessionsResolver<TParent>;
  opendata?: QueryToOpendataResolver<TParent>;
  opendatum?: QueryToOpendatumResolver<TParent>;
  paginationAction?: QueryToPaginationActionResolver<TParent>;
  paginationCollection?: QueryToPaginationCollectionResolver<TParent>;
  paginationLocale?: QueryToPaginationLocaleResolver<TParent>;
  paginationModule?: QueryToPaginationModuleResolver<TParent>;
  paginationUiAsset?: QueryToPaginationUiAssetResolver<TParent>;
  paginationUiChart?: QueryToPaginationUiChartResolver<TParent>;
  paginationUiManagement?: QueryToPaginationUiManagementResolver<TParent>;
  paginationUiModule?: QueryToPaginationUiModuleResolver<TParent>;
  paginationUser?: QueryToPaginationUserResolver<TParent>;
  primary_json?: QueryToPrimary_jsonResolver<TParent>;
  primary_jsons?: QueryToPrimary_jsonsResolver<TParent>;
  royalties?: QueryToRoyaltiesResolver<TParent>;
  royalty?: QueryToRoyaltyResolver<TParent>;
  series?: QueryToSeriesResolver<TParent>;
  seriesCount?: QueryToSeriesCountResolver<TParent>;
  seriesPagination?: QueryToSeriesPaginationResolver<TParent>;
  seriess?: QueryToSeriessResolver<TParent>;
  session?: QueryToSessionResolver<TParent>;
  sessions?: QueryToSessionsResolver<TParent>;
  subscription?: QueryToSubscriptionResolver<TParent>;
  subscriptions?: QueryToSubscriptionsResolver<TParent>;
  swift_code?: QueryToSwift_codeResolver<TParent>;
  swift_codes?: QueryToSwift_codesResolver<TParent>;
  swift_message?: QueryToSwift_messageResolver<TParent>;
  swift_messages?: QueryToSwift_messagesResolver<TParent>;
  test?: QueryToTestResolver<TParent>;
  tests?: QueryToTestsResolver<TParent>;
  token?: QueryToTokenResolver<TParent>;
  tokenCol?: QueryToTokenColResolver<TParent>;
  tokenCols?: QueryToTokenColsResolver<TParent>;
  tokenCount?: QueryToTokenCountResolver<TParent>;
  tokenPagination?: QueryToTokenPaginationResolver<TParent>;
  tokens?: QueryToTokensResolver<TParent>;
  trigger?: QueryToTriggerResolver<TParent>;
  triggers?: QueryToTriggersResolver<TParent>;
  ui_asset?: QueryToUi_assetResolver<TParent>;
  ui_assets?: QueryToUi_assetsResolver<TParent>;
  ui_chart?: QueryToUi_chartResolver<TParent>;
  ui_charts?: QueryToUi_chartsResolver<TParent>;
  ui_management?: QueryToUi_managementResolver<TParent>;
  ui_managements?: QueryToUi_managementsResolver<TParent>;
  ui_module?: QueryToUi_moduleResolver<TParent>;
  ui_modules?: QueryToUi_modulesResolver<TParent>;
  user?: QueryToUserResolver<TParent>;
  users?: QueryToUsersResolver<TParent>;
}

export interface QueryToActionArgs {
  query?: GQLActionQueryInput;
}
export interface QueryToActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToActionColArgs {
  query?: GQLActionColQueryInput;
}
export interface QueryToActionColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToActionColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToActionColsArgs {
  query?: GQLActionColQueryInput;
  limit?: number;
  sortBy?: GQLActionColSortByInput;
}
export interface QueryToActionColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToActionColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToActionCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToActionsArgs {
  limit?: number;
  sortBy?: GQLActionSortByInput;
  query?: GQLActionQueryInput;
}
export interface QueryToActionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToActionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAddress_abiArgs {
  query?: GQLAddress_abiQueryInput;
}
export interface QueryToAddress_abiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAddress_abiArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAddress_abisArgs {
  query?: GQLAddress_abiQueryInput;
  limit?: number;
  sortBy?: GQLAddress_abiSortByInput;
}
export interface QueryToAddress_abisResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAddress_abisArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAskArgs {
  query?: GQLAskQueryInput;
}
export interface QueryToAskResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAskArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAsksArgs {
  query?: GQLAskQueryInput;
  limit?: number;
  sortBy?: GQLAskSortByInput;
}
export interface QueryToAsksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAsksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAuctionArgs {
  query?: GQLAuctionQueryInput;
}
export interface QueryToAuctionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAuctionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAuctionsArgs {
  query?: GQLAuctionQueryInput;
  limit?: number;
  sortBy?: GQLAuctionSortByInput;
}
export interface QueryToAuctionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAuctionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToBidArgs {
  query?: GQLBidQueryInput;
}
export interface QueryToBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToBidArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToBidsArgs {
  query?: GQLBidQueryInput;
  limit?: number;
  sortBy?: GQLBidSortByInput;
}
export interface QueryToBidsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToBidsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToBlockchainArgs {
  query?: GQLBlockchainQueryInput;
}
export interface QueryToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToBlockchainArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToBlockchainsArgs {
  query?: GQLBlockchainQueryInput;
  limit?: number;
  sortBy?: GQLBlockchainSortByInput;
}
export interface QueryToBlockchainsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToBlockchainsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCol1Args {
  query?: GQLCol1QueryInput;
}
export interface QueryToCol1Resolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCol1Args, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCol1sArgs {
  query?: GQLCol1QueryInput;
  limit?: number;
  sortBy?: GQLCol1SortByInput;
}
export interface QueryToCol1sResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCol1sArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCollectionArgs {
  query?: GQLCollectionQueryInput;
}
export interface QueryToCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCollectionCountArgs {
  input?: GQLCollectionCount;
}
export interface QueryToCollectionCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCollectionCountArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCollectionsArgs {
  query?: GQLCollectionQueryInput;
  limit?: number;
  sortBy?: GQLCollectionSortByInput;
}
export interface QueryToCollectionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCollectionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCommissionArgs {
  query?: GQLCommissionQueryInput;
}
export interface QueryToCommissionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCommissionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToCommissionsArgs {
  query?: GQLCommissionQueryInput;
  limit?: number;
  sortBy?: GQLCommissionSortByInput;
}
export interface QueryToCommissionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToCommissionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToContractArgs {
  query?: GQLContractQueryInput;
}
export interface QueryToContractResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToContractArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToContract_typeArgs {
  query?: GQLContract_typeQueryInput;
}
export interface QueryToContract_typeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToContract_typeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToContract_typesArgs {
  query?: GQLContract_typeQueryInput;
  limit?: number;
  sortBy?: GQLContract_typeSortByInput;
}
export interface QueryToContract_typesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToContract_typesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToContractsArgs {
  query?: GQLContractQueryInput;
  limit?: number;
  sortBy?: GQLContractSortByInput;
}
export interface QueryToContractsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToContractsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToDailiesArgs {
  query?: GQLDailyQueryInput;
  limit?: number;
  sortBy?: GQLDailySortByInput;
}
export interface QueryToDailiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToDailiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToDailyArgs {
  query?: GQLDailyQueryInput;
}
export interface QueryToDailyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToDailyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToDistinctTokensPropsArgs {
  input?: GQLTokensDistinct;
}
export interface QueryToDistinctTokensPropsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToDistinctTokensPropsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToEndorsementArgs {
  query?: GQLEndorsementQueryInput;
}
export interface QueryToEndorsementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToEndorsementsArgs {
  query?: GQLEndorsementQueryInput;
  limit?: number;
  sortBy?: GQLEndorsementSortByInput;
}
export interface QueryToEndorsementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToEndorsementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToEventArgs {
  query?: GQLEventQueryInput;
}
export interface QueryToEventResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToEventArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToEventsArgs {
  sortBy?: GQLEventSortByInput;
  query?: GQLEventQueryInput;
  limit?: number;
}
export interface QueryToEventsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToEventsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToFormatArgs {
  query?: GQLFormatQueryInput;
}
export interface QueryToFormatResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToFormatArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToFormatsArgs {
  limit?: number;
  sortBy?: GQLFormatSortByInput;
  query?: GQLFormatQueryInput;
}
export interface QueryToFormatsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToFormatsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToGetSessionArgs {
  input?: GQLGetSession;
}
export interface QueryToGetSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToGetSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToGetSessionsArgs {
  input?: GQLGetSessionsIn;
}
export interface QueryToGetSessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToGetSessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToHourliesArgs {
  query?: GQLHourlyQueryInput;
  limit?: number;
  sortBy?: GQLHourlySortByInput;
}
export interface QueryToHourliesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToHourliesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToHourlyArgs {
  query?: GQLHourlyQueryInput;
}
export interface QueryToHourlyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToHourlyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToIntegrationArgs {
  query?: GQLIntegrationQueryInput;
}
export interface QueryToIntegrationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToIntegrationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToIntegrationsArgs {
  query?: GQLIntegrationQueryInput;
  limit?: number;
  sortBy?: GQLIntegrationSortByInput;
}
export interface QueryToIntegrationsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToIntegrationsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToIpfArgs {
  query?: GQLIpfQueryInput;
}
export interface QueryToIpfResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToIpfArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToIpfsArgs {
  query?: GQLIpfQueryInput;
  limit?: number;
  sortBy?: GQLIpfSortByInput;
}
export interface QueryToIpfsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToIpfsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToLikeArgs {
  query?: GQLLikeQueryInput;
}
export interface QueryToLikeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToLikeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToLikesArgs {
  query?: GQLLikeQueryInput;
  limit?: number;
  sortBy?: GQLLikeSortByInput;
}
export interface QueryToLikesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToLikesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToLocaleArgs {
  query?: GQLLocaleQueryInput;
}
export interface QueryToLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToLocalesArgs {
  query?: GQLLocaleQueryInput;
  limit?: number;
  sortBy?: GQLLocaleSortByInput;
}
export interface QueryToLocalesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToLocalesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToModuleArgs {
  query?: GQLModuleQueryInput;
}
export interface QueryToModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToModulesArgs {
  query?: GQLModuleQueryInput;
  limit?: number;
  sortBy?: GQLModuleSortByInput;
}
export interface QueryToModulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToModulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToNetworkArgs {
  query?: GQLNetworkQueryInput;
}
export interface QueryToNetworkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToNetworksArgs {
  sortBy?: GQLNetworkSortByInput;
  query?: GQLNetworkQueryInput;
  limit?: number;
}
export interface QueryToNetworksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToNetworksArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToNew_sessionArgs {
  query?: GQLNew_sessionQueryInput;
}
export interface QueryToNew_sessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToNew_sessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToNew_sessionsArgs {
  query?: GQLNew_sessionQueryInput;
  limit?: number;
  sortBy?: GQLNew_sessionSortByInput;
}
export interface QueryToNew_sessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToNew_sessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToOpendataArgs {
  query?: GQLOpendatumQueryInput;
  limit?: number;
  sortBy?: GQLOpendatumSortByInput;
}
export interface QueryToOpendataResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToOpendataArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToOpendatumArgs {
  query?: GQLOpendatumQueryInput;
}
export interface QueryToOpendatumResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToOpendatumArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationActionArgs {
  input?: GQLPaginationAction;
}
export interface QueryToPaginationActionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationActionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationCollectionArgs {
  input?: GQLPaginationCollection;
}
export interface QueryToPaginationCollectionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationCollectionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationLocaleArgs {
  input?: GQLPaginationLocale;
}
export interface QueryToPaginationLocaleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationLocaleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationModuleArgs {
  input?: GQLPaginationModule;
}
export interface QueryToPaginationModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationUiAssetArgs {
  input?: GQLPaginationUiAsset;
}
export interface QueryToPaginationUiAssetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationUiAssetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationUiChartArgs {
  input?: GQLPaginationUiChart;
}
export interface QueryToPaginationUiChartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationUiChartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationUiManagementArgs {
  input?: GQLPaginationUiManagement;
}
export interface QueryToPaginationUiManagementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationUiManagementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationUiModuleArgs {
  input?: GQLPaginationUiModule;
}
export interface QueryToPaginationUiModuleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationUiModuleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPaginationUserArgs {
  input?: GQLPaginationUser;
}
export interface QueryToPaginationUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPaginationUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPrimary_jsonArgs {
  query?: GQLPrimary_jsonQueryInput;
}
export interface QueryToPrimary_jsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPrimary_jsonArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToPrimary_jsonsArgs {
  sortBy?: GQLPrimary_jsonSortByInput;
  query?: GQLPrimary_jsonQueryInput;
  limit?: number;
}
export interface QueryToPrimary_jsonsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToPrimary_jsonsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToRoyaltiesArgs {
  query?: GQLRoyaltyQueryInput;
  limit?: number;
  sortBy?: GQLRoyaltySortByInput;
}
export interface QueryToRoyaltiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToRoyaltiesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToRoyaltyArgs {
  query?: GQLRoyaltyQueryInput;
}
export interface QueryToRoyaltyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToRoyaltyArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSeriesArgs {
  query?: GQLSeriesQueryInput;
}
export interface QueryToSeriesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSeriesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSeriesCountArgs {
  input?: GQLSeriesCount;
}
export interface QueryToSeriesCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSeriesCountArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSeriesPaginationArgs {
  input?: GQLSeriesPagination;
}
export interface QueryToSeriesPaginationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSeriesPaginationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSeriessArgs {
  query?: GQLSeriesQueryInput;
  limit?: number;
  sortBy?: GQLSeriesSortByInput;
}
export interface QueryToSeriessResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSeriessArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSessionArgs {
  query?: GQLSessionQueryInput;
}
export interface QueryToSessionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSessionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSessionsArgs {
  query?: GQLSessionQueryInput;
  limit?: number;
  sortBy?: GQLSessionSortByInput;
}
export interface QueryToSessionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSessionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSubscriptionArgs {
  query?: GQLSubscriptionQueryInput;
}
export interface QueryToSubscriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSubscriptionsArgs {
  query?: GQLSubscriptionQueryInput;
  limit?: number;
  sortBy?: GQLSubscriptionSortByInput;
}
export interface QueryToSubscriptionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSubscriptionsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSwift_codeArgs {
  query?: GQLSwift_codeQueryInput;
}
export interface QueryToSwift_codeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSwift_codeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSwift_codesArgs {
  query?: GQLSwift_codeQueryInput;
  limit?: number;
  sortBy?: GQLSwift_codeSortByInput;
}
export interface QueryToSwift_codesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSwift_codesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSwift_messageArgs {
  query?: GQLSwift_messageQueryInput;
}
export interface QueryToSwift_messageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSwift_messageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSwift_messagesArgs {
  query?: GQLSwift_messageQueryInput;
  limit?: number;
  sortBy?: GQLSwift_messageSortByInput;
}
export interface QueryToSwift_messagesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSwift_messagesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTestArgs {
  query?: GQLTestQueryInput;
}
export interface QueryToTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTestArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTestsArgs {
  limit?: number;
  sortBy?: GQLTestSortByInput;
  query?: GQLTestQueryInput;
}
export interface QueryToTestsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTestsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTokenArgs {
  query?: GQLTokenQueryInput;
}
export interface QueryToTokenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTokenArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTokenColArgs {
  query?: GQLTokenColQueryInput;
}
export interface QueryToTokenColResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTokenColArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTokenColsArgs {
  query?: GQLTokenColQueryInput;
  limit?: number;
  sortBy?: GQLTokenColSortByInput;
}
export interface QueryToTokenColsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTokenColsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTokenCountArgs {
  input?: GQLTokenCount;
}
export interface QueryToTokenCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTokenCountArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTokenPaginationArgs {
  input?: GQLTokenPagination;
}
export interface QueryToTokenPaginationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTokenPaginationArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTokensArgs {
  query?: GQLTokenQueryInput;
  limit?: number;
  sortBy?: GQLTokenSortByInput;
}
export interface QueryToTokensResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTokensArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTriggerArgs {
  query?: GQLTriggerQueryInput;
}
export interface QueryToTriggerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTriggerArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToTriggersArgs {
  query?: GQLTriggerQueryInput;
  limit?: number;
  sortBy?: GQLTriggerSortByInput;
}
export interface QueryToTriggersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToTriggersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_assetArgs {
  query?: GQLUi_assetQueryInput;
}
export interface QueryToUi_assetResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_assetArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_assetsArgs {
  query?: GQLUi_assetQueryInput;
  limit?: number;
  sortBy?: GQLUi_assetSortByInput;
}
export interface QueryToUi_assetsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_assetsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_chartArgs {
  query?: GQLUi_chartQueryInput;
}
export interface QueryToUi_chartResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_chartArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_chartsArgs {
  query?: GQLUi_chartQueryInput;
  limit?: number;
  sortBy?: GQLUi_chartSortByInput;
}
export interface QueryToUi_chartsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_chartsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_managementArgs {
  query?: GQLUi_managementQueryInput;
}
export interface QueryToUi_managementResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_managementArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_managementsArgs {
  query?: GQLUi_managementQueryInput;
  limit?: number;
  sortBy?: GQLUi_managementSortByInput;
}
export interface QueryToUi_managementsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_managementsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_moduleArgs {
  query?: GQLUi_moduleQueryInput;
}
export interface QueryToUi_moduleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_moduleArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUi_modulesArgs {
  query?: GQLUi_moduleQueryInput;
  limit?: number;
  sortBy?: GQLUi_moduleSortByInput;
}
export interface QueryToUi_modulesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUi_modulesArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUserArgs {
  query?: GQLUserQueryInput;
}
export interface QueryToUserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUserArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToUsersArgs {
  query?: GQLUserQueryInput;
  limit?: number;
  sortBy?: GQLUserSortByInput;
}
export interface QueryToUsersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToUsersArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLContract_typeTypeResolver<TParent = any> {
  _id?: Contract_typeTo_idResolver<TParent>;
  abi?: Contract_typeToAbiResolver<TParent>;
  applicableBlockchains?: Contract_typeToApplicableBlockchainsResolver<TParent>;
  collectionDeployAvailable?: Contract_typeToCollectionDeployAvailableResolver<TParent>;
  frontendName?: Contract_typeToFrontendNameResolver<TParent>;
  hashFields?: Contract_typeToHashFieldsResolver<TParent>;
  longType?: Contract_typeToLongTypeResolver<TParent>;
  numberOfLevels?: Contract_typeToNumberOfLevelsResolver<TParent>;
  objectType?: Contract_typeToObjectTypeResolver<TParent>;
  parameters?: Contract_typeToParametersResolver<TParent>;
  status?: Contract_typeToStatusResolver<TParent>;
}

export interface Contract_typeTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToAbiResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToApplicableBlockchainsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToCollectionDeployAvailableResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToFrontendNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToHashFieldsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToLongTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToNumberOfLevelsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToObjectTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToParametersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Contract_typeToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBlockchainNetworkTypeResolver<TParent = any> {
  main?: BlockchainNetworkToMainResolver<TParent>;
  test?: BlockchainNetworkToTestResolver<TParent>;
}

export interface BlockchainNetworkToMainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BlockchainNetworkToTestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBlockchainNetworkTestTypeResolver<TParent = any> {
  browser?: BlockchainNetworkTestToBrowserResolver<TParent>;
  endpoint?: BlockchainNetworkTestToEndpointResolver<TParent>;
}

export interface BlockchainNetworkTestToBrowserResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BlockchainNetworkTestToEndpointResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenColImageTypeResolver<TParent = any> {
  hash?: TokenColImageToHashResolver<TParent>;
  height?: TokenColImageToHeightResolver<TParent>;
  mimetype?: TokenColImageToMimetypeResolver<TParent>;
  rarity?: TokenColImageToRarityResolver<TParent>;
  subtitle?: TokenColImageToSubtitleResolver<TParent>;
  weight?: TokenColImageToWeightResolver<TParent>;
  width?: TokenColImageToWidthResolver<TParent>;
}

export interface TokenColImageToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColImageToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColImageToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColImageToRarityResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColImageToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColImageToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenColImageToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUserIntegrationTypeResolver<TParent = any> {
  name?: UserIntegrationToNameResolver<TParent>;
  priority?: UserIntegrationToPriorityResolver<TParent>;
  shadowAddresses?: UserIntegrationToShadowAddressesResolver<TParent>;
}

export interface UserIntegrationToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserIntegrationToPriorityResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserIntegrationToShadowAddressesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLUserSettingTypeResolver<TParent = any> {
  defaultWallet?: UserSettingToDefaultWalletResolver<TParent>;
  language?: UserSettingToLanguageResolver<TParent>;
  notifiedOfCookies?: UserSettingToNotifiedOfCookiesResolver<TParent>;
}

export interface UserSettingToDefaultWalletResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserSettingToLanguageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface UserSettingToNotifiedOfCookiesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLActionActionAttributeTypeResolver<TParent = any> {
  actionCapture?: ActionActionAttributeToActionCaptureResolver<TParent>;
  actionStatus?: ActionActionAttributeToActionStatusResolver<TParent>;
  askCreator?: ActionActionAttributeToAskCreatorResolver<TParent>;
  askEndTime?: ActionActionAttributeToAskEndTimeResolver<TParent>;
  askValue?: ActionActionAttributeToAskValueResolver<TParent>;
  auctionCreator?: ActionActionAttributeToAuctionCreatorResolver<TParent>;
  auctionEndTime?: ActionActionAttributeToAuctionEndTimeResolver<TParent>;
  auctionStartTime?: ActionActionAttributeToAuctionStartTimeResolver<TParent>;
  bidCreator?: ActionActionAttributeToBidCreatorResolver<TParent>;
  bidEndTime?: ActionActionAttributeToBidEndTimeResolver<TParent>;
  bidStep?: ActionActionAttributeToBidStepResolver<TParent>;
  bidValue?: ActionActionAttributeToBidValueResolver<TParent>;
  endorsementCreator?: ActionActionAttributeToEndorsementCreatorResolver<TParent>;
  finalBidValue?: ActionActionAttributeToFinalBidValueResolver<TParent>;
  managerExpirationTime?: ActionActionAttributeToManagerExpirationTimeResolver<TParent>;
  managerSuperType?: ActionActionAttributeToManagerSuperTypeResolver<TParent>;
  minimalBid?: ActionActionAttributeToMinimalBidResolver<TParent>;
  releasedBidOwner?: ActionActionAttributeToReleasedBidOwnerResolver<TParent>;
  releasedBidValue?: ActionActionAttributeToReleasedBidValueResolver<TParent>;
  sealCreator?: ActionActionAttributeToSealCreatorResolver<TParent>;
  showcaseFee?: ActionActionAttributeToShowcaseFeeResolver<TParent>;
  submittedBidOwner?: ActionActionAttributeToSubmittedBidOwnerResolver<TParent>;
  submittedBidValue?: ActionActionAttributeToSubmittedBidValueResolver<TParent>;
  usdValue?: ActionActionAttributeToUsdValueResolver<TParent>;
}

export interface ActionActionAttributeToActionCaptureResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToActionStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToAskCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToAskEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToAskValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToAuctionCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToAuctionEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToAuctionStartTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToBidCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToBidEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToBidStepResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToEndorsementCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToFinalBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToManagerExpirationTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToManagerSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToMinimalBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToReleasedBidOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToReleasedBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToSealCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToShowcaseFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToSubmittedBidOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToSubmittedBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface ActionActionAttributeToUsdValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTokenRawTypeResolver<TParent = any> {
  blockchain?: TokenRawToBlockchainResolver<TParent>;
  collectionID?: TokenRawToCollectionIDResolver<TParent>;
  creator?: TokenRawToCreatorResolver<TParent>;
  creatorFees?: TokenRawToCreatorFeesResolver<TParent>;
  description?: TokenRawToDescriptionResolver<TParent>;
  hash?: TokenRawToHashResolver<TParent>;
  height?: TokenRawToHeightResolver<TParent>;
  media?: TokenRawToMediaResolver<TParent>;
  numberOfEditions?: TokenRawToNumberOfEditionsResolver<TParent>;
  owner?: TokenRawToOwnerResolver<TParent>;
  qualification?: TokenRawToQualificationResolver<TParent>;
  seriesID?: TokenRawToSeriesIDResolver<TParent>;
  superType?: TokenRawToSuperTypeResolver<TParent>;
  title?: TokenRawToTitleResolver<TParent>;
  type?: TokenRawToTypeResolver<TParent>;
  usersWhoShared?: TokenRawToUsersWhoSharedResolver<TParent>;
  width?: TokenRawToWidthResolver<TParent>;
}

export interface TokenRawToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToCollectionIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToCreatorFeesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToMediaResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToNumberOfEditionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToQualificationResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToSeriesIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToUsersWhoSharedResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TokenRawToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAuctionRawTypeResolver<TParent = any> {
  auctionCreator?: AuctionRawToAuctionCreatorResolver<TParent>;
  bidStep?: AuctionRawToBidStepResolver<TParent>;
  bids?: AuctionRawToBidsResolver<TParent>;
  endTime?: AuctionRawToEndTimeResolver<TParent>;
  showcaseFee?: AuctionRawToShowcaseFeeResolver<TParent>;
  startBid?: AuctionRawToStartBidResolver<TParent>;
  startTime?: AuctionRawToStartTimeResolver<TParent>;
  superType?: AuctionRawToSuperTypeResolver<TParent>;
  tokenAddress?: AuctionRawToTokenAddressResolver<TParent>;
  tokenID?: AuctionRawToTokenIDResolver<TParent>;
}

export interface AuctionRawToAuctionCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToBidStepResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToBidsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToShowcaseFeeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToStartBidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToStartTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionRawToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLCol1LayerImageTypeResolver<TParent = any> {
  hash?: Col1LayerImageToHashResolver<TParent>;
  height?: Col1LayerImageToHeightResolver<TParent>;
  mimetype?: Col1LayerImageToMimetypeResolver<TParent>;
  rarity?: Col1LayerImageToRarityResolver<TParent>;
  subtitle?: Col1LayerImageToSubtitleResolver<TParent>;
  weight?: Col1LayerImageToWeightResolver<TParent>;
  width?: Col1LayerImageToWidthResolver<TParent>;
}

export interface Col1LayerImageToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerImageToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerImageToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerImageToRarityResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerImageToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerImageToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Col1LayerImageToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAuctionDeployedBidTypeResolver<TParent = any> {
  bidCreator?: AuctionDeployedBidToBidCreatorResolver<TParent>;
  bidStatus?: AuctionDeployedBidToBidStatusResolver<TParent>;
  bidValue?: AuctionDeployedBidToBidValueResolver<TParent>;
}

export interface AuctionDeployedBidToBidCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedBidToBidStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AuctionDeployedBidToBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLTestCrossEndorsementTypeResolver<TParent = any> {
  masterID?: TestCrossEndorsementToMasterIDResolver<TParent>;
  mediaType?: TestCrossEndorsementToMediaTypeResolver<TParent>;
}

export interface TestCrossEndorsementToMasterIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface TestCrossEndorsementToMediaTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLEventParameterTypeResolver<TParent = any> {
  expiresAt?: EventParameterToExpiresAtResolver<TParent>;
  masterAddress?: EventParameterToMasterAddressResolver<TParent>;
  masterNftId?: EventParameterToMasterNftIdResolver<TParent>;
  price?: EventParameterToPriceResolver<TParent>;
  sealAddress?: EventParameterToSealAddressResolver<TParent>;
  sealNftId?: EventParameterToSealNftIdResolver<TParent>;
  sealPossibleCorners?: EventParameterToSealPossibleCornersResolver<TParent>;
  tokenAddress?: EventParameterToTokenAddressResolver<TParent>;
  tokenNftId?: EventParameterToTokenNftIdResolver<TParent>;
}

export interface EventParameterToExpiresAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToMasterAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToMasterNftIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToPriceResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToSealAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToSealNftIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToSealPossibleCornersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EventParameterToTokenNftIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLBidRawTypeResolver<TParent = any> {
  bidCreator?: BidRawToBidCreatorResolver<TParent>;
  bidValue?: BidRawToBidValueResolver<TParent>;
  endTime?: BidRawToEndTimeResolver<TParent>;
  superType?: BidRawToSuperTypeResolver<TParent>;
  tokenAddress?: BidRawToTokenAddressResolver<TParent>;
  tokenID?: BidRawToTokenIDResolver<TParent>;
}

export interface BidRawToBidCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidRawToBidValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidRawToEndTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidRawToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidRawToTokenAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface BidRawToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLDeleteManyPayloadTypeResolver<TParent = any> {
  deletedCount?: DeleteManyPayloadToDeletedCountResolver<TParent>;
}

export interface DeleteManyPayloadToDeletedCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLFormatTypeResolver<TParent = any> {
  _id?: FormatTo_idResolver<TParent>;
  formatName?: FormatToFormatNameResolver<TParent>;
  height?: FormatToHeightResolver<TParent>;
  width?: FormatToWidthResolver<TParent>;
}

export interface FormatTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FormatToFormatNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FormatToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FormatToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLEndorsementDeployedTypeResolver<TParent = any> {
  blockchain?: EndorsementDeployedToBlockchainResolver<TParent>;
  corner?: EndorsementDeployedToCornerResolver<TParent>;
  creator?: EndorsementDeployedToCreatorResolver<TParent>;
  expiresAt?: EndorsementDeployedToExpiresAtResolver<TParent>;
  masterID?: EndorsementDeployedToMasterIDResolver<TParent>;
  masterMediaType?: EndorsementDeployedToMasterMediaTypeResolver<TParent>;
  requestedCorners?: EndorsementDeployedToRequestedCornersResolver<TParent>;
  sealID?: EndorsementDeployedToSealIDResolver<TParent>;
  status?: EndorsementDeployedToStatusResolver<TParent>;
  superType?: EndorsementDeployedToSuperTypeResolver<TParent>;
  tokenID?: EndorsementDeployedToTokenIDResolver<TParent>;
  type?: EndorsementDeployedToTypeResolver<TParent>;
  value?: EndorsementDeployedToValueResolver<TParent>;
}

export interface EndorsementDeployedToBlockchainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToCornerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToExpiresAtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToMasterIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToMasterMediaTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToRequestedCornersResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToSealIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface EndorsementDeployedToValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAskRawValueTypeResolver<TParent = any> {
  askTime?: AskRawValueToAskTimeResolver<TParent>;
  askValue?: AskRawValueToAskValueResolver<TParent>;
}

export interface AskRawValueToAskTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AskRawValueToAskValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSwift_messageMessageTypeResolver<TParent = any> {
  actionCode?: Swift_messageMessageToActionCodeResolver<TParent>;
  discoveryTime?: Swift_messageMessageToDiscoveryTimeResolver<TParent>;
  parsingTime?: Swift_messageMessageToParsingTimeResolver<TParent>;
  resolution?: Swift_messageMessageToResolutionResolver<TParent>;
  senderAddress?: Swift_messageMessageToSenderAddressResolver<TParent>;
  superType?: Swift_messageMessageToSuperTypeResolver<TParent>;
  time?: Swift_messageMessageToTimeResolver<TParent>;
}

export interface Swift_messageMessageToActionCodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageMessageToDiscoveryTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageMessageToParsingTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageMessageToResolutionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageMessageToSenderAddressResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageMessageToSuperTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface Swift_messageMessageToTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLLikeTypeResolver<TParent = any> {
  _id?: LikeTo_idResolver<TParent>;
  seriesID?: LikeToSeriesIDResolver<TParent>;
  status?: LikeToStatusResolver<TParent>;
  tokenID?: LikeToTokenIDResolver<TParent>;
  userAccountNumber?: LikeToUserAccountNumberResolver<TParent>;
}

export interface LikeTo_idResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LikeToSeriesIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LikeToStatusResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LikeToTokenIDResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface LikeToUserAccountNumberResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSeriesRawMediumTypeResolver<TParent = any> {
  hash?: SeriesRawMediumToHashResolver<TParent>;
  height?: SeriesRawMediumToHeightResolver<TParent>;
  ipfsHash?: SeriesRawMediumToIpfsHashResolver<TParent>;
  mimetype?: SeriesRawMediumToMimetypeResolver<TParent>;
  role?: SeriesRawMediumToRoleResolver<TParent>;
  subtitle?: SeriesRawMediumToSubtitleResolver<TParent>;
  weight?: SeriesRawMediumToWeightResolver<TParent>;
  width?: SeriesRawMediumToWidthResolver<TParent>;
}

export interface SeriesRawMediumToHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToHeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToIpfsHashResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToMimetypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToRoleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToSubtitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToWeightResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SeriesRawMediumToWidthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}
